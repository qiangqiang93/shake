{"map":"{\"version\":3,\"sources\":[\"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"7aea4072-vue-loader-template\\\"}!/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiang/work/hytx/hytx-rebuild/src/components/AppUploadImg/index.vue?vue&type=template&id=6a63d7f2&scoped=true&\",\"src/components/AppUploadImg/index.vue\",\"/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/loaders/pitcher.js??ref--4!/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js??ref--12-0!/Users/qiang/work/hytx/hytx-rebuild/node_modules/thread-loader/dist/cjs.js!/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js!/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js??ref--13-0!/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js??ref--13-0!/Users/qiang/work/hytx/hytx-rebuild/src/components/AppUploadImg/index.vue?vue&type=script&lang=js&\",\"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js??ref--13-0!/Users/qiang/work/hytx/hytx-rebuild/src/components/AppUploadImg/index.vue\",\"/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/loaders/pitcher.js??ref--4!/Users/qiang/work/hytx/hytx-rebuild/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!/Users/qiang/work/hytx/hytx-rebuild/node_modules/css-loader/index.js??ref--8-oneOf-1-1!/Users/qiang/work/hytx/hytx-rebuild/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!/Users/qiang/work/hytx/hytx-rebuild/node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js??ref--13-0!/Users/qiang/work/hytx/hytx-rebuild/src/components/AppUploadImg/index.vue?vue&type=style&index=0&id=6a63d7f2&lang=scss&scoped=true&\",\"/Users/qiang/work/hytx/hytx-rebuild/node_modules/exif-js/exif.js\"],\"names\":[\"render\",\"_vm\",\"this\",\"_h\",\"$createElement\",\"_c\",\"_self\",\"attrs\",\"type\",\"accept\",\"on\",\"change\",\"$event\",\"cropImg\",\"staticRenderFns\",\"AppUploadImgvue_type_script_lang_js_\",\"props\",\"data\",\"eventName\",\"orientation\",\"mounted\",\"concat\",\"parseInt\",\"Math\",\"random\",\"eventBus\",\"$on\",\"path\",\"$emit\",\"methods\",\"_objectSpread\",\"Object\",\"vuex_esm\",\"_cropImg\",\"_asyncToGenerator\",\"regenerator_default\",\"a\",\"mark\",\"_callee\",\"event\",\"file\",\"wrap\",\"_context\",\"prev\",\"next\",\"target\",\"files\",\"round\",\"size\",\"config\",\"MaxSize\",\"dialogService\",\"alert\",\"abrupt\",\"toBase64\",\"sent\",\"compress\",\"ratio\",\"$router\",\"push\",\"stop\",\"_x\",\"apply\",\"arguments\",\"_toBase\",\"_callee2\",\"_context2\",\"Promise\",\"resolve\",\"reject\",\"fileReader\",\"FileReader\",\"readAsDataURL\",\"onload\",\"e\",\"result\",\"_x2\",\"_compress\",\"_callee3\",\"base64\",\"_context3\",\"img\",\"Image\",\"src\",\"exif_default\",\"getData\",\"context\",\"width\",\"height\",\"canvas\",\"document\",\"createElement\",\"getTag\",\"getContext\",\"translate\",\"rotate\",\"PI\",\"drawImage\",\"toDataURL\",\"_x3\",\"destroyed\",\"$off\",\"components_AppUploadImgvue_type_script_lang_js_\",\"component\",\"componentNormalizer\",\"options\",\"__file\",\"__webpack_exports__\",\"_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_6a63d7f2_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__\",\"__webpack_require__\",\"_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_6a63d7f2_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default\",\"n\",\"__WEBPACK_AMD_DEFINE_ARRAY__\",\"__WEBPACK_AMD_DEFINE_RESULT__\",\"debug\",\"EXIF\",\"obj\",\"EXIFwrapped\",\"module\",\"exports\",\"ExifTags\",\"Tags\",\"36864\",\"40960\",\"40961\",\"40962\",\"40963\",\"37121\",\"37122\",\"37500\",\"37510\",\"40964\",\"36867\",\"36868\",\"37520\",\"37521\",\"37522\",\"33434\",\"33437\",\"34850\",\"34852\",\"34855\",\"34856\",\"37377\",\"37378\",\"37379\",\"37380\",\"37381\",\"37382\",\"37383\",\"37384\",\"37385\",\"37396\",\"37386\",\"41483\",\"41484\",\"41486\",\"41487\",\"41488\",\"41492\",\"41493\",\"41495\",\"41728\",\"41729\",\"41730\",\"41985\",\"41986\",\"41987\",\"41988\",\"41989\",\"41990\",\"41991\",\"41992\",\"41993\",\"41994\",\"41995\",\"41996\",\"40965\",\"42016\",\"TiffTags\",\"256\",\"257\",\"34665\",\"34853\",\"258\",\"259\",\"262\",\"274\",\"277\",\"284\",\"530\",\"531\",\"282\",\"283\",\"296\",\"273\",\"278\",\"279\",\"513\",\"514\",\"301\",\"318\",\"319\",\"529\",\"532\",\"306\",\"270\",\"271\",\"272\",\"305\",\"315\",\"33432\",\"GPSTags\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"IFD1Tags\",\"StringValues\",\"ExposureProgram\",\"MeteringMode\",\"255\",\"LightSource\",\"Flash\",\"31\",\"32\",\"65\",\"69\",\"71\",\"73\",\"77\",\"79\",\"89\",\"93\",\"95\",\"SensingMethod\",\"SceneCaptureType\",\"SceneType\",\"CustomRendered\",\"WhiteBalance\",\"GainControl\",\"Contrast\",\"Saturation\",\"Sharpness\",\"SubjectDistanceRange\",\"FileSource\",\"Components\",\"imageHasData\",\"base64ToArrayBuffer\",\"contentType\",\"match\",\"replace\",\"binary\",\"atob\",\"len\",\"length\",\"buffer\",\"ArrayBuffer\",\"view\",\"Uint8Array\",\"i\",\"charCodeAt\",\"objectURLToBlob\",\"url\",\"callback\",\"http\",\"XMLHttpRequest\",\"open\",\"responseType\",\"status\",\"response\",\"send\",\"getImageData\",\"handleBinaryFile\",\"binFile\",\"findEXIFinJPEG\",\"exifdata\",\"iptcdata\",\"findIPTCinJPEG\",\"isXmpEnabled\",\"xmpdata\",\"findXMPinJPEG\",\"call\",\"test\",\"arrayBuffer\",\"blob\",\"readAsArrayBuffer\",\"self\",\"Blob\",\"File\",\"console\",\"log\",\"byteLength\",\"dataView\",\"DataView\",\"getUint8\",\"marker\",\"offset\",\"readEXIFData\",\"getUint16\",\"isFieldSegmentStart\",\"nameHeaderLength\",\"startOffset\",\"sectionLength\",\"readIPTCData\",\"IptcFieldMap\",\"120\",\"110\",\"55\",\"80\",\"85\",\"122\",\"105\",\"116\",\"fieldValue\",\"fieldName\",\"dataSize\",\"segmentType\",\"segmentStartPos\",\"getInt16\",\"getStringFromDB\",\"hasOwnProperty\",\"Array\",\"readTags\",\"tiffStart\",\"dirStart\",\"strings\",\"bigEnd\",\"entryOffset\",\"tag\",\"entries\",\"tags\",\"readTagValue\",\"vals\",\"val\",\"numerator\",\"denominator\",\"numValues\",\"getUint32\",\"valueOffset\",\"Number\",\"getInt32\",\"getNextIFDOffset\",\"readThumbnailImage\",\"firstIFDOffset\",\"IFD1OffsetPointer\",\"thumbTags\",\"JpegIFOffset\",\"JpegIFByteCount\",\"tOffset\",\"tLength\",\"start\",\"outstr\",\"String\",\"fromCharCode\",\"exifData\",\"gpsData\",\"tiffOffset\",\"ExifIFDPointer\",\"GPSInfoIFDPointer\",\"dom\",\"DOMParser\",\"xmpString\",\"xmpEndIndex\",\"indexOf\",\"substring\",\"indexOfXmp\",\"slice\",\"domDocument\",\"parseFromString\",\"xml2Object\",\"xml2json\",\"xml\",\"json\",\"nodeType\",\"attributes\",\"j\",\"attribute\",\"item\",\"nodeName\",\"nodeValue\",\"hasChildNodes\",\"childNodes\",\"child\",\"old\",\"children\",\"idx\",\"itemAtt\",\"dataKey\",\"dataValue\",\"undefined\",\"textContent\",\"message\",\"enableXmp\",\"disableXmp\",\"HTMLImageElement\",\"complete\",\"getIptcTag\",\"getAllTags\",\"getAllIptcTags\",\"pretty\",\"strPretty\",\"readFromBinaryFile\"],\"mappings\":\"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\",\"sourcesContent\":[\"var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('input',{attrs:{\\\"type\\\":\\\"file\\\",\\\"accept\\\":\\\"image/*\\\"},on:{\\\"change\\\":function($event){_vm.cropImg($event)}}})}\\nvar staticRenderFns = []\\n\\nexport { render, staticRenderFns }\",\"<!--\\n    @name       AppUploadImg\\n    @desc       文件上传组件\\n    @props  \\n        ratio   number              图片比例\\n        success function            上传成功之后的回调函数\\n-->\\n\\n<template>\\n  <input type=\\\"file\\\" accept=\\\"image/*\\\" @change=\\\"cropImg($event)\\\">\\n</template>\\n\\n<script>\\nimport Exif from 'exif-js'\\nimport config from '../../config'\\nimport { mapActions } from 'vuex'\\nimport eventBus from '../../utils/eventBus'\\nimport dialogService from '../../service/dialogService'\\n\\nexport default {\\n  props: ['type', 'ratio'],\\n  data() {\\n    return {\\n      eventName: null, // 当前组件事件名称\\n      orientation: null // 旋转方向\\n    }\\n  },\\n  mounted() {\\n    let _self = this\\n    _self.eventName = `AppUploadEvent_${parseInt(Math.random() * 1000)}`\\n    eventBus.$on(_self.eventName, function(path) {\\n      _self.$emit('success', path)\\n    })\\n  },\\n  methods: {\\n    ...mapActions(['system/updateCropper']),\\n    async cropImg(event) {\\n      let file = event.target.files[0]\\n      if (Math.round(file.size / 1024 / 1024) > config.MaxSize) {\\n        dialogService.alert(`请上传${config.MaxSize}M以下的图片`)\\n        return false\\n      }\\n      file = await this.toBase64(file)\\n      file = await this.compress(file)\\n      this['system/updateCropper']({\\n        file: file,\\n        ratio: this.ratio,\\n        eventName: this.eventName\\n      })\\n      this.$router.push({ path: '/cropper' })\\n    },\\n    // 将图片转化为base64\\n    async toBase64(file) {\\n      return new Promise((resolve, reject) => {\\n        let fileReader = new FileReader()\\n        fileReader.readAsDataURL(file)\\n        fileReader.onload = function(e) {\\n          resolve(e.target.result)\\n        }\\n      })\\n    },\\n    // 压缩转换的base64\\n    async compress(base64) {\\n      let _self = this\\n      return new Promise((resolve, reject) => {\\n        let img = new Image()\\n        img.src = base64\\n        img.onload = function() {\\n          Exif.getData(img, function() {\\n            let context\\n            let width = img.width\\n            let height = img.height\\n            let canvas = document.createElement('canvas')\\n            let orientation = Exif.getTag(img, 'Orientation')\\n            // 旋转参数说明 https://baiyunliu.iteye.com/blog/2067000\\n            // 暂时仅解决 orientation 为6时的问题\\n            if (orientation === 6) {\\n              height = height > 750 ? 750 : height\\n              width = img.height > 750 ? (750 / img.height) * width : width\\n              canvas.width = height\\n              canvas.height = width\\n              context = canvas.getContext('2d')\\n              context.translate(height / 2, width / 2)\\n              context.rotate((90 * Math.PI) / 180)\\n              context.drawImage(img, -width / 2, -height / 2, width, height)\\n            } else {\\n              width = width > 750 ? 750 : width\\n              height = img.width > 750 ? (750 / img.width) * height : height\\n              canvas.width = width\\n              canvas.height = height\\n              context = canvas.getContext('2d')\\n              context.drawImage(img, 0, 0, width, height)\\n            }\\n            base64 = canvas.toDataURL('image/jpeg', 0.8)\\n            resolve(base64)\\n          })\\n        }\\n      })\\n    }\\n  },\\n  destroyed() {\\n    eventBus.$off(this.eventName)\\n  }\\n}\\n</script>\\n\\n<style lang=\\\"scss\\\" scoped>\\n</style>\\n\",\"import mod from \\\"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\\\"; export default mod; export * from \\\"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\\\"\",\"import { render, staticRenderFns } from \\\"./index.vue?vue&type=template&id=6a63d7f2&scoped=true&\\\"\\nimport script from \\\"./index.vue?vue&type=script&lang=js&\\\"\\nexport * from \\\"./index.vue?vue&type=script&lang=js&\\\"\\nimport style0 from \\\"./index.vue?vue&type=style&index=0&id=6a63d7f2&lang=scss&scoped=true&\\\"\\n\\n\\n/* normalize component */\\nimport normalizer from \\\"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\\\"\\nvar component = normalizer(\\n  script,\\n  render,\\n  staticRenderFns,\\n  false,\\n  null,\\n  \\\"6a63d7f2\\\",\\n  null\\n  \\n)\\n\\ncomponent.options.__file = \\\"index.vue\\\"\\nexport default component.exports\",\"import mod from \\\"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=6a63d7f2&lang=scss&scoped=true&\\\"; export default mod; export * from \\\"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=6a63d7f2&lang=scss&scoped=true&\\\"\",\"(function() {\\n\\n    var debug = false;\\n\\n    var root = this;\\n\\n    var EXIF = function(obj) {\\n        if (obj instanceof EXIF) return obj;\\n        if (!(this instanceof EXIF)) return new EXIF(obj);\\n        this.EXIFwrapped = obj;\\n    };\\n\\n    if (typeof exports !== 'undefined') {\\n        if (typeof module !== 'undefined' && module.exports) {\\n            exports = module.exports = EXIF;\\n        }\\n        exports.EXIF = EXIF;\\n    } else {\\n        root.EXIF = EXIF;\\n    }\\n\\n    var ExifTags = EXIF.Tags = {\\n\\n        // version tags\\n        0x9000 : \\\"ExifVersion\\\",             // EXIF version\\n        0xA000 : \\\"FlashpixVersion\\\",         // Flashpix format version\\n\\n        // colorspace tags\\n        0xA001 : \\\"ColorSpace\\\",              // Color space information tag\\n\\n        // image configuration\\n        0xA002 : \\\"PixelXDimension\\\",         // Valid width of meaningful image\\n        0xA003 : \\\"PixelYDimension\\\",         // Valid height of meaningful image\\n        0x9101 : \\\"ComponentsConfiguration\\\", // Information about channels\\n        0x9102 : \\\"CompressedBitsPerPixel\\\",  // Compressed bits per pixel\\n\\n        // user information\\n        0x927C : \\\"MakerNote\\\",               // Any desired information written by the manufacturer\\n        0x9286 : \\\"UserComment\\\",             // Comments by user\\n\\n        // related file\\n        0xA004 : \\\"RelatedSoundFile\\\",        // Name of related sound file\\n\\n        // date and time\\n        0x9003 : \\\"DateTimeOriginal\\\",        // Date and time when the original image was generated\\n        0x9004 : \\\"DateTimeDigitized\\\",       // Date and time when the image was stored digitally\\n        0x9290 : \\\"SubsecTime\\\",              // Fractions of seconds for DateTime\\n        0x9291 : \\\"SubsecTimeOriginal\\\",      // Fractions of seconds for DateTimeOriginal\\n        0x9292 : \\\"SubsecTimeDigitized\\\",     // Fractions of seconds for DateTimeDigitized\\n\\n        // picture-taking conditions\\n        0x829A : \\\"ExposureTime\\\",            // Exposure time (in seconds)\\n        0x829D : \\\"FNumber\\\",                 // F number\\n        0x8822 : \\\"ExposureProgram\\\",         // Exposure program\\n        0x8824 : \\\"SpectralSensitivity\\\",     // Spectral sensitivity\\n        0x8827 : \\\"ISOSpeedRatings\\\",         // ISO speed rating\\n        0x8828 : \\\"OECF\\\",                    // Optoelectric conversion factor\\n        0x9201 : \\\"ShutterSpeedValue\\\",       // Shutter speed\\n        0x9202 : \\\"ApertureValue\\\",           // Lens aperture\\n        0x9203 : \\\"BrightnessValue\\\",         // Value of brightness\\n        0x9204 : \\\"ExposureBias\\\",            // Exposure bias\\n        0x9205 : \\\"MaxApertureValue\\\",        // Smallest F number of lens\\n        0x9206 : \\\"SubjectDistance\\\",         // Distance to subject in meters\\n        0x9207 : \\\"MeteringMode\\\",            // Metering mode\\n        0x9208 : \\\"LightSource\\\",             // Kind of light source\\n        0x9209 : \\\"Flash\\\",                   // Flash status\\n        0x9214 : \\\"SubjectArea\\\",             // Location and area of main subject\\n        0x920A : \\\"FocalLength\\\",             // Focal length of the lens in mm\\n        0xA20B : \\\"FlashEnergy\\\",             // Strobe energy in BCPS\\n        0xA20C : \\\"SpatialFrequencyResponse\\\",    //\\n        0xA20E : \\\"FocalPlaneXResolution\\\",   // Number of pixels in width direction per FocalPlaneResolutionUnit\\n        0xA20F : \\\"FocalPlaneYResolution\\\",   // Number of pixels in height direction per FocalPlaneResolutionUnit\\n        0xA210 : \\\"FocalPlaneResolutionUnit\\\",    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\\n        0xA214 : \\\"SubjectLocation\\\",         // Location of subject in image\\n        0xA215 : \\\"ExposureIndex\\\",           // Exposure index selected on camera\\n        0xA217 : \\\"SensingMethod\\\",           // Image sensor type\\n        0xA300 : \\\"FileSource\\\",              // Image source (3 == DSC)\\n        0xA301 : \\\"SceneType\\\",               // Scene type (1 == directly photographed)\\n        0xA302 : \\\"CFAPattern\\\",              // Color filter array geometric pattern\\n        0xA401 : \\\"CustomRendered\\\",          // Special processing\\n        0xA402 : \\\"ExposureMode\\\",            // Exposure mode\\n        0xA403 : \\\"WhiteBalance\\\",            // 1 = auto white balance, 2 = manual\\n        0xA404 : \\\"DigitalZoomRation\\\",       // Digital zoom ratio\\n        0xA405 : \\\"FocalLengthIn35mmFilm\\\",   // Equivalent foacl length assuming 35mm film camera (in mm)\\n        0xA406 : \\\"SceneCaptureType\\\",        // Type of scene\\n        0xA407 : \\\"GainControl\\\",             // Degree of overall image gain adjustment\\n        0xA408 : \\\"Contrast\\\",                // Direction of contrast processing applied by camera\\n        0xA409 : \\\"Saturation\\\",              // Direction of saturation processing applied by camera\\n        0xA40A : \\\"Sharpness\\\",               // Direction of sharpness processing applied by camera\\n        0xA40B : \\\"DeviceSettingDescription\\\",    //\\n        0xA40C : \\\"SubjectDistanceRange\\\",    // Distance to subject\\n\\n        // other tags\\n        0xA005 : \\\"InteroperabilityIFDPointer\\\",\\n        0xA420 : \\\"ImageUniqueID\\\"            // Identifier assigned uniquely to each image\\n    };\\n\\n    var TiffTags = EXIF.TiffTags = {\\n        0x0100 : \\\"ImageWidth\\\",\\n        0x0101 : \\\"ImageHeight\\\",\\n        0x8769 : \\\"ExifIFDPointer\\\",\\n        0x8825 : \\\"GPSInfoIFDPointer\\\",\\n        0xA005 : \\\"InteroperabilityIFDPointer\\\",\\n        0x0102 : \\\"BitsPerSample\\\",\\n        0x0103 : \\\"Compression\\\",\\n        0x0106 : \\\"PhotometricInterpretation\\\",\\n        0x0112 : \\\"Orientation\\\",\\n        0x0115 : \\\"SamplesPerPixel\\\",\\n        0x011C : \\\"PlanarConfiguration\\\",\\n        0x0212 : \\\"YCbCrSubSampling\\\",\\n        0x0213 : \\\"YCbCrPositioning\\\",\\n        0x011A : \\\"XResolution\\\",\\n        0x011B : \\\"YResolution\\\",\\n        0x0128 : \\\"ResolutionUnit\\\",\\n        0x0111 : \\\"StripOffsets\\\",\\n        0x0116 : \\\"RowsPerStrip\\\",\\n        0x0117 : \\\"StripByteCounts\\\",\\n        0x0201 : \\\"JPEGInterchangeFormat\\\",\\n        0x0202 : \\\"JPEGInterchangeFormatLength\\\",\\n        0x012D : \\\"TransferFunction\\\",\\n        0x013E : \\\"WhitePoint\\\",\\n        0x013F : \\\"PrimaryChromaticities\\\",\\n        0x0211 : \\\"YCbCrCoefficients\\\",\\n        0x0214 : \\\"ReferenceBlackWhite\\\",\\n        0x0132 : \\\"DateTime\\\",\\n        0x010E : \\\"ImageDescription\\\",\\n        0x010F : \\\"Make\\\",\\n        0x0110 : \\\"Model\\\",\\n        0x0131 : \\\"Software\\\",\\n        0x013B : \\\"Artist\\\",\\n        0x8298 : \\\"Copyright\\\"\\n    };\\n\\n    var GPSTags = EXIF.GPSTags = {\\n        0x0000 : \\\"GPSVersionID\\\",\\n        0x0001 : \\\"GPSLatitudeRef\\\",\\n        0x0002 : \\\"GPSLatitude\\\",\\n        0x0003 : \\\"GPSLongitudeRef\\\",\\n        0x0004 : \\\"GPSLongitude\\\",\\n        0x0005 : \\\"GPSAltitudeRef\\\",\\n        0x0006 : \\\"GPSAltitude\\\",\\n        0x0007 : \\\"GPSTimeStamp\\\",\\n        0x0008 : \\\"GPSSatellites\\\",\\n        0x0009 : \\\"GPSStatus\\\",\\n        0x000A : \\\"GPSMeasureMode\\\",\\n        0x000B : \\\"GPSDOP\\\",\\n        0x000C : \\\"GPSSpeedRef\\\",\\n        0x000D : \\\"GPSSpeed\\\",\\n        0x000E : \\\"GPSTrackRef\\\",\\n        0x000F : \\\"GPSTrack\\\",\\n        0x0010 : \\\"GPSImgDirectionRef\\\",\\n        0x0011 : \\\"GPSImgDirection\\\",\\n        0x0012 : \\\"GPSMapDatum\\\",\\n        0x0013 : \\\"GPSDestLatitudeRef\\\",\\n        0x0014 : \\\"GPSDestLatitude\\\",\\n        0x0015 : \\\"GPSDestLongitudeRef\\\",\\n        0x0016 : \\\"GPSDestLongitude\\\",\\n        0x0017 : \\\"GPSDestBearingRef\\\",\\n        0x0018 : \\\"GPSDestBearing\\\",\\n        0x0019 : \\\"GPSDestDistanceRef\\\",\\n        0x001A : \\\"GPSDestDistance\\\",\\n        0x001B : \\\"GPSProcessingMethod\\\",\\n        0x001C : \\\"GPSAreaInformation\\\",\\n        0x001D : \\\"GPSDateStamp\\\",\\n        0x001E : \\\"GPSDifferential\\\"\\n    };\\n\\n     // EXIF 2.3 Spec\\n    var IFD1Tags = EXIF.IFD1Tags = {\\n        0x0100: \\\"ImageWidth\\\",\\n        0x0101: \\\"ImageHeight\\\",\\n        0x0102: \\\"BitsPerSample\\\",\\n        0x0103: \\\"Compression\\\",\\n        0x0106: \\\"PhotometricInterpretation\\\",\\n        0x0111: \\\"StripOffsets\\\",\\n        0x0112: \\\"Orientation\\\",\\n        0x0115: \\\"SamplesPerPixel\\\",\\n        0x0116: \\\"RowsPerStrip\\\",\\n        0x0117: \\\"StripByteCounts\\\",\\n        0x011A: \\\"XResolution\\\",\\n        0x011B: \\\"YResolution\\\",\\n        0x011C: \\\"PlanarConfiguration\\\",\\n        0x0128: \\\"ResolutionUnit\\\",\\n        0x0201: \\\"JpegIFOffset\\\",    // When image format is JPEG, this value show offset to JPEG data stored.(aka \\\"ThumbnailOffset\\\" or \\\"JPEGInterchangeFormat\\\")\\n        0x0202: \\\"JpegIFByteCount\\\", // When image format is JPEG, this value shows data size of JPEG image (aka \\\"ThumbnailLength\\\" or \\\"JPEGInterchangeFormatLength\\\")\\n        0x0211: \\\"YCbCrCoefficients\\\",\\n        0x0212: \\\"YCbCrSubSampling\\\",\\n        0x0213: \\\"YCbCrPositioning\\\",\\n        0x0214: \\\"ReferenceBlackWhite\\\"\\n    };\\n\\n    var StringValues = EXIF.StringValues = {\\n        ExposureProgram : {\\n            0 : \\\"Not defined\\\",\\n            1 : \\\"Manual\\\",\\n            2 : \\\"Normal program\\\",\\n            3 : \\\"Aperture priority\\\",\\n            4 : \\\"Shutter priority\\\",\\n            5 : \\\"Creative program\\\",\\n            6 : \\\"Action program\\\",\\n            7 : \\\"Portrait mode\\\",\\n            8 : \\\"Landscape mode\\\"\\n        },\\n        MeteringMode : {\\n            0 : \\\"Unknown\\\",\\n            1 : \\\"Average\\\",\\n            2 : \\\"CenterWeightedAverage\\\",\\n            3 : \\\"Spot\\\",\\n            4 : \\\"MultiSpot\\\",\\n            5 : \\\"Pattern\\\",\\n            6 : \\\"Partial\\\",\\n            255 : \\\"Other\\\"\\n        },\\n        LightSource : {\\n            0 : \\\"Unknown\\\",\\n            1 : \\\"Daylight\\\",\\n            2 : \\\"Fluorescent\\\",\\n            3 : \\\"Tungsten (incandescent light)\\\",\\n            4 : \\\"Flash\\\",\\n            9 : \\\"Fine weather\\\",\\n            10 : \\\"Cloudy weather\\\",\\n            11 : \\\"Shade\\\",\\n            12 : \\\"Daylight fluorescent (D 5700 - 7100K)\\\",\\n            13 : \\\"Day white fluorescent (N 4600 - 5400K)\\\",\\n            14 : \\\"Cool white fluorescent (W 3900 - 4500K)\\\",\\n            15 : \\\"White fluorescent (WW 3200 - 3700K)\\\",\\n            17 : \\\"Standard light A\\\",\\n            18 : \\\"Standard light B\\\",\\n            19 : \\\"Standard light C\\\",\\n            20 : \\\"D55\\\",\\n            21 : \\\"D65\\\",\\n            22 : \\\"D75\\\",\\n            23 : \\\"D50\\\",\\n            24 : \\\"ISO studio tungsten\\\",\\n            255 : \\\"Other\\\"\\n        },\\n        Flash : {\\n            0x0000 : \\\"Flash did not fire\\\",\\n            0x0001 : \\\"Flash fired\\\",\\n            0x0005 : \\\"Strobe return light not detected\\\",\\n            0x0007 : \\\"Strobe return light detected\\\",\\n            0x0009 : \\\"Flash fired, compulsory flash mode\\\",\\n            0x000D : \\\"Flash fired, compulsory flash mode, return light not detected\\\",\\n            0x000F : \\\"Flash fired, compulsory flash mode, return light detected\\\",\\n            0x0010 : \\\"Flash did not fire, compulsory flash mode\\\",\\n            0x0018 : \\\"Flash did not fire, auto mode\\\",\\n            0x0019 : \\\"Flash fired, auto mode\\\",\\n            0x001D : \\\"Flash fired, auto mode, return light not detected\\\",\\n            0x001F : \\\"Flash fired, auto mode, return light detected\\\",\\n            0x0020 : \\\"No flash function\\\",\\n            0x0041 : \\\"Flash fired, red-eye reduction mode\\\",\\n            0x0045 : \\\"Flash fired, red-eye reduction mode, return light not detected\\\",\\n            0x0047 : \\\"Flash fired, red-eye reduction mode, return light detected\\\",\\n            0x0049 : \\\"Flash fired, compulsory flash mode, red-eye reduction mode\\\",\\n            0x004D : \\\"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\\\",\\n            0x004F : \\\"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\\\",\\n            0x0059 : \\\"Flash fired, auto mode, red-eye reduction mode\\\",\\n            0x005D : \\\"Flash fired, auto mode, return light not detected, red-eye reduction mode\\\",\\n            0x005F : \\\"Flash fired, auto mode, return light detected, red-eye reduction mode\\\"\\n        },\\n        SensingMethod : {\\n            1 : \\\"Not defined\\\",\\n            2 : \\\"One-chip color area sensor\\\",\\n            3 : \\\"Two-chip color area sensor\\\",\\n            4 : \\\"Three-chip color area sensor\\\",\\n            5 : \\\"Color sequential area sensor\\\",\\n            7 : \\\"Trilinear sensor\\\",\\n            8 : \\\"Color sequential linear sensor\\\"\\n        },\\n        SceneCaptureType : {\\n            0 : \\\"Standard\\\",\\n            1 : \\\"Landscape\\\",\\n            2 : \\\"Portrait\\\",\\n            3 : \\\"Night scene\\\"\\n        },\\n        SceneType : {\\n            1 : \\\"Directly photographed\\\"\\n        },\\n        CustomRendered : {\\n            0 : \\\"Normal process\\\",\\n            1 : \\\"Custom process\\\"\\n        },\\n        WhiteBalance : {\\n            0 : \\\"Auto white balance\\\",\\n            1 : \\\"Manual white balance\\\"\\n        },\\n        GainControl : {\\n            0 : \\\"None\\\",\\n            1 : \\\"Low gain up\\\",\\n            2 : \\\"High gain up\\\",\\n            3 : \\\"Low gain down\\\",\\n            4 : \\\"High gain down\\\"\\n        },\\n        Contrast : {\\n            0 : \\\"Normal\\\",\\n            1 : \\\"Soft\\\",\\n            2 : \\\"Hard\\\"\\n        },\\n        Saturation : {\\n            0 : \\\"Normal\\\",\\n            1 : \\\"Low saturation\\\",\\n            2 : \\\"High saturation\\\"\\n        },\\n        Sharpness : {\\n            0 : \\\"Normal\\\",\\n            1 : \\\"Soft\\\",\\n            2 : \\\"Hard\\\"\\n        },\\n        SubjectDistanceRange : {\\n            0 : \\\"Unknown\\\",\\n            1 : \\\"Macro\\\",\\n            2 : \\\"Close view\\\",\\n            3 : \\\"Distant view\\\"\\n        },\\n        FileSource : {\\n            3 : \\\"DSC\\\"\\n        },\\n\\n        Components : {\\n            0 : \\\"\\\",\\n            1 : \\\"Y\\\",\\n            2 : \\\"Cb\\\",\\n            3 : \\\"Cr\\\",\\n            4 : \\\"R\\\",\\n            5 : \\\"G\\\",\\n            6 : \\\"B\\\"\\n        }\\n    };\\n\\n    function addEvent(element, event, handler) {\\n        if (element.addEventListener) {\\n            element.addEventListener(event, handler, false);\\n        } else if (element.attachEvent) {\\n            element.attachEvent(\\\"on\\\" + event, handler);\\n        }\\n    }\\n\\n    function imageHasData(img) {\\n        return !!(img.exifdata);\\n    }\\n\\n\\n    function base64ToArrayBuffer(base64, contentType) {\\n        contentType = contentType || base64.match(/^data\\\\:([^\\\\;]+)\\\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\\n        base64 = base64.replace(/^data\\\\:([^\\\\;]+)\\\\;base64,/gmi, '');\\n        var binary = atob(base64);\\n        var len = binary.length;\\n        var buffer = new ArrayBuffer(len);\\n        var view = new Uint8Array(buffer);\\n        for (var i = 0; i < len; i++) {\\n            view[i] = binary.charCodeAt(i);\\n        }\\n        return buffer;\\n    }\\n\\n    function objectURLToBlob(url, callback) {\\n        var http = new XMLHttpRequest();\\n        http.open(\\\"GET\\\", url, true);\\n        http.responseType = \\\"blob\\\";\\n        http.onload = function(e) {\\n            if (this.status == 200 || this.status === 0) {\\n                callback(this.response);\\n            }\\n        };\\n        http.send();\\n    }\\n\\n    function getImageData(img, callback) {\\n        function handleBinaryFile(binFile) {\\n            var data = findEXIFinJPEG(binFile);\\n            img.exifdata = data || {};\\n            var iptcdata = findIPTCinJPEG(binFile);\\n            img.iptcdata = iptcdata || {};\\n            if (EXIF.isXmpEnabled) {\\n               var xmpdata= findXMPinJPEG(binFile);\\n               img.xmpdata = xmpdata || {};               \\n            }\\n            if (callback) {\\n                callback.call(img);\\n            }\\n        }\\n\\n        if (img.src) {\\n            if (/^data\\\\:/i.test(img.src)) { // Data URI\\n                var arrayBuffer = base64ToArrayBuffer(img.src);\\n                handleBinaryFile(arrayBuffer);\\n\\n            } else if (/^blob\\\\:/i.test(img.src)) { // Object URL\\n                var fileReader = new FileReader();\\n                fileReader.onload = function(e) {\\n                    handleBinaryFile(e.target.result);\\n                };\\n                objectURLToBlob(img.src, function (blob) {\\n                    fileReader.readAsArrayBuffer(blob);\\n                });\\n            } else {\\n                var http = new XMLHttpRequest();\\n                http.onload = function() {\\n                    if (this.status == 200 || this.status === 0) {\\n                        handleBinaryFile(http.response);\\n                    } else {\\n                        throw \\\"Could not load image\\\";\\n                    }\\n                    http = null;\\n                };\\n                http.open(\\\"GET\\\", img.src, true);\\n                http.responseType = \\\"arraybuffer\\\";\\n                http.send(null);\\n            }\\n        } else if (self.FileReader && (img instanceof self.Blob || img instanceof self.File)) {\\n            var fileReader = new FileReader();\\n            fileReader.onload = function(e) {\\n                if (debug) console.log(\\\"Got file of length \\\" + e.target.result.byteLength);\\n                handleBinaryFile(e.target.result);\\n            };\\n\\n            fileReader.readAsArrayBuffer(img);\\n        }\\n    }\\n\\n    function findEXIFinJPEG(file) {\\n        var dataView = new DataView(file);\\n\\n        if (debug) console.log(\\\"Got file of length \\\" + file.byteLength);\\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\\n            if (debug) console.log(\\\"Not a valid JPEG\\\");\\n            return false; // not a valid jpeg\\n        }\\n\\n        var offset = 2,\\n            length = file.byteLength,\\n            marker;\\n\\n        while (offset < length) {\\n            if (dataView.getUint8(offset) != 0xFF) {\\n                if (debug) console.log(\\\"Not a valid marker at offset \\\" + offset + \\\", found: \\\" + dataView.getUint8(offset));\\n                return false; // not a valid marker, something is wrong\\n            }\\n\\n            marker = dataView.getUint8(offset + 1);\\n            if (debug) console.log(marker);\\n\\n            // we could implement handling for other markers here,\\n            // but we're only looking for 0xFFE1 for EXIF data\\n\\n            if (marker == 225) {\\n                if (debug) console.log(\\\"Found 0xFFE1 marker\\\");\\n\\n                return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2);\\n\\n                // offset += 2 + file.getShortAt(offset+2, true);\\n\\n            } else {\\n                offset += 2 + dataView.getUint16(offset+2);\\n            }\\n\\n        }\\n\\n    }\\n\\n    function findIPTCinJPEG(file) {\\n        var dataView = new DataView(file);\\n\\n        if (debug) console.log(\\\"Got file of length \\\" + file.byteLength);\\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\\n            if (debug) console.log(\\\"Not a valid JPEG\\\");\\n            return false; // not a valid jpeg\\n        }\\n\\n        var offset = 2,\\n            length = file.byteLength;\\n\\n\\n        var isFieldSegmentStart = function(dataView, offset){\\n            return (\\n                dataView.getUint8(offset) === 0x38 &&\\n                dataView.getUint8(offset+1) === 0x42 &&\\n                dataView.getUint8(offset+2) === 0x49 &&\\n                dataView.getUint8(offset+3) === 0x4D &&\\n                dataView.getUint8(offset+4) === 0x04 &&\\n                dataView.getUint8(offset+5) === 0x04\\n            );\\n        };\\n\\n        while (offset < length) {\\n\\n            if ( isFieldSegmentStart(dataView, offset )){\\n\\n                // Get the length of the name header (which is padded to an even number of bytes)\\n                var nameHeaderLength = dataView.getUint8(offset+7);\\n                if(nameHeaderLength % 2 !== 0) nameHeaderLength += 1;\\n                // Check for pre photoshop 6 format\\n                if(nameHeaderLength === 0) {\\n                    // Always 4\\n                    nameHeaderLength = 4;\\n                }\\n\\n                var startOffset = offset + 8 + nameHeaderLength;\\n                var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\\n\\n                return readIPTCData(file, startOffset, sectionLength);\\n\\n                break;\\n\\n            }\\n\\n\\n            // Not the marker, continue searching\\n            offset++;\\n\\n        }\\n\\n    }\\n    var IptcFieldMap = {\\n        0x78 : 'caption',\\n        0x6E : 'credit',\\n        0x19 : 'keywords',\\n        0x37 : 'dateCreated',\\n        0x50 : 'byline',\\n        0x55 : 'bylineTitle',\\n        0x7A : 'captionWriter',\\n        0x69 : 'headline',\\n        0x74 : 'copyright',\\n        0x0F : 'category'\\n    };\\n    function readIPTCData(file, startOffset, sectionLength){\\n        var dataView = new DataView(file);\\n        var data = {};\\n        var fieldValue, fieldName, dataSize, segmentType, segmentSize;\\n        var segmentStartPos = startOffset;\\n        while(segmentStartPos < startOffset+sectionLength) {\\n            if(dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos+1) === 0x02){\\n                segmentType = dataView.getUint8(segmentStartPos+2);\\n                if(segmentType in IptcFieldMap) {\\n                    dataSize = dataView.getInt16(segmentStartPos+3);\\n                    segmentSize = dataSize + 5;\\n                    fieldName = IptcFieldMap[segmentType];\\n                    fieldValue = getStringFromDB(dataView, segmentStartPos+5, dataSize);\\n                    // Check if we already stored a value with this name\\n                    if(data.hasOwnProperty(fieldName)) {\\n                        // Value already stored with this name, create multivalue field\\n                        if(data[fieldName] instanceof Array) {\\n                            data[fieldName].push(fieldValue);\\n                        }\\n                        else {\\n                            data[fieldName] = [data[fieldName], fieldValue];\\n                        }\\n                    }\\n                    else {\\n                        data[fieldName] = fieldValue;\\n                    }\\n                }\\n\\n            }\\n            segmentStartPos++;\\n        }\\n        return data;\\n    }\\n\\n\\n\\n    function readTags(file, tiffStart, dirStart, strings, bigEnd) {\\n        var entries = file.getUint16(dirStart, !bigEnd),\\n            tags = {},\\n            entryOffset, tag,\\n            i;\\n\\n        for (i=0;i<entries;i++) {\\n            entryOffset = dirStart + i*12 + 2;\\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\\n            if (!tag && debug) console.log(\\\"Unknown tag: \\\" + file.getUint16(entryOffset, !bigEnd));\\n            tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\\n        }\\n        return tags;\\n    }\\n\\n\\n    function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\\n        var type = file.getUint16(entryOffset+2, !bigEnd),\\n            numValues = file.getUint32(entryOffset+4, !bigEnd),\\n            valueOffset = file.getUint32(entryOffset+8, !bigEnd) + tiffStart,\\n            offset,\\n            vals, val, n,\\n            numerator, denominator;\\n\\n        switch (type) {\\n            case 1: // byte, 8-bit unsigned int\\n            case 7: // undefined, 8-bit byte, value depending on field\\n                if (numValues == 1) {\\n                    return file.getUint8(entryOffset + 8, !bigEnd);\\n                } else {\\n                    offset = numValues > 4 ? valueOffset : (entryOffset + 8);\\n                    vals = [];\\n                    for (n=0;n<numValues;n++) {\\n                        vals[n] = file.getUint8(offset + n);\\n                    }\\n                    return vals;\\n                }\\n\\n            case 2: // ascii, 8-bit byte\\n                offset = numValues > 4 ? valueOffset : (entryOffset + 8);\\n                return getStringFromDB(file, offset, numValues-1);\\n\\n            case 3: // short, 16 bit int\\n                if (numValues == 1) {\\n                    return file.getUint16(entryOffset + 8, !bigEnd);\\n                } else {\\n                    offset = numValues > 2 ? valueOffset : (entryOffset + 8);\\n                    vals = [];\\n                    for (n=0;n<numValues;n++) {\\n                        vals[n] = file.getUint16(offset + 2*n, !bigEnd);\\n                    }\\n                    return vals;\\n                }\\n\\n            case 4: // long, 32 bit int\\n                if (numValues == 1) {\\n                    return file.getUint32(entryOffset + 8, !bigEnd);\\n                } else {\\n                    vals = [];\\n                    for (n=0;n<numValues;n++) {\\n                        vals[n] = file.getUint32(valueOffset + 4*n, !bigEnd);\\n                    }\\n                    return vals;\\n                }\\n\\n            case 5:    // rational = two long values, first is numerator, second is denominator\\n                if (numValues == 1) {\\n                    numerator = file.getUint32(valueOffset, !bigEnd);\\n                    denominator = file.getUint32(valueOffset+4, !bigEnd);\\n                    val = new Number(numerator / denominator);\\n                    val.numerator = numerator;\\n                    val.denominator = denominator;\\n                    return val;\\n                } else {\\n                    vals = [];\\n                    for (n=0;n<numValues;n++) {\\n                        numerator = file.getUint32(valueOffset + 8*n, !bigEnd);\\n                        denominator = file.getUint32(valueOffset+4 + 8*n, !bigEnd);\\n                        vals[n] = new Number(numerator / denominator);\\n                        vals[n].numerator = numerator;\\n                        vals[n].denominator = denominator;\\n                    }\\n                    return vals;\\n                }\\n\\n            case 9: // slong, 32 bit signed int\\n                if (numValues == 1) {\\n                    return file.getInt32(entryOffset + 8, !bigEnd);\\n                } else {\\n                    vals = [];\\n                    for (n=0;n<numValues;n++) {\\n                        vals[n] = file.getInt32(valueOffset + 4*n, !bigEnd);\\n                    }\\n                    return vals;\\n                }\\n\\n            case 10: // signed rational, two slongs, first is numerator, second is denominator\\n                if (numValues == 1) {\\n                    return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset+4, !bigEnd);\\n                } else {\\n                    vals = [];\\n                    for (n=0;n<numValues;n++) {\\n                        vals[n] = file.getInt32(valueOffset + 8*n, !bigEnd) / file.getInt32(valueOffset+4 + 8*n, !bigEnd);\\n                    }\\n                    return vals;\\n                }\\n        }\\n    }\\n\\n    /**\\n    * Given an IFD (Image File Directory) start offset\\n    * returns an offset to next IFD or 0 if it's the last IFD.\\n    */\\n    function getNextIFDOffset(dataView, dirStart, bigEnd){\\n        //the first 2bytes means the number of directory entries contains in this IFD\\n        var entries = dataView.getUint16(dirStart, !bigEnd);\\n\\n        // After last directory entry, there is a 4bytes of data,\\n        // it means an offset to next IFD.\\n        // If its value is '0x00000000', it means this is the last IFD and there is no linked IFD.\\n\\n        return dataView.getUint32(dirStart + 2 + entries * 12, !bigEnd); // each entry is 12 bytes long\\n    }\\n\\n    function readThumbnailImage(dataView, tiffStart, firstIFDOffset, bigEnd){\\n        // get the IFD1 offset\\n        var IFD1OffsetPointer = getNextIFDOffset(dataView, tiffStart+firstIFDOffset, bigEnd);\\n\\n        if (!IFD1OffsetPointer) {\\n            // console.log('******** IFD1Offset is empty, image thumb not found ********');\\n            return {};\\n        }\\n        else if (IFD1OffsetPointer > dataView.byteLength) { // this should not happen\\n            // console.log('******** IFD1Offset is outside the bounds of the DataView ********');\\n            return {};\\n        }\\n        // console.log('*******  thumbnail IFD offset (IFD1) is: %s', IFD1OffsetPointer);\\n\\n        var thumbTags = readTags(dataView, tiffStart, tiffStart + IFD1OffsetPointer, IFD1Tags, bigEnd)\\n\\n        // EXIF 2.3 specification for JPEG format thumbnail\\n\\n        // If the value of Compression(0x0103) Tag in IFD1 is '6', thumbnail image format is JPEG.\\n        // Most of Exif image uses JPEG format for thumbnail. In that case, you can get offset of thumbnail\\n        // by JpegIFOffset(0x0201) Tag in IFD1, size of thumbnail by JpegIFByteCount(0x0202) Tag.\\n        // Data format is ordinary JPEG format, starts from 0xFFD8 and ends by 0xFFD9. It seems that\\n        // JPEG format and 160x120pixels of size are recommended thumbnail format for Exif2.1 or later.\\n\\n        if (thumbTags['Compression']) {\\n            // console.log('Thumbnail image found!');\\n\\n            switch (thumbTags['Compression']) {\\n                case 6:\\n                    // console.log('Thumbnail image format is JPEG');\\n                    if (thumbTags.JpegIFOffset && thumbTags.JpegIFByteCount) {\\n                    // extract the thumbnail\\n                        var tOffset = tiffStart + thumbTags.JpegIFOffset;\\n                        var tLength = thumbTags.JpegIFByteCount;\\n                        thumbTags['blob'] = new Blob([new Uint8Array(dataView.buffer, tOffset, tLength)], {\\n                            type: 'image/jpeg'\\n                        });\\n                    }\\n                break;\\n\\n            case 1:\\n                console.log(\\\"Thumbnail image format is TIFF, which is not implemented.\\\");\\n                break;\\n            default:\\n                console.log(\\\"Unknown thumbnail image format '%s'\\\", thumbTags['Compression']);\\n            }\\n        }\\n        else if (thumbTags['PhotometricInterpretation'] == 2) {\\n            console.log(\\\"Thumbnail image format is RGB, which is not implemented.\\\");\\n        }\\n        return thumbTags;\\n    }\\n\\n    function getStringFromDB(buffer, start, length) {\\n        var outstr = \\\"\\\";\\n        for (n = start; n < start+length; n++) {\\n            outstr += String.fromCharCode(buffer.getUint8(n));\\n        }\\n        return outstr;\\n    }\\n\\n    function readEXIFData(file, start) {\\n        if (getStringFromDB(file, start, 4) != \\\"Exif\\\") {\\n            if (debug) console.log(\\\"Not valid EXIF data! \\\" + getStringFromDB(file, start, 4));\\n            return false;\\n        }\\n\\n        var bigEnd,\\n            tags, tag,\\n            exifData, gpsData,\\n            tiffOffset = start + 6;\\n\\n        // test for TIFF validity and endianness\\n        if (file.getUint16(tiffOffset) == 0x4949) {\\n            bigEnd = false;\\n        } else if (file.getUint16(tiffOffset) == 0x4D4D) {\\n            bigEnd = true;\\n        } else {\\n            if (debug) console.log(\\\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\\\");\\n            return false;\\n        }\\n\\n        if (file.getUint16(tiffOffset+2, !bigEnd) != 0x002A) {\\n            if (debug) console.log(\\\"Not valid TIFF data! (no 0x002A)\\\");\\n            return false;\\n        }\\n\\n        var firstIFDOffset = file.getUint32(tiffOffset+4, !bigEnd);\\n\\n        if (firstIFDOffset < 0x00000008) {\\n            if (debug) console.log(\\\"Not valid TIFF data! (First offset less than 8)\\\", file.getUint32(tiffOffset+4, !bigEnd));\\n            return false;\\n        }\\n\\n        tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\\n\\n        if (tags.ExifIFDPointer) {\\n            exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\\n            for (tag in exifData) {\\n                switch (tag) {\\n                    case \\\"LightSource\\\" :\\n                    case \\\"Flash\\\" :\\n                    case \\\"MeteringMode\\\" :\\n                    case \\\"ExposureProgram\\\" :\\n                    case \\\"SensingMethod\\\" :\\n                    case \\\"SceneCaptureType\\\" :\\n                    case \\\"SceneType\\\" :\\n                    case \\\"CustomRendered\\\" :\\n                    case \\\"WhiteBalance\\\" :\\n                    case \\\"GainControl\\\" :\\n                    case \\\"Contrast\\\" :\\n                    case \\\"Saturation\\\" :\\n                    case \\\"Sharpness\\\" :\\n                    case \\\"SubjectDistanceRange\\\" :\\n                    case \\\"FileSource\\\" :\\n                        exifData[tag] = StringValues[tag][exifData[tag]];\\n                        break;\\n\\n                    case \\\"ExifVersion\\\" :\\n                    case \\\"FlashpixVersion\\\" :\\n                        exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\\n                        break;\\n\\n                    case \\\"ComponentsConfiguration\\\" :\\n                        exifData[tag] =\\n                            StringValues.Components[exifData[tag][0]] +\\n                            StringValues.Components[exifData[tag][1]] +\\n                            StringValues.Components[exifData[tag][2]] +\\n                            StringValues.Components[exifData[tag][3]];\\n                        break;\\n                }\\n                tags[tag] = exifData[tag];\\n            }\\n        }\\n\\n        if (tags.GPSInfoIFDPointer) {\\n            gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\\n            for (tag in gpsData) {\\n                switch (tag) {\\n                    case \\\"GPSVersionID\\\" :\\n                        gpsData[tag] = gpsData[tag][0] +\\n                            \\\".\\\" + gpsData[tag][1] +\\n                            \\\".\\\" + gpsData[tag][2] +\\n                            \\\".\\\" + gpsData[tag][3];\\n                        break;\\n                }\\n                tags[tag] = gpsData[tag];\\n            }\\n        }\\n\\n        // extract thumbnail\\n        tags['thumbnail'] = readThumbnailImage(file, tiffOffset, firstIFDOffset, bigEnd);\\n\\n        return tags;\\n    }\\n\\n   function findXMPinJPEG(file) {\\n\\n        if (!('DOMParser' in self)) {\\n            // console.warn('XML parsing not supported without DOMParser');\\n            return;\\n        }\\n        var dataView = new DataView(file);\\n\\n        if (debug) console.log(\\\"Got file of length \\\" + file.byteLength);\\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\\n           if (debug) console.log(\\\"Not a valid JPEG\\\");\\n           return false; // not a valid jpeg\\n        }\\n\\n        var offset = 2,\\n            length = file.byteLength,\\n            dom = new DOMParser();\\n\\n        while (offset < (length-4)) {\\n            if (getStringFromDB(dataView, offset, 4) == \\\"http\\\") {\\n                var startOffset = offset - 1;\\n                var sectionLength = dataView.getUint16(offset - 2) - 1;\\n                var xmpString = getStringFromDB(dataView, startOffset, sectionLength)\\n                var xmpEndIndex = xmpString.indexOf('xmpmeta>') + 8;\\n                xmpString = xmpString.substring( xmpString.indexOf( '<x:xmpmeta' ), xmpEndIndex );\\n\\n                var indexOfXmp = xmpString.indexOf('x:xmpmeta') + 10\\n                //Many custom written programs embed xmp/xml without any namespace. Following are some of them.\\n                //Without these namespaces, XML is thought to be invalid by parsers\\n                xmpString = xmpString.slice(0, indexOfXmp)\\n                            + 'xmlns:Iptc4xmpCore=\\\"http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/\\\" '\\n                            + 'xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" '\\n                            + 'xmlns:tiff=\\\"http://ns.adobe.com/tiff/1.0/\\\" '\\n                            + 'xmlns:plus=\\\"http://schemas.android.com/apk/lib/com.google.android.gms.plus\\\" '\\n                            + 'xmlns:ext=\\\"http://www.gettyimages.com/xsltExtension/1.0\\\" '\\n                            + 'xmlns:exif=\\\"http://ns.adobe.com/exif/1.0/\\\" '\\n                            + 'xmlns:stEvt=\\\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\\\" '\\n                            + 'xmlns:stRef=\\\"http://ns.adobe.com/xap/1.0/sType/ResourceRef#\\\" '\\n                            + 'xmlns:crs=\\\"http://ns.adobe.com/camera-raw-settings/1.0/\\\" '\\n                            + 'xmlns:xapGImg=\\\"http://ns.adobe.com/xap/1.0/g/img/\\\" '\\n                            + 'xmlns:Iptc4xmpExt=\\\"http://iptc.org/std/Iptc4xmpExt/2008-02-29/\\\" '\\n                            + xmpString.slice(indexOfXmp)\\n\\n                var domDocument = dom.parseFromString( xmpString, 'text/xml' );\\n                return xml2Object(domDocument);\\n            } else{\\n             offset++;\\n            }\\n        }\\n    }\\n\\n    function xml2json(xml) {\\n        var json = {};\\n      \\n        if (xml.nodeType == 1) { // element node\\n          if (xml.attributes.length > 0) {\\n            json['@attributes'] = {};\\n            for (var j = 0; j < xml.attributes.length; j++) {\\n              var attribute = xml.attributes.item(j);\\n              json['@attributes'][attribute.nodeName] = attribute.nodeValue;\\n            }\\n          }\\n        } else if (xml.nodeType == 3) { // text node\\n          return xml.nodeValue;\\n        }\\n      \\n        // deal with children\\n        if (xml.hasChildNodes()) {\\n          for(var i = 0; i < xml.childNodes.length; i++) {\\n            var child = xml.childNodes.item(i);\\n            var nodeName = child.nodeName;\\n            if (json[nodeName] == null) {\\n              json[nodeName] = xml2json(child);\\n            } else {\\n              if (json[nodeName].push == null) {\\n                var old = json[nodeName];\\n                json[nodeName] = [];\\n                json[nodeName].push(old);\\n              }\\n              json[nodeName].push(xml2json(child));\\n            }\\n          }\\n        }\\n        \\n        return json;\\n    }\\n\\n    function xml2Object(xml) {\\n        try {\\n            var obj = {};\\n            if (xml.children.length > 0) {\\n              for (var i = 0; i < xml.children.length; i++) {\\n                var item = xml.children.item(i);\\n                var attributes = item.attributes;\\n                for(var idx in attributes) {\\n                    var itemAtt = attributes[idx];\\n                    var dataKey = itemAtt.nodeName;\\n                    var dataValue = itemAtt.nodeValue;\\n\\n                    if(dataKey !== undefined) {\\n                        obj[dataKey] = dataValue;\\n                    }\\n                }\\n                var nodeName = item.nodeName;\\n\\n                if (typeof (obj[nodeName]) == \\\"undefined\\\") {\\n                  obj[nodeName] = xml2json(item);\\n                } else {\\n                  if (typeof (obj[nodeName].push) == \\\"undefined\\\") {\\n                    var old = obj[nodeName];\\n\\n                    obj[nodeName] = [];\\n                    obj[nodeName].push(old);\\n                  }\\n                  obj[nodeName].push(xml2json(item));\\n                }\\n              }\\n            } else {\\n              obj = xml.textContent;\\n            }\\n            return obj;\\n          } catch (e) {\\n              console.log(e.message);\\n          }\\n    }\\n\\n    EXIF.enableXmp = function() {\\n        EXIF.isXmpEnabled = true;\\n    }\\n\\n    EXIF.disableXmp = function() {\\n        EXIF.isXmpEnabled = false;\\n    }\\n\\n    EXIF.getData = function(img, callback) {\\n        if (((self.Image && img instanceof self.Image)\\n            || (self.HTMLImageElement && img instanceof self.HTMLImageElement))\\n            && !img.complete)\\n            return false;\\n\\n        if (!imageHasData(img)) {\\n            getImageData(img, callback);\\n        } else {\\n            if (callback) {\\n                callback.call(img);\\n            }\\n        }\\n        return true;\\n    }\\n\\n    EXIF.getTag = function(img, tag) {\\n        if (!imageHasData(img)) return;\\n        return img.exifdata[tag];\\n    }\\n    \\n    EXIF.getIptcTag = function(img, tag) {\\n        if (!imageHasData(img)) return;\\n        return img.iptcdata[tag];\\n    }\\n\\n    EXIF.getAllTags = function(img) {\\n        if (!imageHasData(img)) return {};\\n        var a,\\n            data = img.exifdata,\\n            tags = {};\\n        for (a in data) {\\n            if (data.hasOwnProperty(a)) {\\n                tags[a] = data[a];\\n            }\\n        }\\n        return tags;\\n    }\\n    \\n    EXIF.getAllIptcTags = function(img) {\\n        if (!imageHasData(img)) return {};\\n        var a,\\n            data = img.iptcdata,\\n            tags = {};\\n        for (a in data) {\\n            if (data.hasOwnProperty(a)) {\\n                tags[a] = data[a];\\n            }\\n        }\\n        return tags;\\n    }\\n\\n    EXIF.pretty = function(img) {\\n        if (!imageHasData(img)) return \\\"\\\";\\n        var a,\\n            data = img.exifdata,\\n            strPretty = \\\"\\\";\\n        for (a in data) {\\n            if (data.hasOwnProperty(a)) {\\n                if (typeof data[a] == \\\"object\\\") {\\n                    if (data[a] instanceof Number) {\\n                        strPretty += a + \\\" : \\\" + data[a] + \\\" [\\\" + data[a].numerator + \\\"/\\\" + data[a].denominator + \\\"]\\\\r\\\\n\\\";\\n                    } else {\\n                        strPretty += a + \\\" : [\\\" + data[a].length + \\\" values]\\\\r\\\\n\\\";\\n                    }\\n                } else {\\n                    strPretty += a + \\\" : \\\" + data[a] + \\\"\\\\r\\\\n\\\";\\n                }\\n            }\\n        }\\n        return strPretty;\\n    }\\n\\n    EXIF.readFromBinaryFile = function(file) {\\n        return findEXIFinJPEG(file);\\n    }\\n\\n    if (typeof define === 'function' && define.amd) {\\n        define('exif-js', [], function() {\\n            return EXIF;\\n        });\\n    }\\n}.call(this));\\n\\n\"]}","code":"(window[\"webpackJsonp\"]=window[\"webpackJsonp\"]||[]).push([[\"chunk-54c172e2\"],{3659:function(e,t,n){},4960:function(e,t,n){\"use strict\";var r=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"input\",{attrs:{type:\"file\",accept:\"image/*\"},on:{change:function(t){e.cropImg(t)}}})},i=[],o=n(\"a34a\"),a=n.n(o),s=n(\"6f45\"),u=n.n(s),l=n(\"f121\"),c=n(\"2f62\"),f=n(\"986e\"),d=n(\"3b8e\");function g(e,t,n,r,i,o,a){try{var s=e[o](a),u=s.value}catch(l){return void n(l)}s.done?t(u):Promise.resolve(u).then(r,i)}function p(e){return function(){var t=this,n=arguments;return new Promise(function(r,i){var o=e.apply(t,n);function a(e){g(o,r,i,a,s,\"next\",e)}function s(e){g(o,r,i,a,s,\"throw\",e)}a(void 0)})}}function h(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"===typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){m(e,t,n[t])})}return e}function m(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var S={props:[\"type\",\"ratio\"],data:function(){return{eventName:null,orientation:null}},mounted:function(){var e=this;e.eventName=\"AppUploadEvent_\".concat(parseInt(1e3*Math.random())),f[\"a\"].$on(e.eventName,function(t){e.$emit(\"success\",t)})},methods:h({},Object(c[\"b\"])([\"system/updateCropper\"]),{cropImg:function(){var e=p(a.a.mark(function e(t){var n;return a.a.wrap(function(e){while(1)switch(e.prev=e.next){case 0:if(n=t.target.files[0],!(Math.round(n.size/1024/1024)>l[\"a\"].MaxSize)){e.next=4;break}return d[\"a\"].alert(\"请上传\".concat(l[\"a\"].MaxSize,\"M以下的图片\")),e.abrupt(\"return\",!1);case 4:return e.next=6,this.toBase64(n);case 6:return n=e.sent,e.next=9,this.compress(n);case 9:n=e.sent,this[\"system/updateCropper\"]({file:n,ratio:this.ratio,eventName:this.eventName}),this.$router.push({path:\"/cropper\"});case 12:case\"end\":return e.stop()}},e,this)}));function t(t){return e.apply(this,arguments)}return t}(),toBase64:function(){var e=p(a.a.mark(function e(t){return a.a.wrap(function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",new Promise(function(e,n){var r=new FileReader;r.readAsDataURL(t),r.onload=function(t){e(t.target.result)}}));case 1:case\"end\":return e.stop()}},e,this)}));function t(t){return e.apply(this,arguments)}return t}(),compress:function(){var e=p(a.a.mark(function e(t){return a.a.wrap(function(e){while(1)switch(e.prev=e.next){case 0:return this,e.abrupt(\"return\",new Promise(function(e,n){var r=new Image;r.src=t,r.onload=function(){u.a.getData(r,function(){var n,i=r.width,o=r.height,a=document.createElement(\"canvas\"),s=u.a.getTag(r,\"Orientation\");6===s?(o=o>750?750:o,i=r.height>750?750/r.height*i:i,a.width=o,a.height=i,n=a.getContext(\"2d\"),n.translate(o/2,i/2),n.rotate(90*Math.PI/180),n.drawImage(r,-i/2,-o/2,i,o)):(i=i>750?750:i,o=r.width>750?750/r.width*o:o,a.width=i,a.height=o,n=a.getContext(\"2d\"),n.drawImage(r,0,0,i,o)),t=a.toDataURL(\"image/jpeg\",.8),e(t)})}}));case 2:case\"end\":return e.stop()}},e,this)}));function t(t){return e.apply(this,arguments)}return t}()}),destroyed:function(){f[\"a\"].$off(this.eventName)}},v=S,b=(n(\"6dc1\"),n(\"2877\")),w=Object(b[\"a\"])(v,r,i,!1,null,\"6a63d7f2\",null);w.options.__file=\"index.vue\";t[\"a\"]=w.exports},\"6dc1\":function(e,t,n){\"use strict\";var r=n(\"3659\"),i=n.n(r);i.a},\"6f45\":function(e,t,r){var i,o;(function(){var r=!1,a=function(e){return e instanceof a?e:this instanceof a?void(this.EXIFwrapped=e):new a(e)};e.exports&&(t=e.exports=a),t.EXIF=a;var s=a.Tags={36864:\"ExifVersion\",40960:\"FlashpixVersion\",40961:\"ColorSpace\",40962:\"PixelXDimension\",40963:\"PixelYDimension\",37121:\"ComponentsConfiguration\",37122:\"CompressedBitsPerPixel\",37500:\"MakerNote\",37510:\"UserComment\",40964:\"RelatedSoundFile\",36867:\"DateTimeOriginal\",36868:\"DateTimeDigitized\",37520:\"SubsecTime\",37521:\"SubsecTimeOriginal\",37522:\"SubsecTimeDigitized\",33434:\"ExposureTime\",33437:\"FNumber\",34850:\"ExposureProgram\",34852:\"SpectralSensitivity\",34855:\"ISOSpeedRatings\",34856:\"OECF\",37377:\"ShutterSpeedValue\",37378:\"ApertureValue\",37379:\"BrightnessValue\",37380:\"ExposureBias\",37381:\"MaxApertureValue\",37382:\"SubjectDistance\",37383:\"MeteringMode\",37384:\"LightSource\",37385:\"Flash\",37396:\"SubjectArea\",37386:\"FocalLength\",41483:\"FlashEnergy\",41484:\"SpatialFrequencyResponse\",41486:\"FocalPlaneXResolution\",41487:\"FocalPlaneYResolution\",41488:\"FocalPlaneResolutionUnit\",41492:\"SubjectLocation\",41493:\"ExposureIndex\",41495:\"SensingMethod\",41728:\"FileSource\",41729:\"SceneType\",41730:\"CFAPattern\",41985:\"CustomRendered\",41986:\"ExposureMode\",41987:\"WhiteBalance\",41988:\"DigitalZoomRation\",41989:\"FocalLengthIn35mmFilm\",41990:\"SceneCaptureType\",41991:\"GainControl\",41992:\"Contrast\",41993:\"Saturation\",41994:\"Sharpness\",41995:\"DeviceSettingDescription\",41996:\"SubjectDistanceRange\",40965:\"InteroperabilityIFDPointer\",42016:\"ImageUniqueID\"},u=a.TiffTags={256:\"ImageWidth\",257:\"ImageHeight\",34665:\"ExifIFDPointer\",34853:\"GPSInfoIFDPointer\",40965:\"InteroperabilityIFDPointer\",258:\"BitsPerSample\",259:\"Compression\",262:\"PhotometricInterpretation\",274:\"Orientation\",277:\"SamplesPerPixel\",284:\"PlanarConfiguration\",530:\"YCbCrSubSampling\",531:\"YCbCrPositioning\",282:\"XResolution\",283:\"YResolution\",296:\"ResolutionUnit\",273:\"StripOffsets\",278:\"RowsPerStrip\",279:\"StripByteCounts\",513:\"JPEGInterchangeFormat\",514:\"JPEGInterchangeFormatLength\",301:\"TransferFunction\",318:\"WhitePoint\",319:\"PrimaryChromaticities\",529:\"YCbCrCoefficients\",532:\"ReferenceBlackWhite\",306:\"DateTime\",270:\"ImageDescription\",271:\"Make\",272:\"Model\",305:\"Software\",315:\"Artist\",33432:\"Copyright\"},l=a.GPSTags={0:\"GPSVersionID\",1:\"GPSLatitudeRef\",2:\"GPSLatitude\",3:\"GPSLongitudeRef\",4:\"GPSLongitude\",5:\"GPSAltitudeRef\",6:\"GPSAltitude\",7:\"GPSTimeStamp\",8:\"GPSSatellites\",9:\"GPSStatus\",10:\"GPSMeasureMode\",11:\"GPSDOP\",12:\"GPSSpeedRef\",13:\"GPSSpeed\",14:\"GPSTrackRef\",15:\"GPSTrack\",16:\"GPSImgDirectionRef\",17:\"GPSImgDirection\",18:\"GPSMapDatum\",19:\"GPSDestLatitudeRef\",20:\"GPSDestLatitude\",21:\"GPSDestLongitudeRef\",22:\"GPSDestLongitude\",23:\"GPSDestBearingRef\",24:\"GPSDestBearing\",25:\"GPSDestDistanceRef\",26:\"GPSDestDistance\",27:\"GPSProcessingMethod\",28:\"GPSAreaInformation\",29:\"GPSDateStamp\",30:\"GPSDifferential\"},c=a.IFD1Tags={256:\"ImageWidth\",257:\"ImageHeight\",258:\"BitsPerSample\",259:\"Compression\",262:\"PhotometricInterpretation\",273:\"StripOffsets\",274:\"Orientation\",277:\"SamplesPerPixel\",278:\"RowsPerStrip\",279:\"StripByteCounts\",282:\"XResolution\",283:\"YResolution\",284:\"PlanarConfiguration\",296:\"ResolutionUnit\",513:\"JpegIFOffset\",514:\"JpegIFByteCount\",529:\"YCbCrCoefficients\",530:\"YCbCrSubSampling\",531:\"YCbCrPositioning\",532:\"ReferenceBlackWhite\"},f=a.StringValues={ExposureProgram:{0:\"Not defined\",1:\"Manual\",2:\"Normal program\",3:\"Aperture priority\",4:\"Shutter priority\",5:\"Creative program\",6:\"Action program\",7:\"Portrait mode\",8:\"Landscape mode\"},MeteringMode:{0:\"Unknown\",1:\"Average\",2:\"CenterWeightedAverage\",3:\"Spot\",4:\"MultiSpot\",5:\"Pattern\",6:\"Partial\",255:\"Other\"},LightSource:{0:\"Unknown\",1:\"Daylight\",2:\"Fluorescent\",3:\"Tungsten (incandescent light)\",4:\"Flash\",9:\"Fine weather\",10:\"Cloudy weather\",11:\"Shade\",12:\"Daylight fluorescent (D 5700 - 7100K)\",13:\"Day white fluorescent (N 4600 - 5400K)\",14:\"Cool white fluorescent (W 3900 - 4500K)\",15:\"White fluorescent (WW 3200 - 3700K)\",17:\"Standard light A\",18:\"Standard light B\",19:\"Standard light C\",20:\"D55\",21:\"D65\",22:\"D75\",23:\"D50\",24:\"ISO studio tungsten\",255:\"Other\"},Flash:{0:\"Flash did not fire\",1:\"Flash fired\",5:\"Strobe return light not detected\",7:\"Strobe return light detected\",9:\"Flash fired, compulsory flash mode\",13:\"Flash fired, compulsory flash mode, return light not detected\",15:\"Flash fired, compulsory flash mode, return light detected\",16:\"Flash did not fire, compulsory flash mode\",24:\"Flash did not fire, auto mode\",25:\"Flash fired, auto mode\",29:\"Flash fired, auto mode, return light not detected\",31:\"Flash fired, auto mode, return light detected\",32:\"No flash function\",65:\"Flash fired, red-eye reduction mode\",69:\"Flash fired, red-eye reduction mode, return light not detected\",71:\"Flash fired, red-eye reduction mode, return light detected\",73:\"Flash fired, compulsory flash mode, red-eye reduction mode\",77:\"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",79:\"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",89:\"Flash fired, auto mode, red-eye reduction mode\",93:\"Flash fired, auto mode, return light not detected, red-eye reduction mode\",95:\"Flash fired, auto mode, return light detected, red-eye reduction mode\"},SensingMethod:{1:\"Not defined\",2:\"One-chip color area sensor\",3:\"Two-chip color area sensor\",4:\"Three-chip color area sensor\",5:\"Color sequential area sensor\",7:\"Trilinear sensor\",8:\"Color sequential linear sensor\"},SceneCaptureType:{0:\"Standard\",1:\"Landscape\",2:\"Portrait\",3:\"Night scene\"},SceneType:{1:\"Directly photographed\"},CustomRendered:{0:\"Normal process\",1:\"Custom process\"},WhiteBalance:{0:\"Auto white balance\",1:\"Manual white balance\"},GainControl:{0:\"None\",1:\"Low gain up\",2:\"High gain up\",3:\"Low gain down\",4:\"High gain down\"},Contrast:{0:\"Normal\",1:\"Soft\",2:\"Hard\"},Saturation:{0:\"Normal\",1:\"Low saturation\",2:\"High saturation\"},Sharpness:{0:\"Normal\",1:\"Soft\",2:\"Hard\"},SubjectDistanceRange:{0:\"Unknown\",1:\"Macro\",2:\"Close view\",3:\"Distant view\"},FileSource:{3:\"DSC\"},Components:{0:\"\",1:\"Y\",2:\"Cb\",3:\"Cr\",4:\"R\",5:\"G\",6:\"B\"}};function d(e){return!!e.exifdata}function g(e,t){t=t||e.match(/^data\\:([^\\;]+)\\;base64,/im)[1]||\"\",e=e.replace(/^data\\:([^\\;]+)\\;base64,/gim,\"\");for(var n=atob(e),r=n.length,i=new ArrayBuffer(r),o=new Uint8Array(i),a=0;a<r;a++)o[a]=n.charCodeAt(a);return i}function p(e,t){var n=new XMLHttpRequest;n.open(\"GET\",e,!0),n.responseType=\"blob\",n.onload=function(e){200!=this.status&&0!==this.status||t(this.response)},n.send()}function h(e,t){function n(n){var r=m(n);e.exifdata=r||{};var i=S(n);if(e.iptcdata=i||{},a.isXmpEnabled){var o=I(n);e.xmpdata=o||{}}t&&t.call(e)}if(e.src)if(/^data\\:/i.test(e.src)){var i=g(e.src);n(i)}else if(/^blob\\:/i.test(e.src)){var o=new FileReader;o.onload=function(e){n(e.target.result)},p(e.src,function(e){o.readAsArrayBuffer(e)})}else{var s=new XMLHttpRequest;s.onload=function(){if(200!=this.status&&0!==this.status)throw\"Could not load image\";n(s.response),s=null},s.open(\"GET\",e.src,!0),s.responseType=\"arraybuffer\",s.send(null)}else if(self.FileReader&&(e instanceof self.Blob||e instanceof self.File)){o=new FileReader;o.onload=function(e){r&&console.log(\"Got file of length \"+e.target.result.byteLength),n(e.target.result)},o.readAsArrayBuffer(e)}}function m(e){var t=new DataView(e);if(r&&console.log(\"Got file of length \"+e.byteLength),255!=t.getUint8(0)||216!=t.getUint8(1))return r&&console.log(\"Not a valid JPEG\"),!1;var n,i=2,o=e.byteLength;while(i<o){if(255!=t.getUint8(i))return r&&console.log(\"Not a valid marker at offset \"+i+\", found: \"+t.getUint8(i)),!1;if(n=t.getUint8(i+1),r&&console.log(n),225==n)return r&&console.log(\"Found 0xFFE1 marker\"),C(t,i+4,t.getUint16(i+2)-2);i+=2+t.getUint16(i+2)}}function S(e){var t=new DataView(e);if(r&&console.log(\"Got file of length \"+e.byteLength),255!=t.getUint8(0)||216!=t.getUint8(1))return r&&console.log(\"Not a valid JPEG\"),!1;var n=2,i=e.byteLength,o=function(e,t){return 56===e.getUint8(t)&&66===e.getUint8(t+1)&&73===e.getUint8(t+2)&&77===e.getUint8(t+3)&&4===e.getUint8(t+4)&&4===e.getUint8(t+5)};while(n<i){if(o(t,n)){var a=t.getUint8(n+7);a%2!==0&&(a+=1),0===a&&(a=4);var s=n+8+a,u=t.getUint16(n+6+a);return b(e,s,u)}n++}}var v={120:\"caption\",110:\"credit\",25:\"keywords\",55:\"dateCreated\",80:\"byline\",85:\"bylineTitle\",122:\"captionWriter\",105:\"headline\",116:\"copyright\",15:\"category\"};function b(e,t,n){var r,i,o,a,s=new DataView(e),u={},l=t;while(l<t+n)28===s.getUint8(l)&&2===s.getUint8(l+1)&&(a=s.getUint8(l+2),a in v&&(o=s.getInt16(l+3),o+5,i=v[a],r=F(s,l+5,o),u.hasOwnProperty(i)?u[i]instanceof Array?u[i].push(r):u[i]=[u[i],r]:u[i]=r)),l++;return u}function w(e,t,n,i,o){var a,s,u,l=e.getUint16(n,!o),c={};for(u=0;u<l;u++)a=n+12*u+2,s=i[e.getUint16(a,!o)],!s&&r&&console.log(\"Unknown tag: \"+e.getUint16(a,!o)),c[s]=y(e,a,t,n,o);return c}function y(e,t,n,r,i){var o,a,s,u,l,c,f=e.getUint16(t+2,!i),d=e.getUint32(t+4,!i),g=e.getUint32(t+8,!i)+n;switch(f){case 1:case 7:if(1==d)return e.getUint8(t+8,!i);for(o=d>4?g:t+8,a=[],u=0;u<d;u++)a[u]=e.getUint8(o+u);return a;case 2:return o=d>4?g:t+8,F(e,o,d-1);case 3:if(1==d)return e.getUint16(t+8,!i);for(o=d>2?g:t+8,a=[],u=0;u<d;u++)a[u]=e.getUint16(o+2*u,!i);return a;case 4:if(1==d)return e.getUint32(t+8,!i);for(a=[],u=0;u<d;u++)a[u]=e.getUint32(g+4*u,!i);return a;case 5:if(1==d)return l=e.getUint32(g,!i),c=e.getUint32(g+4,!i),s=new Number(l/c),s.numerator=l,s.denominator=c,s;for(a=[],u=0;u<d;u++)l=e.getUint32(g+8*u,!i),c=e.getUint32(g+4+8*u,!i),a[u]=new Number(l/c),a[u].numerator=l,a[u].denominator=c;return a;case 9:if(1==d)return e.getInt32(t+8,!i);for(a=[],u=0;u<d;u++)a[u]=e.getInt32(g+4*u,!i);return a;case 10:if(1==d)return e.getInt32(g,!i)/e.getInt32(g+4,!i);for(a=[],u=0;u<d;u++)a[u]=e.getInt32(g+8*u,!i)/e.getInt32(g+4+8*u,!i);return a}}function P(e,t,n){var r=e.getUint16(t,!n);return e.getUint32(t+2+12*r,!n)}function x(e,t,n,r){var i=P(e,t+n,r);if(!i)return{};if(i>e.byteLength)return{};var o=w(e,t,t+i,c,r);if(o[\"Compression\"])switch(o[\"Compression\"]){case 6:if(o.JpegIFOffset&&o.JpegIFByteCount){var a=t+o.JpegIFOffset,s=o.JpegIFByteCount;o[\"blob\"]=new Blob([new Uint8Array(e.buffer,a,s)],{type:\"image/jpeg\"})}break;case 1:console.log(\"Thumbnail image format is TIFF, which is not implemented.\");break;default:console.log(\"Unknown thumbnail image format '%s'\",o[\"Compression\"])}else 2==o[\"PhotometricInterpretation\"]&&console.log(\"Thumbnail image format is RGB, which is not implemented.\");return o}function F(e,t,r){var i=\"\";for(n=t;n<t+r;n++)i+=String.fromCharCode(e.getUint8(n));return i}function C(e,t){if(\"Exif\"!=F(e,t,4))return r&&console.log(\"Not valid EXIF data! \"+F(e,t,4)),!1;var n,i,o,a,c,d=t+6;if(18761==e.getUint16(d))n=!1;else{if(19789!=e.getUint16(d))return r&&console.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\"),!1;n=!0}if(42!=e.getUint16(d+2,!n))return r&&console.log(\"Not valid TIFF data! (no 0x002A)\"),!1;var g=e.getUint32(d+4,!n);if(g<8)return r&&console.log(\"Not valid TIFF data! (First offset less than 8)\",e.getUint32(d+4,!n)),!1;if(i=w(e,d,d+g,u,n),i.ExifIFDPointer)for(o in a=w(e,d,d+i.ExifIFDPointer,s,n),a){switch(o){case\"LightSource\":case\"Flash\":case\"MeteringMode\":case\"ExposureProgram\":case\"SensingMethod\":case\"SceneCaptureType\":case\"SceneType\":case\"CustomRendered\":case\"WhiteBalance\":case\"GainControl\":case\"Contrast\":case\"Saturation\":case\"Sharpness\":case\"SubjectDistanceRange\":case\"FileSource\":a[o]=f[o][a[o]];break;case\"ExifVersion\":case\"FlashpixVersion\":a[o]=String.fromCharCode(a[o][0],a[o][1],a[o][2],a[o][3]);break;case\"ComponentsConfiguration\":a[o]=f.Components[a[o][0]]+f.Components[a[o][1]]+f.Components[a[o][2]]+f.Components[a[o][3]];break}i[o]=a[o]}if(i.GPSInfoIFDPointer)for(o in c=w(e,d,d+i.GPSInfoIFDPointer,l,n),c){switch(o){case\"GPSVersionID\":c[o]=c[o][0]+\".\"+c[o][1]+\".\"+c[o][2]+\".\"+c[o][3];break}i[o]=c[o]}return i[\"thumbnail\"]=x(e,d,g,n),i}function I(e){if(\"DOMParser\"in self){var t=new DataView(e);if(r&&console.log(\"Got file of length \"+e.byteLength),255!=t.getUint8(0)||216!=t.getUint8(1))return r&&console.log(\"Not a valid JPEG\"),!1;var n=2,i=e.byteLength,o=new DOMParser;while(n<i-4){if(\"http\"==F(t,n,4)){var a=n-1,s=t.getUint16(n-2)-1,u=F(t,a,s),l=u.indexOf(\"xmpmeta>\")+8;u=u.substring(u.indexOf(\"<x:xmpmeta\"),l);var c=u.indexOf(\"x:xmpmeta\")+10;u=u.slice(0,c)+'xmlns:Iptc4xmpCore=\"http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\" xmlns:plus=\"http://schemas.android.com/apk/lib/com.google.android.gms.plus\" xmlns:ext=\"http://www.gettyimages.com/xsltExtension/1.0\" xmlns:exif=\"http://ns.adobe.com/exif/1.0/\" xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\" xmlns:stRef=\"http://ns.adobe.com/xap/1.0/sType/ResourceRef#\" xmlns:crs=\"http://ns.adobe.com/camera-raw-settings/1.0/\" xmlns:xapGImg=\"http://ns.adobe.com/xap/1.0/g/img/\" xmlns:Iptc4xmpExt=\"http://iptc.org/std/Iptc4xmpExt/2008-02-29/\" '+u.slice(c);var f=o.parseFromString(u,\"text/xml\");return U(f)}n++}}}function D(e){var t={};if(1==e.nodeType){if(e.attributes.length>0){t[\"@attributes\"]={};for(var n=0;n<e.attributes.length;n++){var r=e.attributes.item(n);t[\"@attributes\"][r.nodeName]=r.nodeValue}}}else if(3==e.nodeType)return e.nodeValue;if(e.hasChildNodes())for(var i=0;i<e.childNodes.length;i++){var o=e.childNodes.item(i),a=o.nodeName;if(null==t[a])t[a]=D(o);else{if(null==t[a].push){var s=t[a];t[a]=[],t[a].push(s)}t[a].push(D(o))}}return t}function U(e){try{var t={};if(e.children.length>0)for(var n=0;n<e.children.length;n++){var r=e.children.item(n),i=r.attributes;for(var o in i){var a=i[o],s=a.nodeName,u=a.nodeValue;void 0!==s&&(t[s]=u)}var l=r.nodeName;if(\"undefined\"==typeof t[l])t[l]=D(r);else{if(\"undefined\"==typeof t[l].push){var c=t[l];t[l]=[],t[l].push(c)}t[l].push(D(r))}}else t=e.textContent;return t}catch(f){console.log(f.message)}}a.enableXmp=function(){a.isXmpEnabled=!0},a.disableXmp=function(){a.isXmpEnabled=!1},a.getData=function(e,t){return!((self.Image&&e instanceof self.Image||self.HTMLImageElement&&e instanceof self.HTMLImageElement)&&!e.complete)&&(d(e)?t&&t.call(e):h(e,t),!0)},a.getTag=function(e,t){if(d(e))return e.exifdata[t]},a.getIptcTag=function(e,t){if(d(e))return e.iptcdata[t]},a.getAllTags=function(e){if(!d(e))return{};var t,n=e.exifdata,r={};for(t in n)n.hasOwnProperty(t)&&(r[t]=n[t]);return r},a.getAllIptcTags=function(e){if(!d(e))return{};var t,n=e.iptcdata,r={};for(t in n)n.hasOwnProperty(t)&&(r[t]=n[t]);return r},a.pretty=function(e){if(!d(e))return\"\";var t,n=e.exifdata,r=\"\";for(t in n)n.hasOwnProperty(t)&&(\"object\"==typeof n[t]?n[t]instanceof Number?r+=t+\" : \"+n[t]+\" [\"+n[t].numerator+\"/\"+n[t].denominator+\"]\\r\\n\":r+=t+\" : [\"+n[t].length+\" values]\\r\\n\":r+=t+\" : \"+n[t]+\"\\r\\n\");return r},a.readFromBinaryFile=function(e){return m(e)},i=[],o=function(){return a}.apply(t,i),void 0===o||(e.exports=o)}).call(this)}}]);","extractedComments":[]}
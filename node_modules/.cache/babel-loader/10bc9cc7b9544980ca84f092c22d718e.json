{"remainingRequest":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js!/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js??ref--13-0!/Users/qiang/work/hytx/hytx-rebuild/src/utils/index.js","dependencies":[{"path":"/Users/qiang/work/hytx/hytx-rebuild/src/utils/index.js","mtime":1548484541723},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/qiang/work/hytx/hytx-rebuild/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport httpService from '../service/httpService.js';\nimport store from '../store/index.js';\nimport User from '../api/user';\nimport config from '../config/index';\n/* \n    判断前往的路径是否为分享路径\n*/\n\nvar isShare = function isShare(path) {\n  var regs = config.sharePath.map(function (item) {\n    return new RegExp('^' + item);\n  });\n  return regs.some(function (item) {\n    return item.test(path);\n  });\n};\n/* \n    判断前往路径是否为需引导注册的路径,并返回类型\n*/\n\n\nvar shouldGuid = function shouldGuid(path) {\n  var type = null;\n  var paths = config.registerGuidPath;\n\n  for (var i = 0; i < paths.length; i++) {\n    var reg = new RegExp('^' + paths[i]);\n\n    if (reg.test(path)) {\n      type = path.split('/')[1];\n      break;\n    }\n  }\n\n  return type;\n};\n/*判断是否为ios设备\n *@method isIos\n *@param  无\n *@return {Boolean} true  为ios false 安卓\n */\n\n\nvar isIos = function isIos() {\n  var u = navigator.userAgent;\n  return !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\n};\n/*获取上传oss配置\n *@method getOssConfig\n *@param  无\n *@return {object} 返回上传需要的oss配置信息\n */\n\n\nvar getOssConfig =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return httpService({\n              loading: false,\n              url: '/front/get-web-policy'\n            });\n\n          case 2:\n            res = _context.sent;\n            store.commit('system/updateOssConfig', res);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function getOssConfig() {\n    return _ref.apply(this, arguments);\n  };\n}();\n/*抓取营销网页的第一张图片作为封面\n *@method getMarketingCover\n *@param {String} input 营销网页内容\n *@return {String} 返回封面图片地址\n */\n\n\nvar getMarketingCover = function getMarketingCover(input) {\n  if (typeof input === 'string') {\n    input = JSON.parse(input);\n  }\n\n  input = Array.isArray(input) ? input : input.content;\n\n  for (var i = 0; i < input.length; i++) {\n    if (input[i].type === 'img') {\n      return input[i].src;\n    }\n  }\n\n  return window.host + '/static/marketing/cover.png';\n};\n/*个人微网(固定模板和自定义模板)\n *@method pageCover\n *@param {object} input 后台返回的关于网页的相关数据\n *@return {String} 返回封面图片地址\n */\n\n\nvar pageCover = function pageCover(input) {\n  try {\n    if (input.type === 1) {\n      var content = JSON.parse(input.content);\n      var cover = content[0].backImg.src || content[0].backImg;\n      return /^http/.test(cover) ? cover : '/' + cover;\n    } else if (input.type === 2) {\n      var _content = JSON.parse(input.content);\n\n      for (var i = 0; i < _content.length; i++) {\n        if (_content[i].type === 'slider') {\n          return _content[i].children[0].img.src;\n        }\n      }\n\n      return window.host + '/static/cover_custom.png';\n    } else {\n      return /^\\[/.test(input.cover_path) ? JSON.parse(input.cover_path)[0] : input.cover_path;\n    }\n  } catch (err) {\n    return window.host + '/static/cover_custom.png';\n  }\n};\n/* \n    获取文章分享封面\n*/\n\n\nvar getArticleCover = function getArticleCover(input) {\n  try {\n    return JSON.parse(input)[0];\n  } catch (err) {\n    return input;\n  }\n};\n/*设置cookie\n *@method setCookie\n *@param {String} val token\n *@return 无\n */\n\n\nvar setCookie = function setCookie(val) {\n  store.commit('system/setToken', val);\n};\n/*得到cookie\n *@method getCookie\n *@param 无\n *@return {String} cookie值\n */\n\n\nvar getCookie = function getCookie() {\n  return store.state.system.token;\n};\n/*\n  @params\n    key\n*/\n\n\nvar delCookie = function delCookie(key) {\n  store.commit('system/setToken', null);\n};\n/*获取url指定名称的参数\n *@method getParamsFromUrl\n *@param {Srting} paramName 想获取的参数的名称\n *@return {String} 指定名称参数结果\n */\n\n\nvar getParamsFromUrl = function getParamsFromUrl(paramName) {\n  var args = new Object();\n  var argsStr = location.href.substring(location.href.lastIndexOf('?')); //获取URL参数字符串\n\n  if (argsStr.length > 0) {\n    argsStr = argsStr.substring(1);\n    var nameValueArr = argsStr.split('&'); //多参数\n\n    for (var i = 0; i < nameValueArr.length; i++) {\n      var pos = nameValueArr[i].indexOf('=');\n      if (pos == -1) continue; //如果没有找到就跳过\n\n      var argName = nameValueArr[i].substring(0, pos); //提取name\n\n      var argVal = nameValueArr[i].substring(pos + 1); //提取value\n\n      args[argName] = unescape(argVal);\n    }\n\n    return args[paramName];\n  }\n};\n/*获取系统信息以及个人信息\n *@method getSystemInfo\n *@param\n *@return\n */\n\n\nvar getSystemInfo = function getSystemInfo() {\n  var token = getParamsFromUrl('token');\n  var platform = getParamsFromUrl('platform');\n  store.commit('system/setPlatform', platform || config.platform);\n  store.commit('system/setToken', token || store.state.system.token || '');\n\n  if (store.state.system.platform !== 'wechat') {\n    if (token) User.getProfile();\n  }\n};\n/*判断是否在微信\n *@method isWeixin\n *@param\n *@return\n */\n\n\nvar isWeixin = function isWeixin() {\n  var ua = navigator.userAgent.toLowerCase();\n\n  if (ua.match(/MicroMessenger/i) == 'micromessenger') {\n    return true;\n  } else {\n    return false;\n  }\n};\n/* \n    @name   delHTML\n    @desc   删除html标签\n    @params\n            str         传入的文本字符串\n    @return \n            str         不含html标签的文本\n*/\n\n\nvar delHTML = function delHTML(str) {\n  return str.replace(/<[^>]+>/g, '');\n};\n\nexport { isIos, isShare, delHTML, pageCover, setCookie, delCookie, getCookie, shouldGuid, getOssConfig, getSystemInfo, getArticleCover, getParamsFromUrl, getMarketingCover, isWeixin };",{"version":3,"sources":["/Users/qiang/work/hytx/hytx-rebuild/src/utils/index.js"],"names":["httpService","store","User","config","isShare","path","regs","sharePath","map","item","RegExp","some","test","shouldGuid","type","paths","registerGuidPath","i","length","reg","split","isIos","u","navigator","userAgent","match","getOssConfig","loading","url","res","commit","getMarketingCover","input","JSON","parse","Array","isArray","content","src","window","host","pageCover","cover","backImg","children","img","cover_path","err","getArticleCover","setCookie","val","getCookie","state","system","token","delCookie","key","getParamsFromUrl","paramName","args","Object","argsStr","location","href","substring","lastIndexOf","nameValueArr","pos","indexOf","argName","argVal","unescape","getSystemInfo","platform","getProfile","isWeixin","ua","toLowerCase","delHTML","str","replace"],"mappings":"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","sourcesContent":["import httpService from '../service/httpService.js'\nimport store from '../store/index.js'\nimport User from '../api/user'\nimport config from '../config/index'\n/* \n    判断前往的路径是否为分享路径\n*/\nconst isShare = path => {\n  let regs = config.sharePath.map(item => new RegExp('^' + item))\n  return regs.some(item => item.test(path))\n}\n/* \n    判断前往路径是否为需引导注册的路径,并返回类型\n*/\nconst shouldGuid = path => {\n  let type = null\n  let paths = config.registerGuidPath\n  for (let i = 0; i < paths.length; i++) {\n    let reg = new RegExp('^' + paths[i])\n    if (reg.test(path)) {\n      type = path.split('/')[1]\n      break\n    }\n  }\n  return type\n}\n\n/*判断是否为ios设备\n *@method isIos\n *@param  无\n *@return {Boolean} true  为ios false 安卓\n */\nconst isIos = () => {\n  let u = navigator.userAgent\n  return !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/)\n}\n/*获取上传oss配置\n *@method getOssConfig\n *@param  无\n *@return {object} 返回上传需要的oss配置信息\n */\nconst getOssConfig = async () => {\n  let res = await httpService({\n    loading: false,\n    url: '/front/get-web-policy'\n  })\n  store.commit('system/updateOssConfig', res)\n}\n\n/*抓取营销网页的第一张图片作为封面\n *@method getMarketingCover\n *@param {String} input 营销网页内容\n *@return {String} 返回封面图片地址\n */\nconst getMarketingCover = input => {\n  if (typeof input === 'string') {\n    input = JSON.parse(input)\n  }\n  input = Array.isArray(input) ? input : input.content\n  for (let i = 0; i < input.length; i++) {\n    if (input[i].type === 'img') {\n      return input[i].src\n    }\n  }\n  return window.host + '/static/marketing/cover.png'\n}\n\n/*个人微网(固定模板和自定义模板)\n *@method pageCover\n *@param {object} input 后台返回的关于网页的相关数据\n *@return {String} 返回封面图片地址\n */\nconst pageCover = input => {\n  try {\n    if (input.type === 1) {\n      let content = JSON.parse(input.content)\n      let cover = content[0].backImg.src || content[0].backImg\n      return /^http/.test(cover) ? cover : '/' + cover\n    } else if (input.type === 2) {\n      let content = JSON.parse(input.content)\n      for (let i = 0; i < content.length; i++) {\n        if (content[i].type === 'slider') {\n          return content[i].children[0].img.src\n        }\n      }\n      return window.host + '/static/cover_custom.png'\n    } else {\n      return /^\\[/.test(input.cover_path)\n        ? JSON.parse(input.cover_path)[0]\n        : input.cover_path\n    }\n  } catch (err) {\n    return window.host + '/static/cover_custom.png'\n  }\n}\n\n/* \n    获取文章分享封面\n*/\nconst getArticleCover = input => {\n  try {\n    return JSON.parse(input)[0]\n  } catch (err) {\n    return input\n  }\n}\n\n/*设置cookie\n *@method setCookie\n *@param {String} val token\n *@return 无\n */\nconst setCookie = val => {\n  store.commit('system/setToken', val)\n}\n\n/*得到cookie\n *@method getCookie\n *@param 无\n *@return {String} cookie值\n */\nconst getCookie = () => {\n  return store.state.system.token\n}\n/*\n  @params\n    key\n*/\nconst delCookie = key => {\n  store.commit('system/setToken', null)\n}\n/*获取url指定名称的参数\n *@method getParamsFromUrl\n *@param {Srting} paramName 想获取的参数的名称\n *@return {String} 指定名称参数结果\n */\nconst getParamsFromUrl = paramName => {\n  var args = new Object()\n  var argsStr = location.href.substring(location.href.lastIndexOf('?')) //获取URL参数字符串\n  if (argsStr.length > 0) {\n    argsStr = argsStr.substring(1)\n    var nameValueArr = argsStr.split('&') //多参数\n    for (var i = 0; i < nameValueArr.length; i++) {\n      var pos = nameValueArr[i].indexOf('=')\n      if (pos == -1) continue //如果没有找到就跳过\n      var argName = nameValueArr[i].substring(0, pos) //提取name\n      var argVal = nameValueArr[i].substring(pos + 1) //提取value\n      args[argName] = unescape(argVal)\n    }\n    return args[paramName]\n  }\n}\n/*获取系统信息以及个人信息\n *@method getSystemInfo\n *@param\n *@return\n */\nconst getSystemInfo = () => {\n  let token = getParamsFromUrl('token')\n  let platform = getParamsFromUrl('platform')\n  store.commit('system/setPlatform', platform || config.platform)\n  store.commit('system/setToken', token || store.state.system.token || '')\n  if (store.state.system.platform !== 'wechat') {\n    if (token) User.getProfile()\n  }\n}\n/*判断是否在微信\n *@method isWeixin\n *@param\n *@return\n */\nconst isWeixin = () => {\n  var ua = navigator.userAgent.toLowerCase()\n  if (ua.match(/MicroMessenger/i) == 'micromessenger') {\n    return true\n  } else {\n    return false\n  }\n}\n/* \n    @name   delHTML\n    @desc   删除html标签\n    @params\n            str         传入的文本字符串\n    @return \n            str         不含html标签的文本\n*/\nconst delHTML = str => {\n  return str.replace(/<[^>]+>/g, '')\n}\n\nexport {\n  isIos,\n  isShare,\n  delHTML,\n  pageCover,\n  setCookie,\n  delCookie,\n  getCookie,\n  shouldGuid,\n  getOssConfig,\n  getSystemInfo,\n  getArticleCover,\n  getParamsFromUrl,\n  getMarketingCover,\n  isWeixin\n}\n"]}]}
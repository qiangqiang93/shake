{"remainingRequest":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js!/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js??ref--13-0!/Users/qiang/work/hytx/hytx-rebuild/src/api/card/index.js","dependencies":[{"path":"/Users/qiang/work/hytx/hytx-rebuild/src/api/card/index.js","mtime":1547259592366},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/qiang/work/hytx/hytx-rebuild/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport store from '../../store';\nimport httpService from '../../service/httpService';\nexport default {\n  // 根据用户id获取名片信息\n  getCardByUserId: function () {\n    var _getCardByUserId = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(userId) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return httpService.get('/front/card', {\n                user_id: userId\n              });\n\n            case 2:\n              res = _context.sent;\n\n              if (res.status === 0 && !store.state.user.userInfo) {\n                store.commit('system/updateGuider', res.data.user_id);\n              }\n\n              return _context.abrupt(\"return\", res);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function getCardByUserId(_x) {\n      return _getCardByUserId.apply(this, arguments);\n    }\n\n    return getCardByUserId;\n  }(),\n  // 获取名片夹收藏的名片\n  getCollectCard: function () {\n    var _getCollectCard = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(params) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return httpService.get('/front/card/holder/page', params);\n\n            case 2:\n              res = _context2.sent;\n              return _context2.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function getCollectCard(_x2) {\n      return _getCollectCard.apply(this, arguments);\n    }\n\n    return getCollectCard;\n  }(),\n  // 收藏名片\n  collecteCard: function () {\n    var _collecteCard = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(cardId) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return httpService.post('/front/card/holder', {\n                card_id: cardId\n              });\n\n            case 2:\n              res = _context3.sent;\n              return _context3.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function collecteCard(_x3) {\n      return _collecteCard.apply(this, arguments);\n    }\n\n    return collecteCard;\n  }(),\n  // 取消收藏名片\n  cancleCollecte: function () {\n    var _cancleCollecte = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(id) {\n      var ids, res;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              ids = Array.isArray(id) ? id : [id];\n              _context4.next = 3;\n              return httpService.delete(\"/front/card/holder\", {\n                ids: ids\n              });\n\n            case 3:\n              res = _context4.sent;\n              return _context4.abrupt(\"return\", res);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function cancleCollecte(_x4) {\n      return _cancleCollecte.apply(this, arguments);\n    }\n\n    return cancleCollecte;\n  }(),\n  // 获取名片头像的base64\n  getBase64Img: function () {\n    var _getBase64Img = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(url) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return httpService({\n                url: '/front/aliyun-img-base',\n                params: {\n                  path: url\n                }\n              });\n\n            case 2:\n              res = _context5.sent;\n              return _context5.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    function getBase64Img(_x5) {\n      return _getBase64Img.apply(this, arguments);\n    }\n\n    return getBase64Img;\n  }(),\n  // 保存自己的名片信息\n  saveCardInfo: function () {\n    var _saveCardInfo = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(cardInfo) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return httpService.post('/front/update-user-info', cardInfo);\n\n            case 2:\n              res = _context6.sent;\n              return _context6.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    }));\n\n    function saveCardInfo(_x6) {\n      return _saveCardInfo.apply(this, arguments);\n    }\n\n    return saveCardInfo;\n  }()\n};",{"version":3,"sources":["/Users/qiang/work/hytx/hytx-rebuild/src/api/card/index.js"],"names":["store","httpService","getCardByUserId","userId","get","user_id","res","status","state","user","userInfo","commit","data","getCollectCard","params","collecteCard","cardId","post","card_id","cancleCollecte","id","ids","Array","isArray","delete","getBase64Img","url","path","saveCardInfo","cardInfo"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,eAAe;AACb;AACMC,EAAAA,eAFO;AAAA;AAAA;AAAA,6CAESC,MAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGKF,WAAW,CAACG,GAAZ,CAAgB,aAAhB,EAA+B;AAC7CC,gBAAAA,OAAO,EAAEF;AADoC,eAA/B,CAHL;;AAAA;AAGPG,cAAAA,GAHO;;AAMX,kBAAIA,GAAG,CAACC,MAAJ,KAAe,CAAf,IAAoB,CAACP,KAAK,CAACQ,KAAN,CAAYC,IAAZ,CAAiBC,QAA1C,EAAoD;AAClDV,gBAAAA,KAAK,CAACW,MAAN,CAAa,qBAAb,EAAoCL,GAAG,CAACM,IAAJ,CAASP,OAA7C;AACD;;AARU,+CASJC,GATI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAWb;AACMO,EAAAA,cAZO;AAAA;AAAA;AAAA,8CAYQC,MAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAaKb,WAAW,CAACG,GAAZ,CAAgB,yBAAhB,EAA2CU,MAA3C,CAbL;;AAAA;AAaPR,cAAAA,GAbO;AAAA,gDAcJA,GAdI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgBb;AACMS,EAAAA,YAjBO;AAAA;AAAA;AAAA,8CAiBMC,MAjBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAkBKf,WAAW,CAACgB,IAAZ,CAAiB,oBAAjB,EAAuC;AACrDC,gBAAAA,OAAO,EAAEF;AAD4C,eAAvC,CAlBL;;AAAA;AAkBPV,cAAAA,GAlBO;AAAA,gDAqBJA,GArBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuBb;AACMa,EAAAA,cAxBO;AAAA;AAAA;AAAA,8CAwBQC,EAxBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBPC,cAAAA,GAzBO,GAyBDC,KAAK,CAACC,OAAN,CAAcH,EAAd,IAAoBA,EAApB,GAAyB,CAACA,EAAD,CAzBxB;AAAA;AAAA,qBA0BKnB,WAAW,CAACuB,MAAZ,uBAAyC;AACvDH,gBAAAA,GAAG,EAAHA;AADuD,eAAzC,CA1BL;;AAAA;AA0BPf,cAAAA,GA1BO;AAAA,gDA6BJA,GA7BI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA+Bb;AACMmB,EAAAA,YAhCO;AAAA;AAAA;AAAA,8CAgCMC,GAhCN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAiCKzB,WAAW,CAAC;AAC1ByB,gBAAAA,GAAG,EAAE,wBADqB;AAE1BZ,gBAAAA,MAAM,EAAE;AAAEa,kBAAAA,IAAI,EAAED;AAAR;AAFkB,eAAD,CAjChB;;AAAA;AAiCPpB,cAAAA,GAjCO;AAAA,gDAqCJA,GArCI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuCb;AACMsB,EAAAA,YAxCO;AAAA;AAAA;AAAA,8CAwCMC,QAxCN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAyCK5B,WAAW,CAACgB,IAAZ,CAAiB,yBAAjB,EAA4CY,QAA5C,CAzCL;;AAAA;AAyCPvB,cAAAA,GAzCO;AAAA,gDA0CJA,GA1CI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import store from '../../store'\nimport httpService from '../../service/httpService'\n\nexport default {\n  // 根据用户id获取名片信息\n  async getCardByUserId(userId) {\n    let res = await httpService.get('/front/card', {\n      user_id: userId\n    })\n    if (res.status === 0 && !store.state.user.userInfo) {\n      store.commit('system/updateGuider', res.data.user_id)\n    }\n    return res\n  },\n  // 获取名片夹收藏的名片\n  async getCollectCard(params) {\n    let res = await httpService.get('/front/card/holder/page', params)\n    return res\n  },\n  // 收藏名片\n  async collecteCard(cardId) {\n    let res = await httpService.post('/front/card/holder', {\n      card_id: cardId\n    })\n    return res\n  },\n  // 取消收藏名片\n  async cancleCollecte(id) {\n    let ids = Array.isArray(id) ? id : [id]\n    let res = await httpService.delete(`/front/card/holder`, {\n      ids\n    })\n    return res\n  },\n  // 获取名片头像的base64\n  async getBase64Img(url) {\n    let res = await httpService({\n      url: '/front/aliyun-img-base',\n      params: { path: url }\n    })\n    return res\n  },\n  // 保存自己的名片信息\n  async saveCardInfo(cardInfo) {\n    let res = await httpService.post('/front/update-user-info', cardInfo)\n    return res\n  }\n}\n"]}]}
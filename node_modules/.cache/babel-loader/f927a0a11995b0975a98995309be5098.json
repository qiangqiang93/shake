{"remainingRequest":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js!/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js??ref--13-0!/Users/qiang/work/hytx/hytx-rebuild/src/api/circle/index.js","dependencies":[{"path":"/Users/qiang/work/hytx/hytx-rebuild/src/api/circle/index.js","mtime":1548151245127},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/qiang/work/hytx/hytx-rebuild/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport store from '../../store';\nimport httpService from '../../service/httpService';\nexport default {\n  // 获取互推列表\n  getMatchList: function () {\n    var _getMatchList = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(loading) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return httpService({\n                loading: loading,\n                url: '/front/inter_push/list'\n              });\n\n            case 2:\n              res = _context.sent;\n              return _context.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function getMatchList(_x) {\n      return _getMatchList.apply(this, arguments);\n    }\n\n    return getMatchList;\n  }(),\n  // 获取自己的互推信息\n  getMatchInfo: function () {\n    var _getMatchInfo = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return httpService.get('/front/inter_push/get_info');\n\n            case 2:\n              res = _context2.sent;\n\n              if (res.status === 0) {\n                data = {\n                  name: res.data.name,\n                  phone: res.data.phone,\n                  user_id: res.data.user_id,\n                  use_num: res.data.use_num,\n                  province: res.data.province,\n                  share_num: res.data.share_num,\n                  is_enabled: res.data.is_enabled,\n                  province_id: res.data.province_id,\n                  material_id: res.data.material_id,\n                  head_picture: res.data.head_picture,\n                  material_style: res.data.material_style,\n                  forme_brows_num: res.data.forme_brows_num,\n                  today_share_num: res.data.today_share_num,\n                  others_browse_num: res.data.others_browse_num,\n                  share_passive_num: res.data.share_passive_num,\n                  yesterday_share_passive_num: res.data.yesterday_share_passive_num\n                };\n                data.material_style = data.material_style;\n\n                if (data.material_style === 4) {\n                  data.material_title = res.data.interPushInfoMaterial.user_name;\n                } else {\n                  data.material_title = res.data.interPushInfoMaterial.title;\n                }\n\n                store.commit('circle/updateMatchInfo', {\n                  type: 'init',\n                  data: data\n                });\n              }\n\n              return _context2.abrupt(\"return\", res);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function getMatchInfo() {\n      return _getMatchInfo.apply(this, arguments);\n    }\n\n    return getMatchInfo;\n  }(),\n\n  /* \n    @name       updateMatchInfo\n    @desc       更新自己的互推信息\n    @params \n        params  Object  互推信息键值对\n  */\n  updateMatchInfo: function () {\n    var _updateMatchInfo = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(params) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return httpService.put('/front/inter_push/info_material', params);\n\n            case 2:\n              res = _context3.sent;\n\n              if (res.status === 0) {\n                store.commit('circle/updateMatchInfo', {\n                  type: 'update',\n                  data: params\n                });\n              }\n\n              return _context3.abrupt(\"return\", res);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function updateMatchInfo(_x2) {\n      return _updateMatchInfo.apply(this, arguments);\n    }\n\n    return updateMatchInfo;\n  }(),\n\n  /* \n    @name       getCircleList\n    @desc       获取互推分享记录、分享任务\n    @params     \n        type    Number  1相互已经分享，2对方没有分享，3我的分享任务\n        page    Number  只有type = 1\n  */\n  getCircleList: function () {\n    var _getCircleList = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(type, page) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return httpService.get('/front/inter_push/share_list', {\n                type: type,\n                page: page\n              });\n\n            case 2:\n              res = _context4.sent;\n\n              if (res.status === 0) {\n                if (type === 3) {\n                  store.commit('circle/updateShareTask', {\n                    type: 'init',\n                    data: res.data[0].passive_inter_push_record\n                  });\n                }\n              }\n\n              return _context4.abrupt(\"return\", res);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function getCircleList(_x3, _x4) {\n      return _getCircleList.apply(this, arguments);\n    }\n\n    return getCircleList;\n  }(),\n  // 根据用户id获取该用户的互推信息\n  getMatchInfoById: function () {\n    var _getMatchInfoById = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5(id) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return httpService.get(\"/front/inter_push/info/\".concat(id));\n\n            case 2:\n              res = _context5.sent;\n              return _context5.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    function getMatchInfoById(_x5) {\n      return _getMatchInfoById.apply(this, arguments);\n    }\n\n    return getMatchInfoById;\n  }(),\n\n  /* \n    @name   shareMatchedInfo\n    @desc   开始互推并生成记录\n    @params\n        params  Object\n            user_id                 登录用户user_id\n            material_style          登录用户互推素材类型\n            material_id             登录用户互推素材id\n            target_user_id          目标用户user_id\n            target_material_style   目标用户互推素材类型\n            target_material_id      目标用户互推素材id\n   */\n  shareMatchedInfo: function () {\n    var _shareMatchedInfo = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6(params) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return httpService.post('/front/inter_push/add', params);\n\n            case 2:\n              res = _context6.sent;\n              return _context6.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    }));\n\n    function shareMatchedInfo(_x6) {\n      return _shareMatchedInfo.apply(this, arguments);\n    }\n\n    return shareMatchedInfo;\n  }(),\n\n  /* \n    @name   shareCount\n    @desc   互推任务分享统计\n    @params\n        created_at              分享日期[YYYY-MM-DD]\n        interpush_id            分享人id\n        target_interpush_id     被分享人id\n  */\n  shareCount: function () {\n    var _shareCount = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee7(created_at, interpush_id, target_interpush_id) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return httpService.get('/front/inter_push/material/wechat_share', {\n                created_at: created_at,\n                interpush_id: interpush_id,\n                target_interpush_id: target_interpush_id\n              });\n\n            case 2:\n              res = _context7.sent;\n              return _context7.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, this);\n    }));\n\n    function shareCount(_x7, _x8, _x9) {\n      return _shareCount.apply(this, arguments);\n    }\n\n    return shareCount;\n  }(),\n\n  /* \n    @name   shareCountByApp\n    @desc   互推任务分享统计\n    @params\n        record_id        分享记录id\n        meterial_id      素材id\n        interpush_id     分享人id\n  */\n  shareCountByApp: function () {\n    var _shareCountByApp = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee8(record_id, meterial_id, interpush_id) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return httpService.get('/front/inter_push/material/share', {\n                record_id: record_id,\n                meterial_id: meterial_id,\n                interpush_id: interpush_id\n              });\n\n            case 2:\n              res = _context8.sent;\n              return _context8.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, this);\n    }));\n\n    function shareCountByApp(_x10, _x11, _x12) {\n      return _shareCountByApp.apply(this, arguments);\n    }\n\n    return shareCountByApp;\n  }(),\n\n  /* \n    @name   shareRemind\n    @desc   互推圈提醒对方分享\n    @parms\n            id              需要提醒的人的id\n  */\n  shareRemind: function () {\n    var _shareRemind = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee9(id) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return httpService.post('/front/inter_push/msg', {\n                to_user_id: id\n              });\n\n            case 2:\n              res = _context9.sent;\n              return _context9.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, this);\n    }));\n\n    function shareRemind(_x13) {\n      return _shareRemind.apply(this, arguments);\n    }\n\n    return shareRemind;\n  }(),\n  //   完成分享任务\n  completeShareTask: function () {\n    var _completeShareTask = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee10(id) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return httpService.put(\"/front/inter_push/passive_share/\".concat(id));\n\n            case 2:\n              res = _context10.sent;\n              return _context10.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, this);\n    }));\n\n    function completeShareTask(_x14) {\n      return _completeShareTask.apply(this, arguments);\n    }\n\n    return completeShareTask;\n  }()\n};",{"version":3,"sources":["/Users/qiang/work/hytx/hytx-rebuild/src/api/circle/index.js"],"names":["store","httpService","getMatchList","loading","url","res","getMatchInfo","get","status","data","name","phone","user_id","use_num","province","share_num","is_enabled","province_id","material_id","head_picture","material_style","forme_brows_num","today_share_num","others_browse_num","share_passive_num","yesterday_share_passive_num","material_title","interPushInfoMaterial","user_name","title","commit","type","updateMatchInfo","params","put","getCircleList","page","passive_inter_push_record","getMatchInfoById","id","shareMatchedInfo","post","shareCount","created_at","interpush_id","target_interpush_id","shareCountByApp","record_id","meterial_id","shareRemind","to_user_id","completeShareTask"],"mappings":"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","sourcesContent":["import store from '../../store'\nimport httpService from '../../service/httpService'\n\nexport default {\n  // 获取互推列表\n  async getMatchList(loading) {\n    let res = await httpService({\n      loading: loading,\n      url: '/front/inter_push/list'\n    })\n    return res\n  },\n  // 获取自己的互推信息\n  async getMatchInfo() {\n    let res = await httpService.get('/front/inter_push/get_info')\n    if (res.status === 0) {\n      let data = {\n        name: res.data.name,\n        phone: res.data.phone,\n        user_id: res.data.user_id,\n        use_num: res.data.use_num,\n        province: res.data.province,\n        share_num: res.data.share_num,\n        is_enabled: res.data.is_enabled,\n        province_id: res.data.province_id,\n        material_id: res.data.material_id,\n        head_picture: res.data.head_picture,\n        material_style: res.data.material_style,\n        forme_brows_num: res.data.forme_brows_num,\n        today_share_num: res.data.today_share_num,\n        others_browse_num: res.data.others_browse_num,\n        share_passive_num: res.data.share_passive_num,\n        yesterday_share_passive_num: res.data.yesterday_share_passive_num\n      }\n      data.material_style = data.material_style\n      if (data.material_style === 4) {\n        data.material_title = res.data.interPushInfoMaterial.user_name\n      } else {\n        data.material_title = res.data.interPushInfoMaterial.title\n      }\n      store.commit('circle/updateMatchInfo', { type: 'init', data: data })\n    }\n    return res\n  },\n  /* \n    @name       updateMatchInfo\n    @desc       更新自己的互推信息\n    @params \n        params  Object  互推信息键值对\n  */\n  async updateMatchInfo(params) {\n    let res = await httpService.put('/front/inter_push/info_material', params)\n    if (res.status === 0) {\n      store.commit('circle/updateMatchInfo', { type: 'update', data: params })\n    }\n    return res\n  },\n  /* \n    @name       getCircleList\n    @desc       获取互推分享记录、分享任务\n    @params     \n        type    Number  1相互已经分享，2对方没有分享，3我的分享任务\n        page    Number  只有type = 1\n  */\n  async getCircleList(type, page) {\n    let res = await httpService.get('/front/inter_push/share_list', {\n      type,\n      page\n    })\n    if (res.status === 0) {\n      if (type === 3) {\n        store.commit('circle/updateShareTask', {\n          type: 'init',\n          data: res.data[0].passive_inter_push_record\n        })\n      }\n    }\n    return res\n  },\n  // 根据用户id获取该用户的互推信息\n  async getMatchInfoById(id) {\n    let res = await httpService.get(`/front/inter_push/info/${id}`)\n    return res\n  },\n  /* \n    @name   shareMatchedInfo\n    @desc   开始互推并生成记录\n    @params\n        params  Object\n            user_id                 登录用户user_id\n            material_style          登录用户互推素材类型\n            material_id             登录用户互推素材id\n            target_user_id          目标用户user_id\n            target_material_style   目标用户互推素材类型\n            target_material_id      目标用户互推素材id\n\n  */\n  async shareMatchedInfo(params) {\n    let res = await httpService.post('/front/inter_push/add', params)\n    return res\n  },\n  /* \n    @name   shareCount\n    @desc   互推任务分享统计\n    @params\n        created_at              分享日期[YYYY-MM-DD]\n        interpush_id            分享人id\n        target_interpush_id     被分享人id\n  */\n  async shareCount(created_at, interpush_id, target_interpush_id) {\n    let res = await httpService.get('/front/inter_push/material/wechat_share', {\n      created_at,\n      interpush_id,\n      target_interpush_id\n    })\n    return res\n  },\n  /* \n    @name   shareCountByApp\n    @desc   互推任务分享统计\n    @params\n        record_id        分享记录id\n        meterial_id      素材id\n        interpush_id     分享人id\n  */\n  async shareCountByApp(record_id, meterial_id, interpush_id) {\n    let res = await httpService.get('/front/inter_push/material/share', {\n      record_id,\n      meterial_id,\n      interpush_id\n    })\n    return res\n  },\n  /* \n    @name   shareRemind\n    @desc   互推圈提醒对方分享\n    @parms\n            id              需要提醒的人的id\n  */\n  async shareRemind(id) {\n    let res = await httpService.post('/front/inter_push/msg', {\n      to_user_id: id\n    })\n    return res\n  },\n  //   完成分享任务\n  async completeShareTask(id) {\n    let res = await httpService.put(`/front/inter_push/passive_share/${id}`)\n    return res\n  }\n}\n"]}]}
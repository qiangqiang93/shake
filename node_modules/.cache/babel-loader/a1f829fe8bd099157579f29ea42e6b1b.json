{"remainingRequest":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js!/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js??ref--13-0!/Users/qiang/work/hytx/hytx-rebuild/src/api/login/index.js","dependencies":[{"path":"/Users/qiang/work/hytx/hytx-rebuild/src/api/login/index.js","mtime":1547617995181},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/qiang/work/hytx/hytx-rebuild/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport user from '../user';\nimport store from '../../store';\nimport httpService from '../../service/httpService';\nexport default {\n  // 密码登录\n  pwdLogin: function () {\n    var _pwdLogin = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(obj) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", httpService({\n                url: \"/app/login\",\n                method: 'post',\n                body: obj,\n                loading: false\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function pwdLogin(_x) {\n      return _pwdLogin.apply(this, arguments);\n    }\n\n    return pwdLogin;\n  }(),\n  // 短信登录\n  codeLogin: function () {\n    var _codeLogin = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(obj) {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", httpService({\n                url: \"/app/phone_login\",\n                method: 'post',\n                body: obj,\n                loading: false\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function codeLogin(_x2) {\n      return _codeLogin.apply(this, arguments);\n    }\n\n    return codeLogin;\n  }(),\n  // 找回密码\n  retrievePwd: function () {\n    var _retrievePwd = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(obj) {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", httpService({\n                url: \"/app/retrieve-password\",\n                method: 'post',\n                body: obj,\n                loading: false\n              }));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function retrievePwd(_x3) {\n      return _retrievePwd.apply(this, arguments);\n    }\n\n    return retrievePwd;\n  }(),\n  // 注册\n  register: function () {\n    var _register = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(obj) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return httpService.post('/front/register', obj);\n\n            case 2:\n              res = _context4.sent;\n\n              if (res.token) {\n                store.commit('system/setToken', res.token);\n                user.getProfile();\n              }\n\n              return _context4.abrupt(\"return\", res);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function register(_x4) {\n      return _register.apply(this, arguments);\n    }\n\n    return register;\n  }(),\n  // 判断手机是否存在\n  phoneExist: function () {\n    var _phoneExist = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(phone) {\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", httpService({\n                url: \"/front/phone-exist\",\n                method: 'post',\n                body: {\n                  phone: phone\n                },\n                loading: false\n              }));\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    function phoneExist(_x5) {\n      return _phoneExist.apply(this, arguments);\n    }\n\n    return phoneExist;\n  }()\n};",{"version":3,"sources":["/Users/qiang/work/hytx/hytx-rebuild/src/api/login/index.js"],"names":["user","store","httpService","pwdLogin","obj","url","method","body","loading","codeLogin","retrievePwd","register","post","res","token","commit","getProfile","phoneExist","phone"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,SAAjB;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,eAAe;AACb;AACMC,EAAAA,QAFO;AAAA;AAAA;AAAA,6CAEEC,GAFF;AAAA;AAAA;AAAA;AAAA;AAAA,+CAGJF,WAAW,CAAC;AACjBG,gBAAAA,GAAG,cADc;AAEjBC,gBAAAA,MAAM,EAAE,MAFS;AAGjBC,gBAAAA,IAAI,EAAEH,GAHW;AAIjBI,gBAAAA,OAAO,EAAE;AAJQ,eAAD,CAHP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAWb;AACMC,EAAAA,SAZO;AAAA;AAAA;AAAA,8CAYGL,GAZH;AAAA;AAAA;AAAA;AAAA;AAAA,gDAaJF,WAAW,CAAC;AACjBG,gBAAAA,GAAG,oBADc;AAEjBC,gBAAAA,MAAM,EAAE,MAFS;AAGjBC,gBAAAA,IAAI,EAAEH,GAHW;AAIjBI,gBAAAA,OAAO,EAAE;AAJQ,eAAD,CAbP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsBb;AACME,EAAAA,WAvBO;AAAA;AAAA;AAAA,8CAuBKN,GAvBL;AAAA;AAAA;AAAA;AAAA;AAAA,gDA0BJF,WAAW,CAAC;AACjBG,gBAAAA,GAAG,0BADc;AAEjBC,gBAAAA,MAAM,EAAE,MAFS;AAGjBC,gBAAAA,IAAI,EAAEH,GAHW;AAIjBI,gBAAAA,OAAO,EAAE;AAJQ,eAAD,CA1BP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiCb;AACMG,EAAAA,QAlCO;AAAA;AAAA;AAAA,8CAkCEP,GAlCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAmCKF,WAAW,CAACU,IAAZ,CAAiB,iBAAjB,EAAoCR,GAApC,CAnCL;;AAAA;AAmCPS,cAAAA,GAnCO;;AAoCX,kBAAIA,GAAG,CAACC,KAAR,EAAe;AACbb,gBAAAA,KAAK,CAACc,MAAN,CAAa,iBAAb,EAAgCF,GAAG,CAACC,KAApC;AACAd,gBAAAA,IAAI,CAACgB,UAAL;AACD;;AAvCU,gDAwCJH,GAxCI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0Cb;AACMI,EAAAA,UA3CO;AAAA;AAAA;AAAA,8CA2CIC,KA3CJ;AAAA;AAAA;AAAA;AAAA;AAAA,gDA4CJhB,WAAW,CAAC;AACjBG,gBAAAA,GAAG,sBADc;AAEjBC,gBAAAA,MAAM,EAAE,MAFS;AAGjBC,gBAAAA,IAAI,EAAE;AACJW,kBAAAA,KAAK,EAALA;AADI,iBAHW;AAMjBV,gBAAAA,OAAO,EAAE;AANQ,eAAD,CA5CP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import user from '../user'\n\nimport store from '../../store'\n\nimport httpService from '../../service/httpService'\n\nexport default {\n  // 密码登录\n  async pwdLogin(obj) {\n    return httpService({\n      url: `/app/login`,\n      method: 'post',\n      body: obj,\n      loading: false\n    })\n    // return httpService.post(`/app/login`, obj)\n  },\n  // 短信登录\n  async codeLogin(obj) {\n    return httpService({\n      url: `/app/phone_login`,\n      method: 'post',\n      body: obj,\n      loading: false\n    })\n    // return httpService.post(`/app/phone_login\n    // `, obj)\n  },\n  // 找回密码\n  async retrievePwd(obj) {\n    // return httpService.post(`/app/retrieve-password\n    // `, obj)\n    return httpService({\n      url: `/app/retrieve-password`,\n      method: 'post',\n      body: obj,\n      loading: false\n    })\n  },\n  // 注册\n  async register(obj) {\n    let res = await httpService.post('/front/register', obj)\n    if (res.token) {\n      store.commit('system/setToken', res.token)\n      user.getProfile()\n    }\n    return res\n  },\n  // 判断手机是否存在\n  async phoneExist(phone) {\n    return httpService({\n      url: `/front/phone-exist`,\n      method: 'post',\n      body: {\n        phone\n      },\n      loading: false\n    })\n  }\n}\n"]}]}
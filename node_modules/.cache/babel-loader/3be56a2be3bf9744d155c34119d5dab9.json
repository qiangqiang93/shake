{"remainingRequest":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js!/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js??ref--14-0!/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js??ref--13-0!/Users/qiang/work/hytx/hytx-rebuild/src/api/webPage/index.js","dependencies":[{"path":"/Users/qiang/work/hytx/hytx-rebuild/src/api/webPage/index.js","mtime":1546861203625},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"/Users/qiang/work/hytx/hytx-rebuild/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/qiang/work/hytx/hytx-rebuild/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport httpService from '@/service/httpService';\nexport default {\n  // 根据网页id获取个人网页\n  getWebPageById: function () {\n    var _getWebPageById = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(id) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return httpService.get(\"/front/personal_page/customs/\".concat(id));\n\n            case 2:\n              res = _context.sent;\n              return _context.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function getWebPageById(_x) {\n      return _getWebPageById.apply(this, arguments);\n    }\n\n    return getWebPageById;\n  }(),\n\n  /* \n        @name   getAllWebPage\n        @desc   获取自己的个人微网列表(支持page和limit两种方式查询)\n        @params\n            input{\n                page    页码    默认值\n                或\n                limit   条数\n                offset  起始位置\n            }\n    */\n  getAllWebPage: function () {\n    var _getAllWebPage = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(input) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (_typeof(input) !== 'object') input = {\n                page: input\n              };\n              _context2.next = 3;\n              return httpService.get('/front/personal_page/all', input);\n\n            case 3:\n              res = _context2.sent;\n              return _context2.abrupt(\"return\", res);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function getAllWebPage(_x2) {\n      return _getAllWebPage.apply(this, arguments);\n    }\n\n    return getAllWebPage;\n  }(),\n\n  /* \n        @name   getAllWebPageByUserId\n        @desc   根据用户id获取该用户的个人微网列表\n        @params\n            input{\n                page    页码\n                userId  用户id\n            }\n    */\n  getAllWebPageByUserId: function () {\n    var _getAllWebPageByUserId = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(userId, page) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return httpService.get('/front/personal_page/byuserid', {\n                page: page,\n                user_id: userId\n              });\n\n            case 2:\n              res = _context3.sent;\n              return _context3.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function getAllWebPageByUserId(_x3, _x4) {\n      return _getAllWebPageByUserId.apply(this, arguments);\n    }\n\n    return getAllWebPageByUserId;\n  }()\n};",{"version":3,"sources":["/Users/qiang/work/hytx/hytx-rebuild/src/api/webPage/index.js"],"names":["httpService","getWebPageById","id","get","res","getAllWebPage","input","page","getAllWebPageByUserId","userId","user_id"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,uBAAxB;AAEA,eAAe;AACb;AACMC,EAAAA,cAFO;AAAA;AAAA;AAAA,6CAEQC,EAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGKF,WAAW,CAACG,GAAZ,wCAAgDD,EAAhD,EAHL;;AAAA;AAGPE,cAAAA,GAHO;AAAA,+CAIJA,GAJI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAMb;;;;;;;;;;;AAWMC,EAAAA,aAjBO;AAAA;AAAA;AAAA,8CAiBOC,KAjBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBX,kBAAI,QAAOA,KAAP,MAAiB,QAArB,EAA+BA,KAAK,GAAG;AAAEC,gBAAAA,IAAI,EAAED;AAAR,eAAR;AAlBpB;AAAA,qBAmBKN,WAAW,CAACG,GAAZ,CAAgB,0BAAhB,EAA4CG,KAA5C,CAnBL;;AAAA;AAmBPF,cAAAA,GAnBO;AAAA,gDAoBJA,GApBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAsBb;;;;;;;;;AASMI,EAAAA,qBA/BO;AAAA;AAAA;AAAA,8CA+BeC,MA/Bf,EA+BuBF,IA/BvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAgCKP,WAAW,CAACG,GAAZ,CAAgB,+BAAhB,EAAiD;AAC/DI,gBAAAA,IAAI,EAAJA,IAD+D;AAE/DG,gBAAAA,OAAO,EAAED;AAFsD,eAAjD,CAhCL;;AAAA;AAgCPL,cAAAA,GAhCO;AAAA,gDAoCJA,GApCI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import httpService from '@/service/httpService'\n\nexport default {\n  // 根据网页id获取个人网页\n  async getWebPageById(id) {\n    let res = await httpService.get(`/front/personal_page/customs/${id}`)\n    return res\n  },\n  /* \n        @name   getAllWebPage\n        @desc   获取自己的个人微网列表(支持page和limit两种方式查询)\n        @params\n            input{\n                page    页码    默认值\n                或\n                limit   条数\n                offset  起始位置\n            }\n    */\n  async getAllWebPage(input) {\n    if (typeof input !== 'object') input = { page: input }\n    let res = await httpService.get('/front/personal_page/all', input)\n    return res\n  },\n  /* \n        @name   getAllWebPageByUserId\n        @desc   根据用户id获取该用户的个人微网列表\n        @params\n            input{\n                page    页码\n                userId  用户id\n            }\n    */\n  async getAllWebPageByUserId(userId, page) {\n    let res = await httpService.get('/front/personal_page/byuserid', {\n      page,\n      user_id: userId\n    })\n    return res\n  }\n}\n"]}]}
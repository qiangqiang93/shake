{"remainingRequest":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js!/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiang/work/hytx/hytx-rebuild/src/components/CircleMeteor/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiang/work/hytx/hytx-rebuild/src/components/CircleMeteor/index.vue","mtime":1547111107922},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.fill\";\nimport _classCallCheck from \"/Users/qiang/work/hytx/hytx-rebuild/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/qiang/work/hytx/hytx-rebuild/node_modules/@babel/runtime/helpers/esm/createClass\";\n//\n//\n//\n//\n//\n//\n//\n//\nimport meteor from './meteor.png';\nvar meteorImg = new Image();\nmeteorImg.src = meteor; // 星星\n\nvar Star =\n/*#__PURE__*/\nfunction () {\n  function Star(width, height) {\n    _classCallCheck(this, Star);\n\n    this.width = width;\n    this.height = height;\n    this.directionX = Math.round(Math.random());\n    this.directionY = Math.round(Math.random());\n  }\n\n  _createClass(Star, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      ctx.beginPath();\n      this.x = Math.round(Math.random() * this.width);\n      this.y = Math.round(Math.random() * this.height);\n      this.r = Math.round(Math.random() * 8);\n      this.opcity = (Math.random() + 0.5).toFixed(2);\n      var grd = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.r);\n      grd.addColorStop(0, \"rgba(255,255,255,\".concat(this.opcity, \")\"));\n      grd.addColorStop(1, 'rgba(255,255,255,0)');\n      ctx.arc(this.x, this.y, this.r, 0, 2 * Math.PI);\n      ctx.fillStyle = grd;\n      ctx.fill();\n      ctx.closePath();\n    }\n  }, {\n    key: \"move\",\n    value: function move(ctx) {\n      var x = Math.round(Math.random() * 2);\n      var y = Math.round(Math.random() * 2);\n      this.x = this.directionX ? this.x + x : this.x - x;\n      this.y = this.directionX ? this.y + y : this.y - y;\n      if (this.x < 0) this.x = this.width;\n      if (this.x > this.width) this.x = 0;\n      if (this.y < 0) this.y = this.height;\n      if (this.y > this.height) this.y = 0;\n      ctx.beginPath();\n      var grd = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.r);\n      grd.addColorStop(0, \"rgba(255,255,255,\".concat(this.opcity, \")\"));\n      grd.addColorStop(1, 'rgba(255,255,255,0)');\n      ctx.arc(this.x, this.y, this.r, 0, 2 * Math.PI);\n      ctx.fillStyle = grd;\n      ctx.fill();\n      ctx.closePath();\n    }\n  }]);\n\n  return Star;\n}(); // 流星\n\n\nvar Meteor =\n/*#__PURE__*/\nfunction () {\n  function Meteor(width, height) {\n    _classCallCheck(this, Meteor);\n\n    this.width = 140;\n    this.height = 140;\n    this.pWidth = width;\n    this.pHeight = height;\n    this.opcity = Math.random().toFixed(2);\n    this.x = Math.round(Math.random() * this.pWidth) + this.width;\n    this.y = -Math.round(Math.random() * 5) * this.height;\n  }\n\n  _createClass(Meteor, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      ctx.beginPath();\n      ctx.globalAlpha = this.opcity;\n      ctx.drawImage(meteorImg, this.x, this.y, this.width, this.height);\n      ctx.closePath();\n    }\n  }, {\n    key: \"move\",\n    value: function move(ctx) {\n      this.x = this.x - 5;\n      this.y = this.y + 5;\n\n      if (this.x < -140 || this.y > this.pHeight + 140) {\n        this.opcity = Math.random().toFixed(2);\n        this.x = Math.round(Math.random() * this.pWidth) + this.width;\n        this.y = -this.height;\n      }\n\n      ctx.beginPath();\n      ctx.globalAlpha = this.opcity;\n      ctx.drawImage(meteorImg, this.x, this.y, this.width, this.height);\n      ctx.closePath();\n    }\n  }]);\n\n  return Meteor;\n}();\n\nexport default {\n  data: function data() {\n    return {\n      ctx: null,\n      // canvas上下文\n      stars: [],\n      // 所有星星\n      meteors: [],\n      // 所有流星\n      width: null,\n      // canvas宽度\n      height: null // canvas高度\n\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.width = this.$refs.canvas.width = this.$refs.canvas.offsetWidth;\n    this.height = this.$refs.canvas.height = this.$refs.canvas.offsetHeight - 75;\n    this.ctx = this.$refs.canvas.getContext('2d');\n    this.createStars();\n    this.createMeteors();\n    setInterval(function () {\n      _this.ctx.clearRect(0, 0, _this.width, _this.height);\n\n      _this.moveStars();\n\n      _this.moveMeteors();\n    }, 40);\n  },\n  methods: {\n    // 创建星星[默认40个]\n    createStars: function createStars() {\n      var num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 40;\n\n      for (var i = 0; i < num; i++) {\n        var star = new Star(this.width, this.height);\n        star.draw(this.ctx);\n        this.stars.push(star);\n      }\n    },\n    // 移动星星\n    moveStars: function moveStars() {\n      var _this2 = this;\n\n      this.stars.forEach(function (item) {\n        item.move(_this2.ctx);\n      });\n    },\n    // 创建流星[默认5个]\n    createMeteors: function createMeteors() {\n      var num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n      for (var i = 0; i < num; i++) {\n        var _meteor = new Meteor(this.width, this.height);\n\n        _meteor.draw(this.ctx);\n\n        this.meteors.push(_meteor);\n      }\n    },\n    // 移动流星\n    moveMeteors: function moveMeteors() {\n      var _this3 = this;\n\n      this.meteors.forEach(function (item) {\n        item.move(_this3.ctx);\n      });\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n    @name       CircleMeteor\n    @desc       互推圈球体背景\n-->\n<template>\n  <canvas class=\"meteor-canvas\" ref=\"canvas\"></canvas>\n</template>\n\n<script>\nimport meteor from './meteor.png'\n\nconst meteorImg = new Image()\nmeteorImg.src = meteor\n\n// 星星\nclass Star {\n  constructor(width, height) {\n    this.width = width\n    this.height = height\n    this.directionX = Math.round(Math.random())\n    this.directionY = Math.round(Math.random())\n  }\n  draw(ctx) {\n    ctx.beginPath()\n    this.x = Math.round(Math.random() * this.width)\n    this.y = Math.round(Math.random() * this.height)\n    this.r = Math.round(Math.random() * 8)\n    this.opcity = (Math.random() + 0.5).toFixed(2)\n    let grd = ctx.createRadialGradient(\n      this.x,\n      this.y,\n      0,\n      this.x,\n      this.y,\n      this.r\n    )\n    grd.addColorStop(0, `rgba(255,255,255,${this.opcity})`)\n    grd.addColorStop(1, 'rgba(255,255,255,0)')\n    ctx.arc(this.x, this.y, this.r, 0, 2 * Math.PI)\n    ctx.fillStyle = grd\n    ctx.fill()\n    ctx.closePath()\n  }\n  move(ctx) {\n    let x = Math.round(Math.random() * 2)\n    let y = Math.round(Math.random() * 2)\n    this.x = this.directionX ? this.x + x : this.x - x\n    this.y = this.directionX ? this.y + y : this.y - y\n    if (this.x < 0) this.x = this.width\n    if (this.x > this.width) this.x = 0\n    if (this.y < 0) this.y = this.height\n    if (this.y > this.height) this.y = 0\n    ctx.beginPath()\n    let grd = ctx.createRadialGradient(\n      this.x,\n      this.y,\n      0,\n      this.x,\n      this.y,\n      this.r\n    )\n    grd.addColorStop(0, `rgba(255,255,255,${this.opcity})`)\n    grd.addColorStop(1, 'rgba(255,255,255,0)')\n    ctx.arc(this.x, this.y, this.r, 0, 2 * Math.PI)\n    ctx.fillStyle = grd\n    ctx.fill()\n    ctx.closePath()\n  }\n}\n// 流星\nclass Meteor {\n  constructor(width, height) {\n    this.width = 140\n    this.height = 140\n    this.pWidth = width\n    this.pHeight = height\n    this.opcity = Math.random().toFixed(2)\n    this.x = Math.round(Math.random() * this.pWidth) + this.width\n    this.y = -Math.round(Math.random() * 5) * this.height\n  }\n  draw(ctx) {\n    ctx.beginPath()\n    ctx.globalAlpha = this.opcity\n    ctx.drawImage(meteorImg, this.x, this.y, this.width, this.height)\n    ctx.closePath()\n  }\n  move(ctx) {\n    this.x = this.x - 5\n    this.y = this.y + 5\n    if (this.x < -140 || this.y > this.pHeight + 140) {\n      this.opcity = Math.random().toFixed(2)\n      this.x = Math.round(Math.random() * this.pWidth) + this.width\n      this.y = -this.height\n    }\n    ctx.beginPath()\n    ctx.globalAlpha = this.opcity\n    ctx.drawImage(meteorImg, this.x, this.y, this.width, this.height)\n    ctx.closePath()\n  }\n}\n\nexport default {\n  data() {\n    return {\n      ctx: null, // canvas上下文\n      stars: [], // 所有星星\n      meteors: [], // 所有流星\n      width: null, // canvas宽度\n      height: null // canvas高度\n    }\n  },\n  mounted() {\n    this.width = this.$refs.canvas.width = this.$refs.canvas.offsetWidth\n    this.height = this.$refs.canvas.height = this.$refs.canvas.offsetHeight - 75\n    this.ctx = this.$refs.canvas.getContext('2d')\n    this.createStars()\n    this.createMeteors()\n    setInterval(() => {\n      this.ctx.clearRect(0, 0, this.width, this.height)\n      this.moveStars()\n      this.moveMeteors()\n    }, 40)\n  },\n  methods: {\n    // 创建星星[默认40个]\n    createStars(num = 40) {\n      for (let i = 0; i < num; i++) {\n        let star = new Star(this.width, this.height)\n        star.draw(this.ctx)\n        this.stars.push(star)\n      }\n    },\n    // 移动星星\n    moveStars() {\n      this.stars.forEach(item => {\n        item.move(this.ctx)\n      })\n    },\n    // 创建流星[默认5个]\n    createMeteors(num = 1) {\n      for (let i = 0; i < num; i++) {\n        let meteor = new Meteor(this.width, this.height)\n        meteor.draw(this.ctx)\n        this.meteors.push(meteor)\n      }\n    },\n    // 移动流星\n    moveMeteors() {\n      this.meteors.forEach(item => {\n        item.move(this.ctx)\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.meteor-canvas {\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n</style>\n"],"sourceRoot":"src/components/CircleMeteor"}]}
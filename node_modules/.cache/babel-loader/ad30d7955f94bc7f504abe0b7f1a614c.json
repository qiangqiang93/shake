{"remainingRequest":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/thread-loader/dist/cjs.js!/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js!/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiang/work/hytx/hytx-rebuild/src/components/CircleItem/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiang/work/hytx/hytx-rebuild/src/components/CircleItem/index.vue","mtime":1548646483159},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/qiang/work/hytx/hytx-rebuild/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Card from '../Card';\nimport CardItem from '../CardItem';\nimport circle from '../../api/circle';\nimport { mapState, mapActions } from 'vuex';\nimport { getArticleCover } from '../../utils';\nimport shareService from '../../service/shareService';\nimport dialogService from '../../service/dialogService';\nexport default {\n  props: ['item', 'type'],\n  data: function data() {\n    return {\n      myShareCover: '',\n      // 对方素材封面\n      shareMeCover: '',\n      // 我的素材封面\n      myShareCard: {},\n      // 对方名片信息\n      shareMeCard: {} // 我的名片信息\n\n    };\n  },\n  mounted: function mounted() {},\n  methods: _objectSpread({}, mapActions(['system/shareGuide']), {\n    // 点击分享\n    shareTask: function shareTask() {\n      if (this.platform === 'wechat') {\n        // 根据不同类型跳转到不同的页面\n        this['system/shareGuide'](true);\n        var material = this.myShare;\n        this.goDetail(material);\n      } else {\n        shareService();\n      }\n    },\n    // 提醒分享\n    shareRemind: function () {\n      var _shareRemind = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!this.shareMe.is_remind) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _context.next = 5;\n                return circle.shareRemind(this.shareMe.user_id);\n\n              case 5:\n                res = _context.sent;\n\n                if (!(res.status !== 0)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                throw new Error(res.message);\n\n              case 8:\n                dialogService.toast('提醒成功');\n                this.shareMe.is_remind = true;\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](0);\n                dialogService.alert(_context.t0.message);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 12]]);\n      }));\n\n      function shareRemind() {\n        return _shareRemind.apply(this, arguments);\n      }\n\n      return shareRemind;\n    }(),\n    // 查看详情\n    goPath: function goPath(type) {\n      var temp = this[type];\n\n      if (this.type === 'task') {\n        this.shareTask();\n      } else {\n        this.goDetail(temp);\n      }\n    },\n    // 跳转到详情[根据不同类型跳转到不同的页面]\n    goDetail: function goDetail(material) {\n      var task;\n      var isTask = this.type === 'task';\n      task = isTask ? \"?task=\".concat(this.item.id, \"&created_at=\").concat(this.item.created_at.substring(0, 10), \"&interpush_id=\").concat(this.item.interpush_id, \"&target_interpush_id=\").concat(this.item.target_interpush_id) : '';\n\n      switch (material.source_style) {\n        case 1:\n          this.$router.push(\"/article/detail/\".concat(material.source_id, \"/\").concat(material.user_id + task));\n          break;\n\n        case 2:\n          this.$router.push(\"/webpage/detail/\".concat(material.source_id + task));\n          break;\n\n        case 3:\n          this.$router.push(\"/marketing/detail/\".concat(material.source_id + task));\n          break;\n\n        case 4:\n          this.$router.push(\"/card/detail/\".concat(material.user_id + task));\n          break;\n\n        default: // nothing\n\n      }\n    },\n    // _getArticleCover\n    _getArticleCover: function _getArticleCover(temp, type) {\n      if (temp.source_style === 1) {\n        this[type] = getArticleCover(temp.cover);\n      } else {\n        this[type] = temp.cover;\n      }\n    },\n    // _parseCard\n    _parseCard: function _parseCard(temp, type) {\n      if (temp.source_style === 4) {\n        this[type] = JSON.parse(temp.title);\n      }\n    }\n  }),\n  computed: _objectSpread({\n    myShare: function myShare() {\n      var temp;\n\n      if (this.type === 'task') {\n        temp = this.item.inter_push_record_materials;\n      } else {\n        temp = this.item.passive_inter_push_record_materials;\n\n        if (temp.user_id !== this.userId) {\n          temp = this.item.inter_push_record_materials;\n        }\n      }\n\n      this._parseCard(temp, 'myShareCard');\n\n      this._getArticleCover(temp, 'myShareCover');\n\n      return temp;\n    },\n    shareMe: function shareMe() {\n      if (this.type === 'task') return null;\n      var temp = this.item.passive_inter_push_record_materials;\n\n      if (temp.user_id === this.userId) {\n        temp = this.item.inter_push_record_materials;\n      }\n\n      this._parseCard(temp, 'shareMeCard');\n\n      this._getArticleCover(temp, 'shareMeCover');\n\n      return temp;\n    }\n  }, mapState({\n    userId: function userId(state) {\n      return state.user.userInfo.id;\n    },\n    platform: function platform(state) {\n      return state.system.platform;\n    }\n  })),\n  components: {\n    Card: Card,\n    CardItem: CardItem\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA,OAAA,IAAA,MAAA,SAAA;AACA,OAAA,QAAA,MAAA,aAAA;AACA,OAAA,MAAA,MAAA,kBAAA;AACA,SAAA,QAAA,EAAA,UAAA,QAAA,MAAA;AACA,SAAA,eAAA,QAAA,aAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AACA,OAAA,aAAA,MAAA,6BAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,EADA;AACA;AACA,MAAA,YAAA,EAAA,EAFA;AAEA;AACA,MAAA,WAAA,EAAA,EAHA;AAGA;AACA,MAAA,WAAA,EAAA,EAJA,CAIA;;AAJA,KAAA;AAMA,GATA;AAUA,EAAA,OAVA,qBAUA,CAAA,CAVA;AAWA,EAAA,OAAA,oBACA,UAAA,CAAA,CAAA,mBAAA,CAAA,CADA;AAEA;AACA,IAAA,SAHA,uBAGA;AACA,UAAA,KAAA,QAAA,KAAA,QAAA,EAAA;AACA;AACA,aAAA,mBAAA,EAAA,IAAA;AACA,YAAA,QAAA,GAAA,KAAA,OAAA;AACA,aAAA,QAAA,CAAA,QAAA;AACA,OALA,MAKA;AACA,QAAA,YAAA;AACA;AACA,KAZA;AAaA;AACA,IAAA,WAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,qBAgBA,KAAA,OAAA,CAAA,SAhBA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,uBAiBA,MAAA,CAAA,WAAA,CAAA,KAAA,OAAA,CAAA,OAAA,CAjBA;;AAAA;AAiBA,gBAAA,GAjBA;;AAAA,sBAkBA,GAAA,CAAA,MAAA,KAAA,CAlBA;AAAA;AAAA;AAAA;;AAAA,sBAkBA,IAAA,KAAA,CAAA,GAAA,CAAA,OAAA,CAlBA;;AAAA;AAmBA,gBAAA,aAAA,CAAA,KAAA,CAAA,MAAA;AACA,qBAAA,OAAA,CAAA,SAAA,GAAA,IAAA;AApBA;AAAA;;AAAA;AAAA;AAAA;AAsBA,gBAAA,aAAA,CAAA,KAAA,CAAA,YAAA,OAAA;;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyBA;AACA,IAAA,MA1BA,kBA0BA,IA1BA,EA0BA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA,CAAA;;AACA,UAAA,KAAA,IAAA,KAAA,MAAA,EAAA;AACA,aAAA,SAAA;AACA,OAFA,MAEA;AACA,aAAA,QAAA,CAAA,IAAA;AACA;AACA,KAjCA;AAkCA;AACA,IAAA,QAnCA,oBAmCA,QAnCA,EAmCA;AACA,UAAA,IAAA;AACA,UAAA,MAAA,GAAA,KAAA,IAAA,KAAA,MAAA;AACA,MAAA,IAAA,GAAA,MAAA,mBACA,KAAA,IAAA,CAAA,EADA,yBACA,KAAA,IAAA,CAAA,UAAA,CAAA,SAAA,CACA,CADA,EAEA,EAFA,CADA,2BAIA,KAAA,IAAA,CAAA,YAJA,kCAKA,KAAA,IAAA,CAAA,mBALA,IAOA,EAPA;;AAQA,cAAA,QAAA,CAAA,YAAA;AACA,aAAA,CAAA;AACA,eAAA,OAAA,CAAA,IAAA,2BACA,QAAA,CAAA,SADA,cACA,QAAA,CAAA,OAAA,GAAA,IADA;AAGA;;AACA,aAAA,CAAA;AACA,eAAA,OAAA,CAAA,IAAA,2BAAA,QAAA,CAAA,SAAA,GAAA,IAAA;AACA;;AACA,aAAA,CAAA;AACA,eAAA,OAAA,CAAA,IAAA,6BAAA,QAAA,CAAA,SAAA,GAAA,IAAA;AACA;;AACA,aAAA,CAAA;AACA,eAAA,OAAA,CAAA,IAAA,wBAAA,QAAA,CAAA,OAAA,GAAA,IAAA;AACA;;AACA,gBAfA,CAgBA;;AAhBA;AAkBA,KAhEA;AAiEA;AACA,IAAA,gBAlEA,4BAkEA,IAlEA,EAkEA,IAlEA,EAkEA;AACA,UAAA,IAAA,CAAA,YAAA,KAAA,CAAA,EAAA;AACA,aAAA,IAAA,IAAA,eAAA,CAAA,IAAA,CAAA,KAAA,CAAA;AACA,OAFA,MAEA;AACA,aAAA,IAAA,IAAA,IAAA,CAAA,KAAA;AACA;AACA,KAxEA;AAyEA;AACA,IAAA,UA1EA,sBA0EA,IA1EA,EA0EA,IA1EA,EA0EA;AACA,UAAA,IAAA,CAAA,YAAA,KAAA,CAAA,EAAA;AACA,aAAA,IAAA,IAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA;AACA;AACA;AA9EA,IAXA;AA2FA,EAAA,QAAA;AACA,IAAA,OAAA,EAAA,mBAAA;AACA,UAAA,IAAA;;AACA,UAAA,KAAA,IAAA,KAAA,MAAA,EAAA;AACA,QAAA,IAAA,GAAA,KAAA,IAAA,CAAA,2BAAA;AACA,OAFA,MAEA;AACA,QAAA,IAAA,GAAA,KAAA,IAAA,CAAA,mCAAA;;AACA,YAAA,IAAA,CAAA,OAAA,KAAA,KAAA,MAAA,EAAA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA,CAAA,2BAAA;AACA;AACA;;AACA,WAAA,UAAA,CAAA,IAAA,EAAA,aAAA;;AACA,WAAA,gBAAA,CAAA,IAAA,EAAA,cAAA;;AACA,aAAA,IAAA;AACA,KAdA;AAeA,IAAA,OAAA,EAAA,mBAAA;AACA,UAAA,KAAA,IAAA,KAAA,MAAA,EAAA,OAAA,IAAA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA,CAAA,mCAAA;;AACA,UAAA,IAAA,CAAA,OAAA,KAAA,KAAA,MAAA,EAAA;AACA,QAAA,IAAA,GAAA,KAAA,IAAA,CAAA,2BAAA;AACA;;AACA,WAAA,UAAA,CAAA,IAAA,EAAA,aAAA;;AACA,WAAA,gBAAA,CAAA,IAAA,EAAA,cAAA;;AACA,aAAA,IAAA;AACA;AAxBA,KAyBA,QAAA,CAAA;AACA,IAAA,MAAA,EAAA,gBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,IAAA,CAAA,QAAA,CAAA,EAAA;AAAA,KADA;AAEA,IAAA,QAAA,EAAA,kBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,MAAA,CAAA,QAAA;AAAA;AAFA,GAAA,CAzBA,CA3FA;AAyHA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA,IADA;AAEA,IAAA,QAAA,EAAA;AAFA;AAzHA,CAAA","sourcesContent":["<!--\n    @name       CircleItem\n    @desc       互推圈分享记录、分享任务\n    @props      \n        item    <Object>    当前项\n        type    <Enum>      \n                    [\n                        'shared'    互相分享\n                        'unShare'   对方为分享\n                        'task'      分享任务\n                    ]\n-->\n\n<template>\n  <div class=\"circle-item\">\n    <div class=\"circle-item-item bas-border\" v-if=\"type !== 'task'\">\n      <div class=\"circle-item-user\">\n        <div class=\"circle-item-header\">\n          <img v-if=\"shareMe.head_portrait\" :src=\"shareMe.head_portrait\" alt=\"\" class=\"circle-item-head-img\">\n          <img v-else src=\"/static/img/default-header.png\" alt=\"\" class=\"circle-item-head-img\">\n        </div>\n        <p class=\"circle-item-name\" v-text=\"shareMe.user_name || '未命名'\"></p>\n        <p class=\"item-browse-num\">\n          我为他带来<span class=\"browse-num\" v-text=\"shareMe.browse_num\"></span>次浏览\n        </p>\n      </div>\n      <div class=\"circle-item-content\" @click=\"goPath('shareMe')\">\n        <template v-if=\"shareMe.source_style === 4\">\n          <div class=\"circle-item-poster\">\n            <Card class=\"circle-card\" :item=\"shareMeCard\"></Card>\n          </div>\n          <div class=\"circle-item-infos\">\n            <div class=\"item-infos-name\" v-text=\"shareMeCard.user_name\"></div>\n            <div class=\"item-infos-info\">\n              <span class=\"item-info-date\" v-text=\"shareMeCard.profession\"></span>\n              <!-- <span class=\"item-info-cutline\">|</span> -->\n              <!-- <span class=\"item-info-count\" v-text=\"'互联网'\"></span> -->\n            </div>\n            <div class=\"item-infos-info\">\n              <span class=\"item-info-date\">{{item.share_time | timeToNow}}</span>\n              <span class=\"item-info-count\" v-if=\"type === 'shared'\" v-text=\"'浏览' + shareMe.browse_num\"></span>\n              <p class=\"item-browse-remind\" v-if=\"type === 'unShare'\" :class=\"{'disabled': shareMe.is_remind}\" @click=\"shareRemind()\">\n                <span v-text=\"shareMe.is_remind ? '已提醒分享' : '提醒他分享'\"></span>\n              </p>\n            </div>\n          </div>\n        </template>\n        <template v-else>\n          <div class=\"circle-item-poster\" :style=\"{'background-image': 'url('+ shareMeCover+')'}\"></div>\n          <div class=\"circle-item-infos\">\n            <div class=\"item-infos-name\" :class=\"{'one-line': type === 'unShare'}\" v-text=\"shareMe.title\"></div>\n            <div class=\"item-infos-info\">\n              <span class=\"item-info-date\">{{item.share_time | timeToNow}}</span>\n              <span class=\"item-info-count\" v-if=\"type === 'shared'\" v-text=\"'浏览' + shareMe.browse_num\"></span>\n              <p class=\"item-browse-remind\" v-if=\"type === 'unShare'\" :class=\"{'disabled': shareMe.is_remind}\" @click.stop=\"shareRemind()\">\n                <span v-text=\"shareMe.is_remind ? '已提醒分享' : '提醒他分享'\"></span>\n              </p>\n            </div>\n          </div>\n        </template>\n      </div>\n    </div>\n    <div class=\"circle-item-item\">\n      <div class=\"circle-item-user\">\n        <div class=\"circle-item-header\">\n          <img v-if=\"myShare.head_portrait\" :src=\"myShare.head_portrait\" alt=\"\" class=\"circle-item-head-img\">\n          <img v-else src=\"/static/img/default-header.png\" alt=\"\" class=\"circle-item-head-img\">\n        </div>\n        <p class=\"circle-item-name\" v-text=\"myShare.user_name || '未命名'\"></p>\n        <p class=\"item-browse-num\" v-if=\"type === 'task'\" @click.stop=\"shareTask()\">\n          <i class=\"iconfont icon-fenxiang\"></i>\n        </p>\n        <p class=\"item-browse-num\" v-else>\n          他为我带来<span class=\"browse-num\" v-text=\"myShare.browse_num\"></span>次浏览\n        </p>\n      </div>\n      <div class=\"circle-item-content\" @click=\"goPath('myShare')\">\n        <template v-if=\"myShare.source_style === 4\">\n          <div class=\"circle-item-poster\">\n            <Card class=\"circle-card\" :item=\"myShareCard\"></Card>\n          </div>\n          <div class=\"circle-item-infos\">\n            <p class=\"item-infos-name\" v-text=\"myShareCard.user_name\"></p>\n            <p class=\"item-infos-info\">\n              <span class=\"item-info-date\" v-text=\"myShareCard.profession\"></span>\n              <!-- <span class=\"item-info-cutline\">|</span> -->\n              <!-- <span class=\"item-info-count\" v-text=\"'互联网'\"></span> -->\n            </p>\n            <p class=\"item-infos-info\" v-if=\"type === 'shared'\">\n              <span class=\"item-info-date\">{{item.target_share_time | timeToNow}}</span>\n              <span class=\"item-info-count\" v-text=\"'浏览' + myShare.browse_num\"></span>\n            </p>\n          </div>\n        </template>\n        <template v-else>\n          <div class=\"circle-item-poster\" :style=\"{'background-image': 'url('+ myShareCover+')'}\"></div>\n          <div class=\"circle-item-infos\">\n            <p class=\"item-infos-name\" v-text=\"myShare.title\"></p>\n            <p class=\"item-infos-info\" v-if=\"type === 'shared'\">\n              <span class=\"item-info-date\">{{item.target_share_time | timeToNow}}</span>\n              <span class=\"item-info-count\" v-text=\"'浏览' + myShare.browse_num\"></span>\n            </p>\n          </div>\n        </template>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Card from '../Card'\nimport CardItem from '../CardItem'\nimport circle from '../../api/circle'\nimport { mapState, mapActions } from 'vuex'\nimport { getArticleCover } from '../../utils'\nimport shareService from '../../service/shareService'\nimport dialogService from '../../service/dialogService'\nexport default {\n  props: ['item', 'type'],\n  data() {\n    return {\n      myShareCover: '', // 对方素材封面\n      shareMeCover: '', // 我的素材封面\n      myShareCard: {}, // 对方名片信息\n      shareMeCard: {} // 我的名片信息\n    }\n  },\n  mounted() {},\n  methods: {\n    ...mapActions(['system/shareGuide']),\n    // 点击分享\n    shareTask() {\n      if (this.platform === 'wechat') {\n        // 根据不同类型跳转到不同的页面\n        this['system/shareGuide'](true)\n        let material = this.myShare\n        this.goDetail(material)\n      } else {\n        shareService()\n      }\n    },\n    // 提醒分享\n    async shareRemind() {\n      try {\n        if (this.shareMe.is_remind) return\n        let res = await circle.shareRemind(this.shareMe.user_id)\n        if (res.status !== 0) throw new Error(res.message)\n        dialogService.toast('提醒成功')\n        this.shareMe.is_remind = true\n      } catch (err) {\n        dialogService.alert(err.message)\n      }\n    },\n    // 查看详情\n    goPath(type) {\n      let temp = this[type]\n      if (this.type === 'task') {\n        this.shareTask()\n      } else {\n        this.goDetail(temp)\n      }\n    },\n    // 跳转到详情[根据不同类型跳转到不同的页面]\n    goDetail(material) {\n      let task\n      let isTask = this.type === 'task'\n      task = isTask\n        ? `?task=${this.item.id}&created_at=${this.item.created_at.substring(\n            0,\n            10\n          )}&interpush_id=${this.item.interpush_id}&target_interpush_id=${\n            this.item.target_interpush_id\n          }`\n        : ''\n      switch (material.source_style) {\n        case 1:\n          this.$router.push(\n            `/article/detail/${material.source_id}/${material.user_id + task}`\n          )\n          break\n        case 2:\n          this.$router.push(`/webpage/detail/${material.source_id + task}`)\n          break\n        case 3:\n          this.$router.push(`/marketing/detail/${material.source_id + task}`)\n          break\n        case 4:\n          this.$router.push(`/card/detail/${material.user_id + task}`)\n          break\n        default:\n        // nothing\n      }\n    },\n    // _getArticleCover\n    _getArticleCover(temp, type) {\n      if (temp.source_style === 1) {\n        this[type] = getArticleCover(temp.cover)\n      } else {\n        this[type] = temp.cover\n      }\n    },\n    // _parseCard\n    _parseCard(temp, type) {\n      if (temp.source_style === 4) {\n        this[type] = JSON.parse(temp.title)\n      }\n    }\n  },\n  computed: {\n    myShare: function() {\n      let temp\n      if (this.type === 'task') {\n        temp = this.item.inter_push_record_materials\n      } else {\n        temp = this.item.passive_inter_push_record_materials\n        if (temp.user_id !== this.userId) {\n          temp = this.item.inter_push_record_materials\n        }\n      }\n      this._parseCard(temp, 'myShareCard')\n      this._getArticleCover(temp, 'myShareCover')\n      return temp\n    },\n    shareMe: function() {\n      if (this.type === 'task') return null\n      let temp = this.item.passive_inter_push_record_materials\n      if (temp.user_id === this.userId) {\n        temp = this.item.inter_push_record_materials\n      }\n      this._parseCard(temp, 'shareMeCard')\n      this._getArticleCover(temp, 'shareMeCover')\n      return temp\n    },\n    ...mapState({\n      userId: state => state.user.userInfo.id,\n      platform: state => state.system.platform\n    })\n  },\n  components: {\n    Card,\n    CardItem\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.circle-item {\n  width: 690px;\n  /* height: 490px; */\n  padding: 0 25px;\n  background: #fff;\n  border-radius: 10px;\n  box-sizing: border-box;\n  font-family: 'PingFang SC Medium';\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.05);\n}\n.circle-item-item {\n  width: 100%;\n  padding: 30px 0;\n  overflow: hidden;\n  position: relative;\n  box-sizing: border-box;\n  &.bas-border {\n    border-bottom: 1px solid #eaeaea;\n  }\n}\n.circle-item-user {\n  width: 100%;\n  height: 36px;\n  line-height: 36px;\n  margin-bottom: 25px;\n  /* position: relative; */\n}\n.circle-item-header {\n  float: left;\n  width: 36px;\n  height: 36px;\n  overflow: hidden;\n  margin-right: 18px;\n  border-radius: 18px;\n}\n.circle-item-head-img {\n  width: 100%;\n  height: 100%;\n}\n.circle-item-name {\n  float: left;\n  font-size: 26px;\n  color: #000033;\n}\n.item-browse-num {\n  float: right;\n  font-size: 24px;\n  color: #666666;\n  .browse-num {\n    color: #34bd0a;\n  }\n  .icon-fenxiang {\n    font-size: 32px;\n  }\n}\n.item-browse-remind {\n  right: 0;\n  top: -12.5px;\n  width: 180px;\n  height: 50px;\n  color: #fff;\n  font-size: 22px;\n  overflow: hidden;\n  line-height: 50px;\n  position: absolute;\n  text-align: center;\n  border-radius: 25px;\n  background: #2850f4;\n  &.disabled {\n    background: #fff;\n  }\n}\n.circle-item-content {\n  width: 100%;\n  height: 124px;\n  display: flex;\n  overflow: hidden;\n}\n.circle-item-poster {\n  width: 220px;\n  height: 124px;\n  margin-right: 25px;\n  border-radius: 8px;\n  background-size: cover;\n  background-position: center;\n  .circle-card {\n    transform: scale(0.3);\n    transform-origin: 0 0;\n  }\n}\n.item-info-cutline {\n  margin-right: 35px;\n}\n.circle-item-infos {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n}\n.item-infos-name {\n  font-size: 30px;\n  color: #0a0a0a;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  &.one-line {\n    -webkit-line-clamp: 1;\n  }\n}\n.item-infos-info {\n  font-size: 22px;\n  color: #666666;\n  position: relative;\n}\n.item-info-date {\n  margin-right: 35px;\n}\n</style>\n"],"sourceRoot":"src/components/CircleItem"}]}
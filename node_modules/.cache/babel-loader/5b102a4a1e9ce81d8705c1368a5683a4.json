{"remainingRequest":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/thread-loader/dist/cjs.js!/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js!/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js??ref--13-0!/Users/qiang/work/hytx/hytx-rebuild/src/utils/index.js","dependencies":[{"path":"/Users/qiang/work/hytx/hytx-rebuild/src/utils/index.js","mtime":1547464836044},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/qiang/work/hytx/hytx-rebuild/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport httpService from '../service/httpService.js';\nimport store from '../store/index.js';\nimport User from '../api/user';\nimport config from '../config/index';\n/* \n    判断前往的路径是否为分享路径\n*/\n\nvar isShare = function isShare(path) {\n  var regs = config.sharePath.map(function (item) {\n    return new RegExp('^' + item);\n  });\n  return regs.some(function (item) {\n    return item.test(path);\n  });\n};\n/* \n    判断前往路径是否为需引导注册的路径,并返回类型\n*/\n\n\nvar shouldGuid = function shouldGuid(path) {\n  var type = null;\n  var paths = config.registerGuidPath;\n\n  for (var i = 0; i < paths.length; i++) {\n    var reg = new RegExp('^' + paths[i]);\n\n    if (reg.test(path)) {\n      type = path.split('/')[1];\n      break;\n    }\n  }\n\n  return type;\n};\n/*判断是否为ios设备\n *@method isIos\n *@param  无\n *@return {Boolean} true  为ios false 安卓\n */\n\n\nvar isIos = function isIos() {\n  var u = navigator.userAgent;\n  return !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\n};\n/*获取上传oss配置\n *@method getOssConfig\n *@param  无\n *@return {object} 返回上传需要的oss配置信息\n */\n\n\nvar getOssConfig = function getOssConfig() {\n  httpService({\n    loading: false,\n    url: '/front/get-web-policy'\n  }).then(function (res) {\n    store.commit('system/updateOssConfig', res);\n  });\n};\n/*抓取营销网页的第一张图片作为封面\n *@method getMarketingCover\n *@param {String} input 营销网页内容\n *@return {String} 返回封面图片地址\n */\n\n\nvar getMarketingCover = function getMarketingCover(input) {\n  if (typeof input === 'string') {\n    input = JSON.parse(input);\n  }\n\n  input = Array.isArray(input) ? input : input.content;\n\n  for (var i = 0; i < input.length; i++) {\n    if (input[i].type === 'img') {\n      return input[i].src;\n    }\n  }\n\n  return window.host + '/static/marketing/cover.png';\n};\n/*个人网页(固定模板和自定义模板)\n *@method pageCover\n *@param {object} input 后台返回的关于网页的相关数据\n *@return {String} 返回封面图片地址\n */\n\n\nvar pageCover = function pageCover(input) {\n  try {\n    if (input.type === 1) {\n      var content = JSON.parse(input.content);\n      var cover = content[0].backImg.src || content[0].backImg;\n      return /^http/.test(cover) ? cover : '/' + cover;\n    } else if (input.type === 2) {\n      var _content = JSON.parse(input.content);\n\n      for (var i = 0; i < _content.length; i++) {\n        if (_content[i].type === 'slider') {\n          return _content[i].children[0].img.src;\n        }\n      }\n\n      return window.host + '/static/cover_custom.png';\n    } else {\n      return /^\\[/.test(input.cover_path) ? JSON.parse(input.cover_path)[0] : input.cover_path;\n    }\n  } catch (err) {\n    return window.host + '/static/cover_custom.png';\n  }\n};\n/* \n    获取文章分享封面\n*/\n\n\nvar getArticleCover = function getArticleCover(input) {\n  try {\n    return JSON.parse(input)[0];\n  } catch (err) {\n    return input;\n  }\n};\n/*设置cookie\n *@method setCookie\n *@param {String} val token\n *@return 无\n */\n\n\nvar setCookie = function setCookie(val) {\n  store.commit('system/setToken', val);\n};\n/*得到cookie\n *@method getCookie\n *@param 无\n *@return {String} cookie值\n */\n\n\nvar getCookie = function getCookie() {\n  return store.state.system.token;\n};\n/*\n  @params\n    key\n*/\n\n\nvar delCookie = function delCookie(key) {\n  store.commit('system/setToken', null);\n};\n/*获取url指定名称的参数\n *@method getParamsFromUrl\n *@param {Srting} paramName 想获取的参数的名称\n *@return {String} 指定名称参数结果\n */\n\n\nvar getParamsFromUrl = function getParamsFromUrl(paramName) {\n  var args = new Object();\n  var argsStr = location.href.substring(location.href.indexOf('?')); //获取URL参数字符串\n\n  if (argsStr.length > 0) {\n    argsStr = argsStr.substring(1);\n    var nameValueArr = argsStr.split('&'); //多参数\n\n    for (var i = 0; i < nameValueArr.length; i++) {\n      var pos = nameValueArr[i].indexOf('=');\n      if (pos == -1) continue; //如果没有找到就跳过\n\n      var argName = nameValueArr[i].substring(0, pos); //提取name\n\n      var argVal = nameValueArr[i].substring(pos + 1); //提取value\n\n      args[argName] = unescape(argVal);\n    }\n\n    return args[paramName];\n  }\n};\n/*获取系统信息以及个人信息\n *@method getSystemInfo\n *@param\n *@return\n */\n\n\nvar getSystemInfo =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var token, platform;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            getOssConfig();\n            token = getParamsFromUrl('token');\n            platform = getParamsFromUrl('platform');\n            store.commit('system/setPlatform', platform || 'wechat');\n            store.commit('system/setToken', token || store.state.system.token || '');\n\n            if (store.state.system.platform !== 'wechat') {\n              if (token || !store.state.user.userInfo) {\n                User.getProfile();\n              }\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function getSystemInfo() {\n    return _ref.apply(this, arguments);\n  };\n}();\n/* \n    @name   delHTML\n    @desc   删除html标签\n    @params\n            str         传入的文本字符串\n    @return \n            str         不含html标签的文本\n*/\n\n\nvar delHTML = function delHTML(str) {\n  return str.replace(/<[^>]+>/g, '');\n};\n\nexport { isIos, isShare, delHTML, pageCover, setCookie, delCookie, getCookie, shouldGuid, getOssConfig, getSystemInfo, getArticleCover, getParamsFromUrl, getMarketingCover };",{"version":3,"sources":["/Users/qiang/work/hytx/hytx-rebuild/src/utils/index.js"],"names":["httpService","store","User","config","isShare","path","regs","sharePath","map","item","RegExp","some","test","shouldGuid","type","paths","registerGuidPath","i","length","reg","split","isIos","u","navigator","userAgent","match","getOssConfig","loading","url","then","res","commit","getMarketingCover","input","JSON","parse","Array","isArray","content","src","window","host","pageCover","cover","backImg","children","img","cover_path","err","getArticleCover","setCookie","val","getCookie","state","system","token","delCookie","key","getParamsFromUrl","paramName","args","Object","argsStr","location","href","substring","indexOf","nameValueArr","pos","argName","argVal","unescape","getSystemInfo","platform","user","userInfo","getProfile","delHTML","str","replace"],"mappings":"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","sourcesContent":["import httpService from '../service/httpService.js'\nimport store from '../store/index.js'\nimport User from '../api/user'\nimport config from '../config/index'\n/* \n    判断前往的路径是否为分享路径\n*/\nconst isShare = path => {\n  let regs = config.sharePath.map(item => new RegExp('^' + item))\n  return regs.some(item => item.test(path))\n}\n/* \n    判断前往路径是否为需引导注册的路径,并返回类型\n*/\nconst shouldGuid = path => {\n  let type = null\n  let paths = config.registerGuidPath\n  for (let i = 0; i < paths.length; i++) {\n    let reg = new RegExp('^' + paths[i])\n    if (reg.test(path)) {\n      type = path.split('/')[1]\n      break\n    }\n  }\n  return type\n}\n\n/*判断是否为ios设备\n *@method isIos\n *@param  无\n *@return {Boolean} true  为ios false 安卓\n */\nconst isIos = () => {\n  let u = navigator.userAgent\n  return !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/)\n}\n/*获取上传oss配置\n *@method getOssConfig\n *@param  无\n *@return {object} 返回上传需要的oss配置信息\n */\nconst getOssConfig = () => {\n  httpService({\n    loading: false,\n    url: '/front/get-web-policy'\n  }).then(res => {\n    store.commit('system/updateOssConfig', res)\n  })\n}\n\n/*抓取营销网页的第一张图片作为封面\n *@method getMarketingCover\n *@param {String} input 营销网页内容\n *@return {String} 返回封面图片地址\n */\nconst getMarketingCover = input => {\n  if (typeof input === 'string') {\n    input = JSON.parse(input)\n  }\n  input = Array.isArray(input) ? input : input.content\n  for (let i = 0; i < input.length; i++) {\n    if (input[i].type === 'img') {\n      return input[i].src\n    }\n  }\n  return window.host + '/static/marketing/cover.png'\n}\n\n/*个人网页(固定模板和自定义模板)\n *@method pageCover\n *@param {object} input 后台返回的关于网页的相关数据\n *@return {String} 返回封面图片地址\n */\nconst pageCover = input => {\n  try {\n    if (input.type === 1) {\n      let content = JSON.parse(input.content)\n      let cover = content[0].backImg.src || content[0].backImg\n      return /^http/.test(cover) ? cover : '/' + cover\n    } else if (input.type === 2) {\n      let content = JSON.parse(input.content)\n      for (let i = 0; i < content.length; i++) {\n        if (content[i].type === 'slider') {\n          return content[i].children[0].img.src\n        }\n      }\n      return window.host + '/static/cover_custom.png'\n    } else {\n      return /^\\[/.test(input.cover_path)\n        ? JSON.parse(input.cover_path)[0]\n        : input.cover_path\n    }\n  } catch (err) {\n    return window.host + '/static/cover_custom.png'\n  }\n}\n\n/* \n    获取文章分享封面\n*/\nconst getArticleCover = input => {\n  try {\n    return JSON.parse(input)[0]\n  } catch (err) {\n    return input\n  }\n}\n\n/*设置cookie\n *@method setCookie\n *@param {String} val token\n *@return 无\n */\nconst setCookie = val => {\n  store.commit('system/setToken', val)\n}\n\n/*得到cookie\n *@method getCookie\n *@param 无\n *@return {String} cookie值\n */\nconst getCookie = () => {\n  return store.state.system.token\n}\n/*\n  @params\n    key\n*/\nconst delCookie = key => {\n  store.commit('system/setToken', null)\n}\n/*获取url指定名称的参数\n *@method getParamsFromUrl\n *@param {Srting} paramName 想获取的参数的名称\n *@return {String} 指定名称参数结果\n */\nconst getParamsFromUrl = paramName => {\n  var args = new Object()\n  var argsStr = location.href.substring(location.href.indexOf('?')) //获取URL参数字符串\n  if (argsStr.length > 0) {\n    argsStr = argsStr.substring(1)\n    var nameValueArr = argsStr.split('&') //多参数\n    for (var i = 0; i < nameValueArr.length; i++) {\n      var pos = nameValueArr[i].indexOf('=')\n      if (pos == -1) continue //如果没有找到就跳过\n      var argName = nameValueArr[i].substring(0, pos) //提取name\n      var argVal = nameValueArr[i].substring(pos + 1) //提取value\n      args[argName] = unescape(argVal)\n    }\n    return args[paramName]\n  }\n}\n/*获取系统信息以及个人信息\n *@method getSystemInfo\n *@param\n *@return\n */\nconst getSystemInfo = async () => {\n  getOssConfig()\n  let token = getParamsFromUrl('token')\n  let platform = getParamsFromUrl('platform')\n  store.commit('system/setPlatform', platform || 'wechat')\n  store.commit('system/setToken', token || store.state.system.token || '')\n  if (store.state.system.platform !== 'wechat') {\n    if (token || !store.state.user.userInfo) {\n      User.getProfile()\n    }\n  }\n}\n\n/* \n    @name   delHTML\n    @desc   删除html标签\n    @params\n            str         传入的文本字符串\n    @return \n            str         不含html标签的文本\n*/\nconst delHTML = str => {\n  return str.replace(/<[^>]+>/g, '')\n}\n\nexport {\n  isIos,\n  isShare,\n  delHTML,\n  pageCover,\n  setCookie,\n  delCookie,\n  getCookie,\n  shouldGuid,\n  getOssConfig,\n  getSystemInfo,\n  getArticleCover,\n  getParamsFromUrl,\n  getMarketingCover\n}\n"]}]}
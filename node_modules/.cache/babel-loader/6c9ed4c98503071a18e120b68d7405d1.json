{"remainingRequest":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/thread-loader/dist/cjs.js!/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js!/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiang/work/hytx/hytx-rebuild/src/module/mine/qr-code/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiang/work/hytx/hytx-rebuild/src/module/mine/qr-code/index.vue","mtime":1548230663225},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/qiang/work/hytx/hytx-rebuild/node_modules/@babel/runtime/regenerator\";\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AppHeader from '../../../components/AppHeader';\nimport { mapState } from 'vuex';\nimport httpService from '@/service/httpService';\nexport default {\n  name: 'mine-qrCode',\n  components: {\n    AppHeader: AppHeader\n  },\n  data: function data() {\n    return {\n      code: {\n        head_picture: '',\n        user_name: '',\n        province: '',\n        qr_code: '',\n        city: ''\n      }\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return httpService.get('/front/get-wechat-code', {\n                user_id: this.$route.params.id\n              });\n\n            case 3:\n              res = _context.sent;\n\n              if (!(res.status !== 0)) {\n                _context.next = 6;\n                break;\n              }\n\n              throw new Error(res.message);\n\n            case 6:\n              this.code = res.data;\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              this.$createDialog({\n                type: 'alert',\n                title: _context.t0.message,\n                icon: 'icon-tips-alert'\n              }).show();\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 9]]);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  computed: _objectSpread({}, mapState({\n    user: function user(state) {\n      return state.user.userInfo;\n    }\n  }))\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAA,SAAA,MAAA,+BAAA;AACA,SAAA,QAAA,QAAA,MAAA;AACA,OAAA,WAAA,MAAA,uBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,SAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,YAAA,EAAA,EADA;AAEA,QAAA,SAAA,EAAA,EAFA;AAGA,QAAA,QAAA,EAAA,EAHA;AAIA,QAAA,OAAA,EAAA,EAJA;AAKA,QAAA,IAAA,EAAA;AALA;AADA,KAAA;AASA,GAbA;AAcA,EAAA,OAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAgBA,WAAA,CAAA,GAAA,CAAA,wBAAA,EAAA;AACA,gBAAA,OAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA;AADA,eAAA,CAhBA;;AAAA;AAgBA,cAAA,GAhBA;;AAAA,oBAmBA,GAAA,CAAA,MAAA,KAAA,CAnBA;AAAA;AAAA;AAAA;;AAAA,oBAoBA,IAAA,KAAA,CAAA,GAAA,CAAA,OAAA,CApBA;;AAAA;AAsBA,mBAAA,IAAA,GAAA,GAAA,CAAA,IAAA;AAtBA;AAAA;;AAAA;AAAA;AAAA;AAwBA,mBAAA,aAAA,CAAA;AACA,gBAAA,IAAA,EAAA,OADA;AAEA,gBAAA,KAAA,EAAA,YAAA,OAFA;AAGA,gBAAA,IAAA,EAAA;AAHA,eAAA,EAIA,IAJA;;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA+BA,EAAA,QAAA,oBACA,QAAA,CAAA;AACA,IAAA,IAAA,EAAA,cAAA,KAAA;AAAA,aAAA,KAAA,CAAA,IAAA,CAAA,QAAA;AAAA;AADA,GAAA,CADA;AA/BA,CAAA","sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <AppHeader ref=\"header\" title=\"我的脉宝\"></AppHeader>\n    <div class=\"container\">\n      <div class=\"card-info\">\n        <div class=\"head-img\">\n          <img :src=\"code.head_picture\" alt=\"\">\n        </div>\n        <div class=\"info\">\n          <p class=\"name\">{{code.user_name}}</p>\n          <p class=\"job\">{{user.profession}}</p>\n          <p class=\"company\">{{user.company}}</p>\n        </div>\n      </div>\n      <div class=\"code-wrapper\">\n        <img :src=\"code.qr_code\" alt=\"\">\n      </div>\n      <p class=\"desc\">扫一扫二维码，添加名片</p>\n    </div>\n  </div>\n</template>\n\n<script type='text/ecmascript-6'>\nimport AppHeader from '../../../components/AppHeader'\nimport { mapState } from 'vuex'\nimport httpService from '@/service/httpService'\nexport default {\n  name: 'mine-qrCode',\n  components: { AppHeader },\n  data() {\n    return {\n      code: {\n        head_picture: '',\n        user_name: '',\n        province: '',\n        qr_code: '',\n        city: ''\n      }\n    }\n  },\n  async created() {\n    try {\n      let res = await httpService.get('/front/get-wechat-code', {\n        user_id: this.$route.params.id\n      })\n      if (res.status !== 0) {\n        throw new Error(res.message)\n      }\n      this.code = res.data\n    } catch (err) {\n      this.$createDialog({\n        type: 'alert',\n        title: err.message,\n        icon: 'icon-tips-alert'\n      }).show()\n    }\n  },\n  computed: {\n    ...mapState({\n      user: state => state.user.userInfo\n    })\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.wrapper {\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n  background: #f6f6f6;\n}\n\n.container {\n  position: relative;\n  width: 640px;\n  height: 863px;\n  background-color: #ffffff;\n  box-shadow: 0px 2px 20px 0px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  margin: 102px auto 0;\n  overflow: hidden;\n}\n\n.card-info {\n  display: flex;\n  width: 460px;\n  margin: 64px auto 0;\n  justify-content: space-around;\n\n  .info {\n    width: 285px;\n\n    height: 120px;\n    display: flex;\n    flex-wrap: wrap;\n\n    p {\n      width: 100%;\n    }\n\n    .name {\n      font-size: 30px;\n      color: #000;\n      font-weight: 600;\n    }\n\n    .job,\n    .company {\n      font-size: 22px;\n      color: #555555;\n    }\n  }\n}\n\n.head-img {\n  width: 90px;\n  height: 90px;\n  overflow: hidden;\n  border-radius: 50%;\n  box-sizing: border-box;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n}\n\n.area {\n  font-size: 24px;\n  color: #c0bebe;\n  line-height: 48px;\n  text-align: center;\n}\n\n.code-wrapper {\n  width: 450px;\n  height: 450px;\n  margin: 66px auto 0;\n  box-sizing: border-box;\n  border: 1px solid #dcf9ff;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n}\n\n.desc {\n  font-size: 26px;\n  color: #000;\n  margin-top: 74px;\n  text-align: center;\n}\n</style>"],"sourceRoot":"src/module/mine/qr-code"}]}
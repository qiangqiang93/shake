{"remainingRequest":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js!/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js??ref--13-0!/Users/qiang/work/hytx/hytx-rebuild/src/api/setting/index.js","dependencies":[{"path":"/Users/qiang/work/hytx/hytx-rebuild/src/api/setting/index.js","mtime":1545737603114},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/qiang/work/hytx/hytx-rebuild/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport httpService from '@/service/httpService';\nexport default {\n  changePwd: function () {\n    var _changePwd = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(postObj) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", httpService.post('/front/account/reset', postObj));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function changePwd(_x) {\n      return _changePwd.apply(this, arguments);\n    }\n\n    return changePwd;\n  }(),\n  // 设置、修改支付密码->验证码签名\n  sign: function () {\n    var _sign = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(phone, code) {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", httpService.post('/front/account/validatePaymentSms', {\n                code: code,\n                phone: phone\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function sign(_x2, _x3) {\n      return _sign.apply(this, arguments);\n    }\n\n    return sign;\n  }(),\n  // 设置支付密码\n  setPayPwd: function () {\n    var _setPayPwd = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(pwd, sign) {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", httpService.post('/front/account/setPaymentPwd', {\n                pwd: pwd,\n                sign: sign\n              }));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function setPayPwd(_x4, _x5) {\n      return _setPayPwd.apply(this, arguments);\n    }\n\n    return setPayPwd;\n  }(),\n  // 重置支付密码\n  resetPayPwd: function () {\n    var _resetPayPwd = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(old_pwd, new_pwd) {\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", httpService.post('/front/account/resetPaymentPwd', {\n                new_pwd: new_pwd,\n                old_pwd: old_pwd\n              }));\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function resetPayPwd(_x6, _x7) {\n      return _resetPayPwd.apply(this, arguments);\n    }\n\n    return resetPayPwd;\n  }(),\n  // 验证支付密码\n  validatePymPwd: function validatePymPwd(pwd) {\n    return httpService.post('/front/account/validatePymPwd', {\n      pwd: pwd\n    });\n  }\n};",{"version":3,"sources":["/Users/qiang/work/hytx/hytx-rebuild/src/api/setting/index.js"],"names":["httpService","changePwd","postObj","post","sign","phone","code","setPayPwd","pwd","resetPayPwd","old_pwd","new_pwd","validatePymPwd"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,uBAAxB;AAEA,eAAe;AACLC,EAAAA,SADK;AAAA;AAAA;AAAA,6CACKC,OADL;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEAF,WAAW,CAACG,IAAZ,CAAiB,sBAAjB,EAAyCD,OAAzC,CAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAIX;AACME,EAAAA,IALK;AAAA;AAAA;AAAA,8CAKAC,KALA,EAKOC,IALP;AAAA;AAAA;AAAA;AAAA;AAAA,gDAMAN,WAAW,CAACG,IAAZ,CAAiB,mCAAjB,EAAsD;AACzDG,gBAAAA,IAAI,EAAJA,IADyD;AAEzDD,gBAAAA,KAAK,EAALA;AAFyD,eAAtD,CANA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAWX;AACME,EAAAA,SAZK;AAAA;AAAA;AAAA,8CAYKC,GAZL,EAYUJ,IAZV;AAAA;AAAA;AAAA;AAAA;AAAA,gDAaAJ,WAAW,CAACG,IAAZ,CAAiB,8BAAjB,EAAiD;AACpDK,gBAAAA,GAAG,EAAHA,GADoD;AAEpDJ,gBAAAA,IAAI,EAAJA;AAFoD,eAAjD,CAbA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkBX;AACMK,EAAAA,WAnBK;AAAA;AAAA;AAAA,8CAmBOC,OAnBP,EAmBgBC,OAnBhB;AAAA;AAAA;AAAA;AAAA;AAAA,gDAoBAX,WAAW,CAACG,IAAZ,CAAiB,gCAAjB,EAAmD;AACtDQ,gBAAAA,OAAO,EAAPA,OADsD;AAEtDD,gBAAAA,OAAO,EAAPA;AAFsD,eAAnD,CApBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyBX;AACAE,EAAAA,cA1BW,0BA0BIJ,GA1BJ,EA0BS;AAChB,WAAOR,WAAW,CAACG,IAAZ,CAAiB,+BAAjB,EAAkD;AACrDK,MAAAA,GAAG,EAAHA;AADqD,KAAlD,CAAP;AAGH;AA9BU,CAAf","sourcesContent":["import httpService from '@/service/httpService'\n\nexport default {\n    async changePwd(postObj) {\n        return httpService.post('/front/account/reset', postObj)\n    },\n    // 设置、修改支付密码->验证码签名\n    async sign(phone, code) {\n        return httpService.post('/front/account/validatePaymentSms', {\n            code,\n            phone\n        })\n    },\n    // 设置支付密码\n    async setPayPwd(pwd, sign) {\n        return httpService.post('/front/account/setPaymentPwd', {\n            pwd,\n            sign\n        })\n    },\n    // 重置支付密码\n    async resetPayPwd(old_pwd, new_pwd) {\n        return httpService.post('/front/account/resetPaymentPwd', {\n            new_pwd,\n            old_pwd\n        })\n    },\n    // 验证支付密码\n    validatePymPwd(pwd) {\n        return httpService.post('/front/account/validatePymPwd', {\n            pwd\n        })\n    }\n\n}"]}]}
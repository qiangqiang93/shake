{"remainingRequest":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/thread-loader/dist/cjs.js!/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js!/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js??ref--13-0!/Users/qiang/work/hytx/hytx-rebuild/src/api/webPage/index.js","dependencies":[{"path":"/Users/qiang/work/hytx/hytx-rebuild/src/api/webPage/index.js","mtime":1547618571847},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"/Users/qiang/work/hytx/hytx-rebuild/node_modules/@babel/runtime/helpers/esm/typeof\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/qiang/work/hytx/hytx-rebuild/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport store from '../../store';\nimport httpService from '@/service/httpService';\nexport default {\n  // 根据网页id获取个人网页\n  getWebPageById: function () {\n    var _getWebPageById = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(id) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return httpService.get(\"/front/personal_page/customs/\".concat(id));\n\n            case 2:\n              res = _context.sent;\n\n              if (res.status === 0 && !store.state.user.userInfo) {\n                store.commit('system/updateGuider', res.data.user_id);\n              }\n\n              return _context.abrupt(\"return\", res);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function getWebPageById(_x) {\n      return _getWebPageById.apply(this, arguments);\n    }\n\n    return getWebPageById;\n  }(),\n\n  /* \n        @name   getAllWebPage\n        @desc   获取自己的个人微网列表(支持page和limit两种方式查询)\n        @params\n            input{\n                page    页码    默认值\n                或\n                limit   条数\n                offset  起始位置\n            }\n    */\n  getAllWebPage: function () {\n    var _getAllWebPage = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(input) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (_typeof(input) !== 'object') input = {\n                page: input\n              };\n              _context2.next = 3;\n              return httpService.get('/front/personal_page/all', input);\n\n            case 3:\n              res = _context2.sent;\n              return _context2.abrupt(\"return\", res);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function getAllWebPage(_x2) {\n      return _getAllWebPage.apply(this, arguments);\n    }\n\n    return getAllWebPage;\n  }(),\n\n  /* \n        @name   getAllWebPageByUserId\n        @desc   根据用户id获取该用户的个人微网列表\n        @params\n            input{\n                page    页码\n                userId  用户id\n            }\n    */\n  getAllWebPageByUserId: function () {\n    var _getAllWebPageByUserId = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(userId, page) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return httpService.get('/front/personal_page/byuserid', {\n                page: page,\n                user_id: userId\n              });\n\n            case 2:\n              res = _context3.sent;\n              return _context3.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function getAllWebPageByUserId(_x3, _x4) {\n      return _getAllWebPageByUserId.apply(this, arguments);\n    }\n\n    return getAllWebPageByUserId;\n  }()\n};",{"version":3,"sources":["/Users/qiang/work/hytx/hytx-rebuild/src/api/webPage/index.js"],"names":["store","httpService","getWebPageById","id","get","res","status","state","user","userInfo","commit","data","user_id","getAllWebPage","input","page","getAllWebPageByUserId","userId"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,eAAe;AACb;AACMC,EAAAA,cAFO;AAAA;AAAA;AAAA,6CAEQC,EAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGKF,WAAW,CAACG,GAAZ,wCAAgDD,EAAhD,EAHL;;AAAA;AAGPE,cAAAA,GAHO;;AAIX,kBAAIA,GAAG,CAACC,MAAJ,KAAe,CAAf,IAAoB,CAACN,KAAK,CAACO,KAAN,CAAYC,IAAZ,CAAiBC,QAA1C,EAAoD;AAClDT,gBAAAA,KAAK,CAACU,MAAN,CAAa,qBAAb,EAAoCL,GAAG,CAACM,IAAJ,CAASC,OAA7C;AACD;;AANU,+CAOJP,GAPI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AASb;;;;;;;;;;;AAWMQ,EAAAA,aApBO;AAAA;AAAA;AAAA,8CAoBOC,KApBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBX,kBAAI,QAAOA,KAAP,MAAiB,QAArB,EAA+BA,KAAK,GAAG;AACrCC,gBAAAA,IAAI,EAAED;AAD+B,eAAR;AArBpB;AAAA,qBAwBKb,WAAW,CAACG,GAAZ,CAAgB,0BAAhB,EAA4CU,KAA5C,CAxBL;;AAAA;AAwBPT,cAAAA,GAxBO;AAAA,gDAyBJA,GAzBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AA2Bb;;;;;;;;;AASMW,EAAAA,qBApCO;AAAA;AAAA;AAAA,8CAoCeC,MApCf,EAoCuBF,IApCvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAqCKd,WAAW,CAACG,GAAZ,CAAgB,+BAAhB,EAAiD;AAC/DW,gBAAAA,IAAI,EAAJA,IAD+D;AAE/DH,gBAAAA,OAAO,EAAEK;AAFsD,eAAjD,CArCL;;AAAA;AAqCPZ,cAAAA,GArCO;AAAA,gDAyCJA,GAzCI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import store from '../../store'\nimport httpService from '@/service/httpService'\n\nexport default {\n  // 根据网页id获取个人网页\n  async getWebPageById(id) {\n    let res = await httpService.get(`/front/personal_page/customs/${id}`)\n    if (res.status === 0 && !store.state.user.userInfo) {\n      store.commit('system/updateGuider', res.data.user_id)\n    }\n    return res\n  },\n  /* \n        @name   getAllWebPage\n        @desc   获取自己的个人微网列表(支持page和limit两种方式查询)\n        @params\n            input{\n                page    页码    默认值\n                或\n                limit   条数\n                offset  起始位置\n            }\n    */\n  async getAllWebPage(input) {\n    if (typeof input !== 'object') input = {\n      page: input\n    }\n    let res = await httpService.get('/front/personal_page/all', input)\n    return res\n  },\n  /* \n        @name   getAllWebPageByUserId\n        @desc   根据用户id获取该用户的个人微网列表\n        @params\n            input{\n                page    页码\n                userId  用户id\n            }\n    */\n  async getAllWebPageByUserId(userId, page) {\n    let res = await httpService.get('/front/personal_page/byuserid', {\n      page,\n      user_id: userId\n    })\n    return res\n  }\n}"]}]}
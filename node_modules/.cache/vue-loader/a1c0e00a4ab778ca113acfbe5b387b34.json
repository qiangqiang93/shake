{"remainingRequest":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiang/work/hytx/hytx-rebuild/src/components/DatePickers/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiang/work/hytx/hytx-rebuild/src/components/DatePickers/index.vue","mtime":1546946999366},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      year_date: [], // 年\n      month_date: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], // 月\n      day_date: null, // 日\n      select: [], // 选择的值\n      itemHeight: 72, // 默认li的高度\n      timer: null,\n      isScroll: true,\n      endTime: '',\n      currentDate: new Date(), // 当前日期\n      show: false, // 隐藏显示选择框\n      defalutValue: '' // 默认显示的值\n    }\n  },\n  props: ['value', 'msg'],\n  methods: {\n    init() {\n      let year = this.currentDate.getFullYear()\n      let m = this.currentDate.getMonth() + 1\n      let d = this.currentDate.getDate()\n      if (this.value && this.value.length) {\n        year = Number(this.value[0])\n        m = Number(this.value[1])\n        d = Number(this.value[2])\n      } else {\n        this.select[0] = year\n        this.select[1] = m\n        this.select[2] = d\n      }\n\n      let lastYear = year + 50 // 最后日期为现在加50年\n      for (let i = 1900; i < lastYear; i++) {\n        // 年份初始化\n        this.year_date.push(i)\n      }\n      this.setDays(year, m)\n      this.$nextTick(() => {\n        this.$refs.year_date.scrollTop = (year - 1900) * this.itemHeight\n        this.$refs.month_date.scrollTop = (m - 1) * this.itemHeight\n        this.$refs.day_date.scrollTop = (d - 1) * this.itemHeight\n      })\n    },\n    onInput() {},\n    setDays(y, m) {\n      // 设置天数\n      let day = 31\n      switch (m) {\n        case 4:\n        case 6:\n        case 9:\n        case 11:\n          day = 30\n          break\n        case 2:\n          if ((y % 4 == 0 && y % 100 != 0) || y % 400 == 0) {\n            day = 29\n          } else {\n            day = 28\n          }\n        default:\n          break\n      }\n      this.day_date = day\n    },\n    cancel() {\n      this.show = false\n    },\n    // 设置年\n    setYear(index) {\n      this.select[0] = this.year_date[index]\n      if (this.select[1] === 2) {\n        let n = this.day_date\n        this.setDays(this.select[0], 2)\n        if (n > this.day_date && this.select[2] > this.day_date) {\n          this.$set(this.select, 2, 1)\n          this.$refs.day_date.scrollTo(0, 0)\n        }\n      }\n      setTimeout(() => {\n        this.isScroll = true\n      }, 100)\n    },\n    // 设置月\n    setMonth(index) {\n      this.$set(this.select, 1, this.month_date[index])\n      let n = this.day_date\n      this.setDays(this.select[0], index + 1)\n      if (n > this.day_date && this.select[2] > this.day_date) {\n        this.$set(this.select, 2, 1)\n        this.$refs.day_date.scrollTo(0, 0)\n      }\n      setTimeout(() => {\n        this.isScroll = true\n      }, 100)\n    },\n    // 设置天\n    setDay(index) {\n      this.$set(this.select, 2, index + 1)\n      setTimeout(() => {\n        this.isScroll = true\n      }, 100)\n    },\n    selectDate(e, index, type) {\n      this.isScroll = false\n      this.smoothRolling(\n        e.srcElement.parentElement.parentElement,\n        5,\n        index,\n        type\n      )\n    },\n    // 平滑滚动\n    /**\n     *  parentSrcElement DOM元素 需要滑动操作的元素\n     *  limts <int> + 步长\n     *  index <number> 选择的地几个元素\n     *  type  <string> 选择的是省还是地区\n     */\n    smoothRolling(parentSrcElement, limts, index, type) {\n      let self = this\n      let rollLimt = parentSrcElement.scrollTop - index * self.itemHeight // 回滚的距离\n      let limt = rollLimt > 0 ? -limts : limts // 步长为5\n      var time = setInterval(() => {\n        if (Math.abs(rollLimt) > Math.abs(limt)) {\n          parentSrcElement.scrollBy(0, limt)\n          rollLimt = rollLimt + limt\n        } else {\n          parentSrcElement.scrollTo(0, index * self.itemHeight) // 让元素居中\n          if (type === 'year_date') {\n            self.setYear(index)\n          } else if (type === 'month_date') {\n            self.setMonth(index)\n          } else if (type === 'day_date') {\n            self.setDay(index)\n          }\n          clearInterval(time)\n        }\n      }, 5)\n    },\n    // 滚动事件\n    scrollFn(e, type) {\n      let self = this\n      clearTimeout(this.timer)\n      if (this.isScroll) {\n        // 判断是否是因为调整距离而发生的滚动，false正在调整距离，true 才执行\n        let num = Math.round(e.srcElement.scrollTop / this.itemHeight) // 滚动到第几个元素\n        this.timer = setTimeout(() => {\n          // 用setTimeout说明滚动停止了才执行下面的操作\n          self.isScroll = false\n          self.smoothRolling(e.srcElement, 2, num, type)\n        }, 100)\n      }\n    },\n    confirm() {\n      this.$emit('input', this.select)\n      this.defalutValue = this.select.join('-')\n      this.show = false\n    }\n  },\n  watch: {\n    show(newval, oldval) {\n      if (newval) {\n        this.init()\n      }\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"index.vue","sourceRoot":"src/components/DatePickers","sourcesContent":["<!-- \n    @name   DatePickers\n    @desc   日期组件\n    @props\n            value    用于实现v-model 组件外只需要绑定v-model <Array> [1996,2,1] \n-->\n<template>\n  <div class=\"picker\">\n    <div @click=\"show=true\" class=\"info\">{{defalutValue||msg}}</div>\n    <div class=\"picker-mask\" @click=\"cancel\" v-if=\"show\"></div>\n    <div class=\"picker-container\" v-if=\"show\">\n      <div class=\" picker-choose\">\n        <span class=\"cancel\" @click=\"cancel\">取消</span>\n        <span class=\"confirm\" @click=\"confirm\">确定</span>\n      </div>\n      <div class=\"picker-wheel-wrapper\">\n        <!-- 上层遮盖 -->\n        <i class=\"border-top\"></i>\n        <!-- 下层遮盖 -->\n        <i class=\"border-bottom\"></i>\n        <!-- 内容区域 -->\n        <div @scroll=\"scrollFn($event,'year_date')\" class=\"scroll-div\" ref=\"year_date\">\n          <ul>\n            <li v-for=\"(item,index) in year_date\" :key=\"index\" @click.stop=\"selectDate($event,index,'year_date')\">{{item}}</li>\n          </ul>\n        </div>\n        <div @scroll=\"scrollFn($event,'month_date')\" class=\"scroll-div\" ref=\"month_date\">\n          <ul>\n            <li v-for=\"(item,index) in month_date\" :key=\"index\" @click.stop=\"selectDate($event,index,'month_date')\">{{item}}</li>\n          </ul>\n        </div>\n        <div @scroll=\"scrollFn($event,'day_date')\" class=\"scroll-div\" ref=\"day_date\">\n          <ul>\n            <li v-for=\"(item,index) in day_date\" :key=\"index\" @click.stop=\"selectDate($event,index,'day_date')\">{{item}}</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        year_date: [], // 年\n        month_date: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], // 月\n        day_date: null, // 日\n        select: [], // 选择的值\n        itemHeight: 72, // 默认li的高度\n        timer: null,\n        isScroll: true,\n        endTime: '',\n        currentDate: new Date(), // 当前日期\n        show: false, // 隐藏显示选择框\n        defalutValue: '' // 默认显示的值\n      }\n    },\n    props: ['value', 'msg'],\n    methods: {\n      init() {\n        let year = this.currentDate.getFullYear()\n        let m = this.currentDate.getMonth() + 1\n        let d = this.currentDate.getDate()\n        if (this.value && this.value.length) {\n          year = Number(this.value[0])\n          m = Number(this.value[1])\n          d = Number(this.value[2])\n        } else {\n          this.select[0] = year\n          this.select[1] = m\n          this.select[2] = d\n        }\n\n        let lastYear = year + 50 // 最后日期为现在加50年\n        for (let i = 1900; i < lastYear; i++) {\n          // 年份初始化\n          this.year_date.push(i)\n        }\n        this.setDays(year, m)\n        this.$nextTick(() => {\n          this.$refs.year_date.scrollTop = (year - 1900) * this.itemHeight\n          this.$refs.month_date.scrollTop = (m - 1) * this.itemHeight\n          this.$refs.day_date.scrollTop = (d - 1) * this.itemHeight\n        })\n      },\n      onInput() {},\n      setDays(y, m) {\n        // 设置天数\n        let day = 31\n        switch (m) {\n          case 4:\n          case 6:\n          case 9:\n          case 11:\n            day = 30\n            break\n          case 2:\n            if ((y % 4 == 0 && y % 100 != 0) || y % 400 == 0) {\n              day = 29\n            } else {\n              day = 28\n            }\n          default:\n            break\n        }\n        this.day_date = day\n      },\n      cancel() {\n        this.show = false\n      },\n      // 设置年\n      setYear(index) {\n        this.select[0] = this.year_date[index]\n        if (this.select[1] === 2) {\n          let n = this.day_date\n          this.setDays(this.select[0], 2)\n          if (n > this.day_date && this.select[2] > this.day_date) {\n            this.$set(this.select, 2, 1)\n            this.$refs.day_date.scrollTo(0, 0)\n          }\n        }\n        setTimeout(() => {\n          this.isScroll = true\n        }, 100)\n      },\n      // 设置月\n      setMonth(index) {\n        this.$set(this.select, 1, this.month_date[index])\n        let n = this.day_date\n        this.setDays(this.select[0], index + 1)\n        if (n > this.day_date && this.select[2] > this.day_date) {\n          this.$set(this.select, 2, 1)\n          this.$refs.day_date.scrollTo(0, 0)\n        }\n        setTimeout(() => {\n          this.isScroll = true\n        }, 100)\n      },\n      // 设置天\n      setDay(index) {\n        this.$set(this.select, 2, index + 1)\n        setTimeout(() => {\n          this.isScroll = true\n        }, 100)\n      },\n      selectDate(e, index, type) {\n        this.isScroll = false\n        this.smoothRolling(\n          e.srcElement.parentElement.parentElement,\n          5,\n          index,\n          type\n        )\n      },\n      // 平滑滚动\n      /**\n       *  parentSrcElement DOM元素 需要滑动操作的元素\n       *  limts <int> + 步长\n       *  index <number> 选择的地几个元素\n       *  type  <string> 选择的是省还是地区\n       */\n      smoothRolling(parentSrcElement, limts, index, type) {\n        let self = this\n        let rollLimt = parentSrcElement.scrollTop - index * self.itemHeight // 回滚的距离\n        let limt = rollLimt > 0 ? -limts : limts // 步长为5\n        var time = setInterval(() => {\n          if (Math.abs(rollLimt) > Math.abs(limt)) {\n            parentSrcElement.scrollBy(0, limt)\n            rollLimt = rollLimt + limt\n          } else {\n            parentSrcElement.scrollTo(0, index * self.itemHeight) // 让元素居中\n            if (type === 'year_date') {\n              self.setYear(index)\n            } else if (type === 'month_date') {\n              self.setMonth(index)\n            } else if (type === 'day_date') {\n              self.setDay(index)\n            }\n            clearInterval(time)\n          }\n        }, 5)\n      },\n      // 滚动事件\n      scrollFn(e, type) {\n        let self = this\n        clearTimeout(this.timer)\n        if (this.isScroll) {\n          // 判断是否是因为调整距离而发生的滚动，false正在调整距离，true 才执行\n          let num = Math.round(e.srcElement.scrollTop / this.itemHeight) // 滚动到第几个元素\n          this.timer = setTimeout(() => {\n            // 用setTimeout说明滚动停止了才执行下面的操作\n            self.isScroll = false\n            self.smoothRolling(e.srcElement, 2, num, type)\n          }, 100)\n        }\n      },\n      confirm() {\n        this.$emit('input', this.select)\n        this.defalutValue = this.select.join('-')\n        this.show = false\n      }\n    },\n    watch: {\n      show(newval, oldval) {\n        if (newval) {\n          this.init()\n        }\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .picker {\n    width: inherit;\n    height: inherit;\n    display: flex;\n    align-items: center;\n\n    .info {\n      width: 100%;\n    }\n  }\n\n  .picker-mask {\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.3);\n    animation: mymove 0.3s;\n    z-index: 99;\n  }\n\n  @keyframes mymove {\n    from {\n      background: rgba(0, 0, 0, 0);\n    }\n\n    to {\n      background: rgba(0, 0, 0, 0.3);\n    }\n  }\n\n  @-webkit-keyframes mymove\n\n  /*Safari and Chrome*/\n    {\n    from {\n      background: rgba(0, 0, 0, 0);\n    }\n\n    to {\n      background: rgba(0, 0, 0, 0.3);\n    }\n  }\n\n  .picker-container {\n    position: fixed;\n    left: 0;\n    right: 0;\n    background: #fff;\n    bottom: 0;\n    height: 540px;\n    border-top: 2px solid #f2f2f2;\n    animation: moves 0.3s;\n    z-index: 100;\n\n    @keyframes moves {\n      from {\n        bottom: -540px;\n      }\n\n      to {\n        bottom: 0;\n      }\n    }\n\n    @-webkit-keyframes moves\n\n    /*Safari and Chrome*/\n      {\n      from {\n        bottom: -540px;\n      }\n\n      to {\n        bottom: 0;\n      }\n    }\n\n    .picker-choose {\n      height: 120px;\n      box-sizing: border-box;\n      padding: 0 40px;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      font-size: 26px;\n      border-bottom: 2px solid #f2f2f2;\n\n      .cancel {\n        color: #999;\n      }\n\n      .confirm {\n        color: #4388e1;\n      }\n    }\n  }\n\n  .scroll-div {\n    -webkit-overflow-scrolling: touch;\n  }\n\n  .picker-wheel-wrapper {\n    display: flex;\n    padding: 0 20px;\n    box-sizing: border-box;\n    align-items: center;\n    height: 420px;\n    overflow: hidden;\n    position: relative;\n\n    div {\n      flex: 1;\n      font-size: 26px;\n      text-align: center;\n      height: 340px;\n      overflow: auto;\n\n      &::-webkit-scrollbar {\n        display: none;\n      }\n\n      ul {\n        transform: translateY(134px);\n\n        >li {\n          height: 72px;\n          line-height: 72px;\n          display: -webkit-box;\n          -webkit-box-orient: vertical;\n          -webkit-line-clamp: 1;\n          overflow: hidden;\n          color: #000;\n\n          &:nth-last-of-type(1) {\n            padding-bottom: 134px;\n          }\n        }\n      }\n    }\n\n    i {\n      position: absolute;\n      z-index: 10;\n      left: 0;\n      width: 100%;\n      height: 172px;\n      pointer-events: none;\n      -webkit-transform: translateZ(0);\n      transform: translateZ(0);\n    }\n\n    .border-top {\n      top: 0;\n      background: linear-gradient(0deg,\n        hsla(0, 0%, 100%, 0.4),\n        hsla(0, 0%, 100%, 0.8));\n      border-bottom: 2px solid #ebebeb;\n    }\n\n    .border-bottom {\n      bottom: 0;\n      background: linear-gradient(180deg,\n        hsla(0, 0%, 100%, 0.4),\n        hsla(0, 0%, 100%, 0.8));\n      border-top: 2px solid #ebebeb;\n    }\n  }\n</style>"]}]}
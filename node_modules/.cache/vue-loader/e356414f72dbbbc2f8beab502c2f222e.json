{"remainingRequest":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiang/work/hytx/hytx-rebuild/src/components/AppUploadImg/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiang/work/hytx/hytx-rebuild/src/components/AppUploadImg/index.vue","mtime":1546945930106},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Exif from 'exif-js'\nimport config from '../../config'\nimport { mapActions } from 'vuex'\nimport eventBus from '../../utils/eventBus'\nimport dialogService from '../../service/dialogService'\n\nexport default {\n  props: ['type', 'ratio'],\n  data() {\n    return {\n      eventName: null, // 当前组件事件名称\n      orientation: null // 旋转方向\n    }\n  },\n  mounted() {\n    let _self = this\n    _self.eventName = `AppUploadEvent_${parseInt(Math.random() * 1000)}`\n    eventBus.$on(_self.eventName, function(path) {\n      _self.$emit('success', path)\n    })\n  },\n  methods: {\n    ...mapActions(['system/updateCropper']),\n    async cropImg(event) {\n      let file = event.target.files[0]\n      if (Math.round(file.size / 1024 / 1024) > config.MaxSize) {\n        dialogService.alert(`请上传${config.MaxSize}M以下的图片`)\n        return false\n      }\n      file = await this.toBase64(file)\n      file = await this.compress(file)\n      this['system/updateCropper']({\n        file: file,\n        ratio: this.ratio,\n        eventName: this.eventName\n      })\n      this.$router.push({ path: '/cropper' })\n    },\n    // 将图片转化为base64\n    async toBase64(file) {\n      return new Promise((resolve, reject) => {\n        let fileReader = new FileReader()\n        fileReader.readAsDataURL(file)\n        fileReader.onload = function(e) {\n          resolve(e.target.result)\n        }\n      })\n    },\n    // 压缩转换的base64\n    async compress(base64) {\n      let _self = this\n      return new Promise((resolve, reject) => {\n        let img = new Image()\n        img.src = base64\n        img.onload = function() {\n          Exif.getData(img, function() {\n            let context\n            let width = img.width\n            let height = img.height\n            let canvas = document.createElement('canvas')\n            let orientation = Exif.getTag(img, 'Orientation')\n            // 旋转参数说明 https://baiyunliu.iteye.com/blog/2067000\n            // 暂时仅解决 orientation 为6时的问题\n            if (orientation === 6) {\n              height = height > 750 ? 750 : height\n              width = img.height > 750 ? (750 / img.height) * width : width\n              canvas.width = height\n              canvas.height = width\n              context = canvas.getContext('2d')\n              context.translate(height / 2, width / 2)\n              context.rotate((90 * Math.PI) / 180)\n              context.drawImage(img, -width / 2, -height / 2, width, height)\n            } else {\n              width = width > 750 ? 750 : width\n              height = img.width > 750 ? (750 / img.width) * height : height\n              canvas.width = width\n              canvas.height = height\n              context = canvas.getContext('2d')\n              context.drawImage(img, 0, 0, width, height)\n            }\n            base64 = canvas.toDataURL('image/jpeg', 0.8)\n            resolve(base64)\n          })\n        }\n      })\n    }\n  },\n  destroyed() {\n    eventBus.$off(this.eventName)\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/AppUploadImg","sourcesContent":["<!--\n    @name       AppUploadImg\n    @desc       文件上传组件\n    @props  \n        ratio   number              图片比例\n        success function            上传成功之后的回调函数\n-->\n\n<template>\n  <input type=\"file\" accept=\"image/*\" @change=\"cropImg($event)\">\n</template>\n\n<script>\nimport Exif from 'exif-js'\nimport config from '../../config'\nimport { mapActions } from 'vuex'\nimport eventBus from '../../utils/eventBus'\nimport dialogService from '../../service/dialogService'\n\nexport default {\n  props: ['type', 'ratio'],\n  data() {\n    return {\n      eventName: null, // 当前组件事件名称\n      orientation: null // 旋转方向\n    }\n  },\n  mounted() {\n    let _self = this\n    _self.eventName = `AppUploadEvent_${parseInt(Math.random() * 1000)}`\n    eventBus.$on(_self.eventName, function(path) {\n      _self.$emit('success', path)\n    })\n  },\n  methods: {\n    ...mapActions(['system/updateCropper']),\n    async cropImg(event) {\n      let file = event.target.files[0]\n      if (Math.round(file.size / 1024 / 1024) > config.MaxSize) {\n        dialogService.alert(`请上传${config.MaxSize}M以下的图片`)\n        return false\n      }\n      file = await this.toBase64(file)\n      file = await this.compress(file)\n      this['system/updateCropper']({\n        file: file,\n        ratio: this.ratio,\n        eventName: this.eventName\n      })\n      this.$router.push({ path: '/cropper' })\n    },\n    // 将图片转化为base64\n    async toBase64(file) {\n      return new Promise((resolve, reject) => {\n        let fileReader = new FileReader()\n        fileReader.readAsDataURL(file)\n        fileReader.onload = function(e) {\n          resolve(e.target.result)\n        }\n      })\n    },\n    // 压缩转换的base64\n    async compress(base64) {\n      let _self = this\n      return new Promise((resolve, reject) => {\n        let img = new Image()\n        img.src = base64\n        img.onload = function() {\n          Exif.getData(img, function() {\n            let context\n            let width = img.width\n            let height = img.height\n            let canvas = document.createElement('canvas')\n            let orientation = Exif.getTag(img, 'Orientation')\n            // 旋转参数说明 https://baiyunliu.iteye.com/blog/2067000\n            // 暂时仅解决 orientation 为6时的问题\n            if (orientation === 6) {\n              height = height > 750 ? 750 : height\n              width = img.height > 750 ? (750 / img.height) * width : width\n              canvas.width = height\n              canvas.height = width\n              context = canvas.getContext('2d')\n              context.translate(height / 2, width / 2)\n              context.rotate((90 * Math.PI) / 180)\n              context.drawImage(img, -width / 2, -height / 2, width, height)\n            } else {\n              width = width > 750 ? 750 : width\n              height = img.width > 750 ? (750 / img.width) * height : height\n              canvas.width = width\n              canvas.height = height\n              context = canvas.getContext('2d')\n              context.drawImage(img, 0, 0, width, height)\n            }\n            base64 = canvas.toDataURL('image/jpeg', 0.8)\n            resolve(base64)\n          })\n        }\n      })\n    }\n  },\n  destroyed() {\n    eventBus.$off(this.eventName)\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n"]}]}
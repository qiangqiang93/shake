{"remainingRequest":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiang/work/hytx/hytx-rebuild/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiang/work/hytx/hytx-rebuild/src/App.vue","mtime":1548480929554},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport message from './api/message/index'\n\nimport { mapState, mapActions } from 'vuex'\n\nimport Wrapper from './components/Wrapper'\nimport AppShare from './components/AppShare'\nimport AppDialog from './components/AppDialog'\nimport ShareGuide from './components/ShareGuid'\nimport AppLoading from './components/AppLoading'\nimport AppActivity from './components/AppActivity'\nimport AppNavgation from './components/AppNavgation'\n\nimport httpService from './service/httpService'\nimport dialogService from './service/dialogService'\n\nexport default {\n  name: 'app',\n  data() {\n    return {\n      nav: true, // 是否显示导航\n      guidType: null, // 注册引导类型\n      activeNav: 'index' // 当前激活的导航\n    }\n  },\n  async mounted() {\n    this.nav = this.$route.meta.nav\n  },\n  updated() {\n    if (this.nav) this.resetNav()\n  },\n  methods: {\n    // 重制导航位置\n    resetNav() {\n      let scrolled =\n        document.documentElement.scrollTop || document.body.scrollTop\n      let windowHeight = document.documentElement.clientHeight\n      let scrollHeight = document.documentElement.scrollHeight\n      let scrollBottom = scrolled + windowHeight >= scrollHeight\n      this.$refs.footer.$el.style.position = scrollBottom ? 'absolute' : 'fixed'\n    }\n  },\n  computed: {\n    ...mapState({\n      router: state => state.system.router,\n      httpLoading: state => state.system.httpLoading\n    })\n  },\n  components: {\n    Wrapper,\n    AppShare,\n    AppDialog,\n    ShareGuide,\n    AppLoading,\n    AppActivity,\n    AppNavgation\n  },\n  watch: {\n    $route(to, from) {\n      this.nav = to.meta.nav\n      this.activeNav = to.path.split('/')[1]\n    }\n  }\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <Wrapper id=\"app\">\n    <!-- <transition :name=\"transitionName\"> -->\n    <keep-alive :include=\"router\" max=\"6\">\n      <router-view></router-view>\n    </keep-alive>\n    <!-- </transition> -->\n    <AppShare></AppShare>\n    <AppDialog></AppDialog>\n    <ShareGuide></ShareGuide>\n    <AppActivity :type=\"'pull'\"></AppActivity>\n    <AppActivity :type=\"'push'\"></AppActivity>\n    <AppLoading v-show=\"httpLoading\" :type=\"'data'\"></AppLoading>\n    <AppNavgation ref=\"footer\" v-show=\"nav\" :active=\"activeNav\"></AppNavgation>\n    <audio id=\"circleAudio\" style=\"display:none;\" controls=\"controls\">\n      <source src=\"../public/tips.mp3\" type=\"audio/mpeg\" />\n    </audio>\n  </Wrapper>\n</template>\n\n<script>\nimport message from './api/message/index'\n\nimport { mapState, mapActions } from 'vuex'\n\nimport Wrapper from './components/Wrapper'\nimport AppShare from './components/AppShare'\nimport AppDialog from './components/AppDialog'\nimport ShareGuide from './components/ShareGuid'\nimport AppLoading from './components/AppLoading'\nimport AppActivity from './components/AppActivity'\nimport AppNavgation from './components/AppNavgation'\n\nimport httpService from './service/httpService'\nimport dialogService from './service/dialogService'\n\nexport default {\n  name: 'app',\n  data() {\n    return {\n      nav: true, // 是否显示导航\n      guidType: null, // 注册引导类型\n      activeNav: 'index' // 当前激活的导航\n    }\n  },\n  async mounted() {\n    this.nav = this.$route.meta.nav\n  },\n  updated() {\n    if (this.nav) this.resetNav()\n  },\n  methods: {\n    // 重制导航位置\n    resetNav() {\n      let scrolled =\n        document.documentElement.scrollTop || document.body.scrollTop\n      let windowHeight = document.documentElement.clientHeight\n      let scrollHeight = document.documentElement.scrollHeight\n      let scrollBottom = scrolled + windowHeight >= scrollHeight\n      this.$refs.footer.$el.style.position = scrollBottom ? 'absolute' : 'fixed'\n    }\n  },\n  computed: {\n    ...mapState({\n      router: state => state.system.router,\n      httpLoading: state => state.system.httpLoading\n    })\n  },\n  components: {\n    Wrapper,\n    AppShare,\n    AppDialog,\n    ShareGuide,\n    AppLoading,\n    AppActivity,\n    AppNavgation\n  },\n  watch: {\n    $route(to, from) {\n      this.nav = to.meta.nav\n      this.activeNav = to.path.split('/')[1]\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n</style>"]}]}
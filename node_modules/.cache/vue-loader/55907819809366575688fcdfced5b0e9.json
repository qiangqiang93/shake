{"remainingRequest":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiang/work/hytx/hytx-rebuild/src/components/MessageList/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiang/work/hytx/hytx-rebuild/src/components/MessageList/index.vue","mtime":1548646762803},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport messageApi from '../../api/message/index'\nimport dialogService from '../../service/dialogService'\nexport default {\n  props: ['userLists', 'maibao', 'pushmsg'],\n  data() {\n    return {\n      transforms: [], //控制滑动删除\n      pushRed: true, //小红点\n      tindex: null, // 滑动索引\n      startX: 0, //触摸位置\n      endX: 0, //结束位置\n      moveX: 0, //滑动时的位置\n      disX: 0 //移动距离\n    }\n  },\n  mounted() {\n    for (let i = 0; i < this.userLists.length; i++) {\n      this.transforms.push('0')\n    }\n  },\n  computed: {},\n  methods: {\n    // 删除用户消息\n    async deluser(id) {\n      try {\n        let res = await messageApi.delUsermsg(id)\n        if (res.status !== 0) {\n          dialogService.toast(res.message)\n        } else {\n          dialogService.toast('删除成功')\n        }\n      } catch (err) {\n        dialogService.toast(err)\n      }\n    },\n    // 用户消息列表\n    touser(item) {\n      window.msgPortrait = item.head_picture || item.head_portrait\n      this.$router.push(`/message/user?id=${item.from_user_id}`)\n    },\n    // 左划删除\n    touchStart(index) {\n      this.tindex = index\n      //tounches类数组，等于1时表示此时有只有一只手指在触摸屏幕\n      if (event.touches.length == 1) {\n        // 记录开始位置\n        this.startX = event.touches[0].clientX\n      }\n    },\n    touchMove(ev) {\n      ev = ev || event\n      //获取删除按钮的宽度，此宽度为滑块左滑的最大距离\n      let wd = 155\n      if (ev.touches.length == 1) {\n        // 滑动时距离浏览器左侧实时距离\n        this.moveX = ev.touches[0].clientX\n\n        //起始位置减去 实时的滑动的距离，得到手指实时偏移距离\n        this.disX = this.startX - this.moveX\n        // 如果是向右滑动或者不滑动，不改变滑块的位置\n        if (this.disX < 0 || this.disX == 0) {\n          this.$set(this.transforms, this.tindex, 0)\n          // 大于0，表示左滑了，此时滑块开始滑动\n        } else if (this.disX > 0) {\n          //具体滑动距离我取的是 手指偏移距离*5。\n          this.$set(this.transforms, this.tindex, this.disX)\n          // 最大也只能等于删除按钮宽度\n          if (this.disX >= wd) {\n            this.$set(this.transforms, this.tindex, 155)\n          }\n        }\n      }\n    },\n    touchEnd(ev) {\n      ev = ev || event\n      let wd = 155\n      if (ev.changedTouches.length == 1) {\n        let endX = ev.changedTouches[0].clientX\n        this.disX = this.startX - endX\n        //如果距离小于删除按钮一半,强行回到起点\n        if (this.disX < wd / 2) {\n          this.$set(this.transforms, this.tindex, 0)\n        } else {\n          //大于一半 滑动到最大值\n          this.$set(this.transforms, this.tindex, 155)\n        }\n      }\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/MessageList","sourcesContent":["<!-- \n    @name       MessageItem\n    @desc       消息列表项\n    @props      \n        userLists<Array>    接收到的用户列表\n        maibao<Object>      接收到的小卖报\n        pushmsg<Object>     接收到的推送消息\n\n-->\n<template>\n  <!-- 消息列表项模块 -->\n  <div>\n    <!-- 没有消息的缺省图 -->\n    <div class=\"message-nolist\" v-show=\"userLists.length==0&&!maibao&&!pushmsg\">\n      <img src=\"./lack.png\" class=\"message-nolist-pic\" />\n    </div>\n    <router-link class=\"message-listitem\" tag=\"div\" to=\"/message/xiaomaibao\" v-if=\"maibao\">\n      <img src=\"./xiaomaibao.png\" />\n      <div class=\"message-listitem-msgbox\">\n        <p class=\"message-listitem-type\">小脉宝\n          <span class=\"time\">{{maibao.created_at|timeToNow}}</span>\n        </p>\n        <p class=\"message-listitem-content\">{{maibao.title}}\n          <!-- <span class=\"message-listitem-reddot\"></span> -->\n        </p>\n      </div>\n    </router-link>\n    <router-link class=\"message-listitem\" tag=\"div\" @click.native=\"pushRed = false\" v-if=\"pushmsg\" to=\"/message/detail\">\n      <i class=\"iconfont icon-tongzhi\"></i>\n      <div class=\"message-listitem-msgbox\">\n        <p class=\"message-listitem-type\">推送消息\n          <span class=\"time\">{{pushmsg.created_at|timeToNow}}</span>\n        </p>\n        <p class=\"message-listitem-content\">{{pushmsg.title}}\n          <!-- <span v-show=\"pushRed\" class=\"message-listitem-reddot\"></span> -->\n        </p>\n      </div>\n    </router-link>\n    <div class=\"message-listitem\" @click=\"touser(item)\" v-for=\"(item,index) in userLists\" :key=\"index\" :style=\"{transform:'translateX(-'+transforms[index]+'px)'}\" @touchstart='touchStart(index)' @touchmove='touchMove' @touchend='touchEnd'>\n      <img class=\"message-head_portrait\" :src=\"item.head_picture||item.head_portrait\" />\n      <div class=\"message-listitem-msgbox\">\n        <p class=\"message-listitem-type\">{{item.user_name||item.wechat_name}}\n          <span class=\"time\">{{item.created_at|timeToNow}}</span>\n        </p>\n        <p class=\"message-listitem-content\">{{item.title}}\n          <!-- <span class=\"message-listitem-reddot\"></span> -->\n        </p>\n      </div>\n      <p class=\"del\" @click.stop=\"deluser(item.from_user_id)\">删除</p>\n    </div>\n  </div>\n</template>\n<script>\nimport messageApi from '../../api/message/index'\nimport dialogService from '../../service/dialogService'\nexport default {\n  props: ['userLists', 'maibao', 'pushmsg'],\n  data() {\n    return {\n      transforms: [], //控制滑动删除\n      pushRed: true, //小红点\n      tindex: null, // 滑动索引\n      startX: 0, //触摸位置\n      endX: 0, //结束位置\n      moveX: 0, //滑动时的位置\n      disX: 0 //移动距离\n    }\n  },\n  mounted() {\n    for (let i = 0; i < this.userLists.length; i++) {\n      this.transforms.push('0')\n    }\n  },\n  computed: {},\n  methods: {\n    // 删除用户消息\n    async deluser(id) {\n      try {\n        let res = await messageApi.delUsermsg(id)\n        if (res.status !== 0) {\n          dialogService.toast(res.message)\n        } else {\n          dialogService.toast('删除成功')\n        }\n      } catch (err) {\n        dialogService.toast(err)\n      }\n    },\n    // 用户消息列表\n    touser(item) {\n      window.msgPortrait = item.head_picture || item.head_portrait\n      this.$router.push(`/message/user?id=${item.from_user_id}`)\n    },\n    // 左划删除\n    touchStart(index) {\n      this.tindex = index\n      //tounches类数组，等于1时表示此时有只有一只手指在触摸屏幕\n      if (event.touches.length == 1) {\n        // 记录开始位置\n        this.startX = event.touches[0].clientX\n      }\n    },\n    touchMove(ev) {\n      ev = ev || event\n      //获取删除按钮的宽度，此宽度为滑块左滑的最大距离\n      let wd = 155\n      if (ev.touches.length == 1) {\n        // 滑动时距离浏览器左侧实时距离\n        this.moveX = ev.touches[0].clientX\n\n        //起始位置减去 实时的滑动的距离，得到手指实时偏移距离\n        this.disX = this.startX - this.moveX\n        // 如果是向右滑动或者不滑动，不改变滑块的位置\n        if (this.disX < 0 || this.disX == 0) {\n          this.$set(this.transforms, this.tindex, 0)\n          // 大于0，表示左滑了，此时滑块开始滑动\n        } else if (this.disX > 0) {\n          //具体滑动距离我取的是 手指偏移距离*5。\n          this.$set(this.transforms, this.tindex, this.disX)\n          // 最大也只能等于删除按钮宽度\n          if (this.disX >= wd) {\n            this.$set(this.transforms, this.tindex, 155)\n          }\n        }\n      }\n    },\n    touchEnd(ev) {\n      ev = ev || event\n      let wd = 155\n      if (ev.changedTouches.length == 1) {\n        let endX = ev.changedTouches[0].clientX\n        this.disX = this.startX - endX\n        //如果距离小于删除按钮一半,强行回到起点\n        if (this.disX < wd / 2) {\n          this.$set(this.transforms, this.tindex, 0)\n        } else {\n          //大于一半 滑动到最大值\n          this.$set(this.transforms, this.tindex, 155)\n        }\n      }\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n.message-nolist {\n  text-align: center;\n  padding-top: 100px;\n}\n.message-nolist-pic {\n  width: 490px;\n  height: 406px;\n}\n.message-listitem {\n  transition: all 0.3s ease-in-out;\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: 100%;\n  padding: 0 30px;\n  box-sizing: border-box;\n  height: 140px;\n  border-bottom: 1px solid #f5f5f5;\n  .icon-tongzhi,\n  .message-head_portrait {\n    text-align: center;\n    background: #3599f6;\n    position: relative;\n    width: 90px;\n    height: 90px;\n    display: block;\n    line-height: 90px;\n    color: #fff;\n    border-radius: 50%;\n    font-size: 40px;\n  }\n\n  .del {\n    position: absolute;\n    text-align: center;\n    right: -155px;\n    top: 0;\n    width: 155px;\n    height: 140px;\n    line-height: 140px;\n    font-size: 28px;\n    color: #fff;\n    background: #f50303;\n  }\n}\n.message-listitem-msgbox {\n  margin-left: 30px;\n  flex: 1;\n}\n.message-listitem-content {\n  position: relative;\n  color: #6e6e6e;\n  font-size: 24px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 80%;\n}\n.message-listitem-reddot {\n  float: right;\n  display: block;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  border: 3px solid #fff;\n  background: #ef2323;\n}\n\n.message-listitem-type {\n  overflow: hidden;\n  color: #333333;\n  font-size: 30px;\n  margin-bottom: 13px;\n  .time {\n    float: right;\n    color: #6e6e6e;\n    font-size: 22px;\n    font-weight: normal;\n  }\n}\n</style>\n\n\n"]}]}
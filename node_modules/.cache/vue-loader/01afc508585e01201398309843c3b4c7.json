{"remainingRequest":"/Users/qiang/work/hytx/circle/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/qiang/work/hytx/circle/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qiang/work/hytx/circle/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiang/work/hytx/circle/src/module/card/edit/index.vue?vue&type=template&id=099d2c3c&scoped=true&","dependencies":[{"path":"/Users/qiang/work/hytx/circle/src/module/card/edit/index.vue","mtime":1548810537498},{"path":"/Users/qiang/work/hytx/circle/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/circle/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/circle/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/circle/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"Wrapper\",\n    { staticClass: \"card-wrapper\", attrs: { paddingTop: _vm.paddingTop } },\n    [\n      _c(\"AppHeader\", {\n        ref: \"header\",\n        attrs: {\n          title: \"编辑名片\",\n          iconColor: \"#fff\",\n          fontColor: \"#fff\",\n          background: \"#374ff3\"\n        }\n      }),\n      _vm.firstIn ? _c(\"AppLoading\") : _vm._e(),\n      _c(\n        \"div\",\n        { staticClass: \"card-container\" },\n        [\n          _c(\"Card\", {\n            staticClass: \"card-preview\",\n            attrs: { item: _vm.profile, edit: \"true\" },\n            on: {\n              upload: function($event) {\n                _vm.upload(\"logo\", $event)\n              }\n            }\n          }),\n          _c(\"div\", { staticClass: \"card-styles\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"styles-wrapper\", style: _vm.stylesWrapper },\n              _vm._l(_vm.styles, function(item, index) {\n                return _c(\n                  \"div\",\n                  {\n                    key: index,\n                    staticClass: \"style-item\",\n                    on: {\n                      click: function($event) {\n                        _vm.selectStyles(item.id)\n                      }\n                    }\n                  },\n                  [\n                    _c(\n                      \"div\",\n                      {\n                        staticClass: \"styles-cover\",\n                        class: { show: _vm.profile.style === item.id }\n                      },\n                      [_c(\"span\", { staticClass: \"iconfont icon-success\" })]\n                    ),\n                    _c(\"img\", {\n                      staticClass: \"img\",\n                      attrs: { src: item.poster, alt: \"\" }\n                    })\n                  ]\n                )\n              })\n            )\n          ]),\n          _c(\"div\", { staticClass: \"card-info\" }, [\n            _c(\"p\", { staticClass: \"card-title\" }, [\n              _vm._v(\"名片信息\"),\n              _c(\"span\", { staticClass: \"require\" }, [_vm._v(\"＊为必填项\")])\n            ]),\n            _c(\"div\", { staticClass: \"base-info\" }, [\n              _c(\"div\", { staticClass: \"base-info-row\" }, [\n                _c(\"label\", { staticClass: \"require\", attrs: { for: \"\" } }, [\n                  _vm._v(\"姓名:\")\n                ]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.profile.user_name,\n                      expression: \"profile.user_name\"\n                    }\n                  ],\n                  staticClass: \"input\",\n                  attrs: { type: \"text\", maxlength: \"10\" },\n                  domProps: { value: _vm.profile.user_name },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.profile, \"user_name\", $event.target.value)\n                    }\n                  }\n                }),\n                !_vm.profile.user_name\n                  ? _c(\"i\", {\n                      staticClass: \"icon-gantan1 iconfont\",\n                      on: {\n                        click: function($event) {\n                          _vm.showToastTime(\"姓名必须填写\")\n                        }\n                      }\n                    })\n                  : _vm._e()\n              ]),\n              _c(\"div\", { staticClass: \"base-info-row\" }, [\n                _c(\"label\", { staticClass: \"require\", attrs: { for: \"\" } }, [\n                  _vm._v(\"手机:\")\n                ]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.profile.mobile_phone,\n                      expression: \"profile.mobile_phone\"\n                    }\n                  ],\n                  staticClass: \"input\",\n                  attrs: { type: \"text\" },\n                  domProps: { value: _vm.profile.mobile_phone },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.profile, \"mobile_phone\", $event.target.value)\n                    }\n                  }\n                }),\n                !_vm.profile.mobile_phone\n                  ? _c(\"i\", {\n                      staticClass: \"icon-gantan1 iconfont\",\n                      on: {\n                        click: function($event) {\n                          _vm.showToastTime(\"手机号必须填写\")\n                        }\n                      }\n                    })\n                  : _vm._e()\n              ]),\n              _c(\"div\", { staticClass: \"base-info-row\" }, [\n                _c(\"label\", { staticClass: \"require\", attrs: { for: \"\" } }, [\n                  _vm._v(\"公司:\")\n                ]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.profile.company,\n                      expression: \"profile.company\"\n                    }\n                  ],\n                  staticClass: \"input\",\n                  attrs: { type: \"text\", placeholder: \"请输入您的公司\" },\n                  domProps: { value: _vm.profile.company },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.profile, \"company\", $event.target.value)\n                    }\n                  }\n                }),\n                !_vm.profile.company\n                  ? _c(\"i\", {\n                      staticClass: \"icon-gantan1 iconfont\",\n                      on: {\n                        click: function($event) {\n                          _vm.showToastTime(\"公司必须填写\")\n                        }\n                      }\n                    })\n                  : _vm._e()\n              ]),\n              _c(\"div\", { staticClass: \"base-info-row\" }, [\n                _c(\"label\", { staticClass: \"require\", attrs: { for: \"\" } }, [\n                  _vm._v(\"职位:\")\n                ]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.profile.profession,\n                      expression: \"profile.profession\"\n                    }\n                  ],\n                  staticClass: \"input\",\n                  attrs: { type: \"text\", placeholder: \"请输您的职业\" },\n                  domProps: { value: _vm.profile.profession },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.profile, \"profession\", $event.target.value)\n                    }\n                  }\n                }),\n                !_vm.profile.profession\n                  ? _c(\"i\", {\n                      staticClass: \"icon-gantan1 iconfont\",\n                      on: {\n                        click: function($event) {\n                          _vm.showToastTime(\"职业必须填写\")\n                        }\n                      }\n                    })\n                  : _vm._e()\n              ]),\n              _c(\"div\", { staticClass: \"base-info-row\" }, [\n                _c(\"label\", { attrs: { for: \"\" } }, [_vm._v(\"微信:\")]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.profile.wechat_code,\n                      expression: \"profile.wechat_code\"\n                    }\n                  ],\n                  staticClass: \"input\",\n                  attrs: { type: \"text\", placeholder: \"请输入微信号\" },\n                  domProps: { value: _vm.profile.wechat_code },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.profile, \"wechat_code\", $event.target.value)\n                    }\n                  }\n                })\n              ]),\n              _c(\n                \"div\",\n                { staticClass: \"base-info-row\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [_vm._v(\"城市:\")]),\n                  _c(\"Pickers\", {\n                    staticClass: \"input area-picker\",\n                    attrs: {\n                      data: _vm.Area,\n                      msg: _vm.profile.address || \"请选择地区\"\n                    },\n                    model: {\n                      value: _vm.defaultArea,\n                      callback: function($$v) {\n                        _vm.defaultArea = $$v\n                      },\n                      expression: \"defaultArea\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\"div\", { staticClass: \"base-info-row\" }, [\n                _c(\"label\", { attrs: { for: \"\" } }, [_vm._v(\"地址:\")]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.profile.address_detail,\n                      expression: \"profile.address_detail\"\n                    }\n                  ],\n                  staticClass: \"input\",\n                  attrs: { type: \"text\", placeholder: \"请输您的详细地址\" },\n                  domProps: { value: _vm.profile.address_detail },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(\n                        _vm.profile,\n                        \"address_detail\",\n                        $event.target.value\n                      )\n                    }\n                  }\n                })\n              ])\n            ])\n          ]),\n          _c(\"div\", { staticClass: \"cut-line\" }),\n          _c(\n            \"div\",\n            { staticClass: \"profile\" },\n            [\n              _c(\"p\", { staticClass: \"profile-title\" }, [\n                _vm._v(\"个人简介\"),\n                _c(\"span\", { staticClass: \"profile-title-desc\" }, [\n                  _vm._v(\"(限140字)\")\n                ])\n              ]),\n              _c(\"Textarea\", {\n                staticClass: \"profile-textarea\",\n                attrs: {\n                  maxlength: 140,\n                  canEdit: true,\n                  placeholder: \"个人性格描述，让陌生客户更多的了解你\"\n                },\n                model: {\n                  value: _vm.profile.introduce,\n                  callback: function($$v) {\n                    _vm.$set(_vm.profile, \"introduce\", $$v)\n                  },\n                  expression: \"profile.introduce\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\"div\", { staticClass: \"cut-line\" }),\n          _c(\"div\", { staticClass: \"ablum\" }, [\n            _c(\"p\", { staticClass: \"profile-title\" }, [\n              _vm._v(\"相册\"),\n              _c(\"span\", { staticClass: \"profile-title-desc\" }, [\n                _vm._v(\"(最多6张)\")\n              ])\n            ]),\n            _c(\"p\", { staticClass: \"ablum-desc\" }, [\n              _vm._v(\"上传生活靓照，让陌生客户认识你增加对你的信赖感\")\n            ]),\n            _c(\n              \"div\",\n              { staticClass: \"photos\" },\n              [\n                _vm._l(_vm.photos, function(item, index) {\n                  return _c(\"div\", { key: index, staticClass: \"photo\" }, [\n                    _c(\"div\", {\n                      staticClass: \"img-box\",\n                      style: { \"background-image\": \"url(\" + item + \")\" }\n                    }),\n                    _c(\n                      \"span\",\n                      {\n                        staticClass: \"delete\",\n                        on: {\n                          click: function($event) {\n                            _vm.deletePhoto(index)\n                          }\n                        }\n                      },\n                      [_vm._v(\"×\")]\n                    )\n                  ])\n                }),\n                _vm.photos.length !== 6\n                  ? _c(\n                      \"div\",\n                      { staticClass: \"photo\" },\n                      [\n                        _c(\"AppUploadImg\", {\n                          staticClass: \"upload-photo\",\n                          attrs: { ratio: \"1\" },\n                          on: {\n                            success: function($event) {\n                              _vm.upload(\"photos\", $event)\n                            }\n                          }\n                        }),\n                        _c(\"div\", { staticClass: \"img-box\" }, [\n                          _c(\"img\", {\n                            staticClass: \"photo-img\",\n                            attrs: { src: require(\"./addPhoto.png\"), alt: \"\" }\n                          })\n                        ])\n                      ],\n                      1\n                    )\n                  : _vm._e()\n              ],\n              2\n            )\n          ])\n        ],\n        1\n      ),\n      _c(\"div\", { ref: \"footer\", staticClass: \"submit\" }, [\n        _c(\"p\", { on: { click: _vm.setProfile } }, [_vm._v(\"完成\")])\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}
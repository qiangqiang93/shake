{"remainingRequest":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiang/work/hytx/hytx-rebuild/src/module/webPage/edit/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiang/work/hytx/hytx-rebuild/src/module/webPage/edit/index.vue","mtime":1548819948610},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport appHeader from '../components/appHeader/index'\nimport AppAblum from '@/components/AppAblum'\nimport eventBus from '@/utils/eventBus'\nimport { mapState, mapActions } from 'vuex'\nimport { getMarketingCover } from '../../../utils/index'\nimport httpService from '@/service/httpService'\nimport CloneDialog from '@/components/CloneDialog'\nimport dialogService from '@/service/dialogService'\nimport CustomComponent from '@/components/CustomComponent'\nimport ComponentHandler from '@/components/ComponentHandler'\nimport Wrapper from '@/components/Wrapper'\n\nexport default {\n  name: 'webPageEdit',\n  data() {\n    return {\n      addIndex: null, // 添加组件到指定位置\n      id: null,\n      idArr: [], //\n      datas: [], //clonePage的content\n      ablum: null,\n      canEdit: true,\n      pageTitle: '',\n      operateType: null,\n      operateComponent: null,\n      indexa: null,\n      bgcolor: 'fff', // 背景颜色\n      isSample: false, // 是否显示示列\n      cloneUserId: null, // 克隆模板主人id\n      windowHeight: null, // offsetHeight\n      showCloneDialog: false, // 是否显示克隆设置\n      cloneId: this.vuexCloneId, // 克隆id\n      isSave: false //提示还没保存\n    }\n  },\n  async mounted() {\n    let _self = this\n    this['webPage/updateSelectShow'](false)\n    this['webPage/updateCloneId'](null)\n    if (this.$route.params.id) {\n      this.editInit()\n    } else {\n      this.isEditVideo()\n      this.isPurchase()\n      if (this.clonePage !== null && JSON.stringify(this.clonePage) !== '{}') {\n        let data = JSON.parse(this.clonePage.content)\n        // 如果数据中包含了名片信息，则替换名片信息\n        let hasCard = data.some(item => item.type === 'baseInfo')\n        if (hasCard) {\n          let cardInfo = null\n          if (this.cardInfo) {\n            cardInfo = this.cardInfo\n          } else {\n            // 获取名片信息\n            let res = await httpService.get('/front/card', {\n              user_id: this.user.id\n            })\n            cardInfo = res.data\n            this['webPage/updateCardInfo'](res.data)\n          }\n          data.forEach(item => {\n            if (item.type === 'baseInfo') {\n              item.infos.name = cardInfo.name\n              item.infos.jobs = cardInfo.profession\n              item.infos.company = cardInfo.company\n              item.infos.avatar.href = cardInfo.portrait\n            }\n          })\n        }\n        this.datas = data\n        // 解决修改已保存的自定义网页时，没上传6张图片时没显示6个点的问题\n        this.datas.map(el => {\n          if (el.type === 'slider') {\n            el.children.map(ele => {\n              ele.isSliderItem = true\n            })\n          }\n        })\n        this.pageTitle = this.clonePage.title\n        this.bgcolor = this.clonePage.background\n        this.cloneUserId = this.clonePage.user_id\n        this.idArr =\n          this.clonePage.components && this.clonePage.components.split(',')\n        this['webPage/updateClonePage']({\n          type: 'clean',\n          data: {}\n        })\n      } else {\n        // nothing\n      }\n    }\n    this.windowHeight = document.documentElement.offsetHeight\n  },\n  methods: {\n    ...mapActions([\n      'webPage/updateSelectShow',\n      'webPage/updateEditVideo',\n      'webPage/updateTempDatas',\n      'webPage/updateVideoIndex',\n      'webPage/updateCardInfo',\n      'webPage/updateCloneId',\n      'webPage/updateClonePage',\n      'webPage/updatePreviewGoods',\n      'system/updateRouter',\n      'system/updateCropper'\n    ]),\n    // 新上传图片\n    upload(index, data) {\n      if (this.datas[index].type === 'baseInfo') {\n        this.datas[index].infos.avatar.href = data.path\n      } else if (this.datas[index].type === 'goods') {\n        this.datas[index].goods[data.index].img.src = data.path\n        // 解决没有添加图片就不可以添加超链接\n        this.datas[index].isAddSuperLink = true\n      } else if (this.datas[index].type === 'video') {\n        this.datas[index].video.img.src = data.path\n        // 解决没有添加图片就不可以添加超链接\n        this.datas[index].isAddSuperLink = true\n      } else {\n        this.datas[index].children[data.index].img.src = data.path\n        // 解决没有添加图片就不可以添加超链接\n        this.datas[index].isAddSuperLink = true\n      }\n    },\n    actions(action) {\n      if (action == 'review') {\n        this.toggleEdit()\n      } else if (action == 'save') {\n        this.save()\n      } else if (action == 'back') {\n        if (this.platform === 'android') {\n          androidJS.toBackView()\n        } else {\n          this.$router.back()\n        }\n      }\n    },\n    // 克隆弹出层\n    closeHandle(input) {\n      if (input) {\n        let reg = /\\/tools\\/personal\\/customTemplate/\n        if (reg.test(this.$route.path)) {\n          this.saveHandler(input)\n          this.showCloneDialog = false\n        } else {\n          this.saveHandler(input)\n          this.showCloneDialog = false\n        }\n      } else {\n        this.showCloneDialog = false\n      }\n    },\n    // 判断是否处于编辑视频状态\n    isEditVideo() {\n      if (this.editVideo) {\n        this.datas = this.tempDatas\n        this.childOperation('addVideo', this.videoIndex)\n        this['webPage/updateEditVideo'](false)\n        this['webPage/updateTempDatas'](null)\n        this['webPage/updateVideoIndex'](null)\n        return false\n      } else {\n        return true\n      }\n    },\n    // 判断是否点击立即购买\n    isPurchase() {\n      if (this.previewGoods) {\n        this.datas = this.tempDatas\n        this.canEdit = false\n        this['webPage/updatePreviewGoods'](false)\n        return false\n      } else {\n        return true\n      }\n    },\n    // 如果是编辑的情况\n    async editInit() {\n      this.id = this.$route.params.id\n      if (!this.isEditVideo()) {\n        return false\n      }\n      if (!this.isPurchase()) {\n        return false\n      }\n      try {\n        let res = await httpService.get(\n          `/front/personal_page/customs/${this.id}`\n        )\n        if (res.status !== 0) throw new Error(res.message)\n        this.datas = JSON.parse(res.data.content)\n        // 解决修改已保存的自定义网页时，没上传6张图片时没显示6个点的问题\n        this.datas.map(el => {\n          if (el.type === 'slider') {\n            el.children.map(ele => {\n              ele.isSliderItem = true\n            })\n          }\n        })\n        this.pageTitle = res.data.title\n        this.bgcolor = res.data.background\n      } catch (err) {\n        dialogService.alert(err.message)\n      }\n    },\n    // 改变背景颜色\n    changebgcolor(x) {\n      this.bgcolor = x\n    },\n    // 改变背景颜色\n    changebgpic(x) {\n      this.$refs.customWrapper.style.background = `url(' ${x} ') no-repeat fixed center / 100% 100%`\n      this.bgcolor = `url(' ${x} ') no-repeat fixed center / 100% 100%`\n    },\n    // 显示组件选择\n    showSelect() {\n      this['webPage/updateSelectShow'](true)\n      this.operateType = 'component'\n    },\n    // 子组件添加一个组件\n    selectComponent(item) {\n      if (item.type === 'slider') {\n        item.children.forEach((ele, index) => {\n          ele.isSliderItem = true\n        })\n      }\n      if (this.addIndex) {\n        this.datas.splice(this.addIndex, 0, item)\n        this.addIndex = null\n      } else {\n        this.datas.push(item)\n      }\n      this.$nextTick(() => {\n        this.$refs.customComponents.scrollIntoView(false)\n      })\n    },\n    // 子组件的操作[上移、下移、删除、置顶、切换布局、添加超链接]\n    childOperation(type, index) {\n      let temp\n      let arr = JSON.parse(JSON.stringify(this.datas))\n      this.datas = []\n      switch (type) {\n        case 'moveUp':\n          temp = arr[index - 1]\n          arr.splice(index - 1, 1, arr[index])\n          arr.splice(index, 1, temp)\n          setTimeout(() => {\n            this.datas = arr\n          })\n          break\n        case 'moveDown':\n          temp = arr[index + 1]\n          arr.splice(index + 1, 1, arr[index])\n          arr.splice(index, 1, temp)\n          setTimeout(() => {\n            this.datas = arr\n          })\n          break\n        case 'addComponent':\n          this.addIndex = index + 1\n          this.showSelect()\n          setTimeout(() => {\n            this.datas = arr\n          })\n          break\n        case 'delete':\n          arr.splice(index, 1)\n          setTimeout(() => {\n            this.datas = arr\n          })\n          break\n        case 'toggleLayout':\n          this['webPage/updateSelectShow'](true)\n          this.operateType = 'layout'\n          this.operateComponent = arr[index]\n          this.indexa = index\n          this.datas = arr\n          break\n        case 'addSuperLink':\n          this['webPage/updateSelectShow'](true)\n          this.operateType = 'superLink'\n          this.indexa = index\n          this.operateComponent = arr[index]\n          this.datas = arr\n          break\n        case 'addVideo':\n          this['webPage/updateSelectShow'](true)\n          this.operateType = 'video'\n          this.operateComponent = arr[index]\n          this.indexa = index\n          this.datas = arr\n          break\n        default:\n        // nothing\n      }\n    },\n    // 子组件调用，内容修改（包含切换布局和添加链接）\n    editComponent(index, item) {\n      this.datas.splice(index, 1, item)\n    },\n    // 删除swiper图\n    delswiper(index, i) {\n      this.datas[index].children[i].img.src = ''\n    },\n    // 预览\n    toggleEdit() {\n      if (this.datas.length === 0) {\n        dialogService.alert('未添加编辑模块内容')\n        return\n      }\n      if (this.canEdit) {\n        this.dataTurnFun()\n      } else {\n        this.datas = this.datas.map(item => {\n          item.isShow = true\n          if (item.type === 'slider') {\n            item.children.forEach((ele, index) => {\n              ele.isSliderItem = true\n            })\n          }\n          return item\n        })\n      }\n      let temp = JSON.parse(JSON.stringify(this.datas))\n      this.datas = []\n      setTimeout(() => {\n        this.datas = temp\n      })\n      this.canEdit = !this.canEdit\n    },\n    // 保存\n    save() {\n      let self = this\n      let flag = false\n      this.dataTurnFun()\n      flag = this.datas.some(item => item.isShow)\n      if (this.datas.length < 1 || !flag) {\n        this.datas.map(el => {\n          if (el.type === 'slider') {\n            el.children.map(ele => {\n              ele.isSliderItem = true\n            })\n          }\n        })\n        dialogService.alert('请填写内容')\n        return\n      } else if (this.pageTitle.length === 0) {\n        dialogService.alert('请输入网页名称')\n        return\n      } else {\n        // nothing\n      }\n      // 判断是否允许克隆\n      if (!this.id) {\n        this.authClone()\n      } else {\n        this.saveHandler()\n      }\n    },\n    // 数据校验、不填写的数据不显示\n    dataTurnFun() {\n      let idArr = []\n      let datas = this.datas.map(item => {\n        idArr.push(item.id)\n        if (item.type === 'title') {\n          item.isShow = item.title || item.subTitle\n        } else if (item.type === 'baseInfo') {\n          item.isShow =\n            item.infos.name ||\n            item.infos.jobs ||\n            item.infos.avatar.href ||\n            item.infos.company\n        } else if (item.type === 'text') {\n          item.isShow = item.children.some(it => {\n            return it.text\n          })\n        } else if (item.type === 'slider') {\n          item.children.forEach((ele, index) => {\n            ele.isSliderItem = !ele.img.src ? false : true\n          })\n          item.isShow = item.children.some(it => {\n            return it.img.src\n          })\n        } else if (item.type === 'goods') {\n          item.isShow = item.goods.some(it => {\n            // 解决只有it.type = 'text' 时img为null没有it.img.src就会报错\n            let src = it.img.src\n            return it.title || it.lowPrice || it.highPrice || src\n          })\n        } else if (item.type === 'video') {\n          item.isShow =\n            item.video.title || item.video.content || item.video.img.src\n        } else {\n          item.isShow = item.children.some(it => {\n            // 解决只有it.type = 'text' 时img为null没有it.img.src就会报错\n            let src = it.img ? it.img.src : it.img\n            return it.text || src\n          })\n        }\n        return item\n      })\n      this.idArr = idArr\n      this.datas = datas\n    },\n    // 相册\n    scale(index, i, ra) {\n      let ablum = []\n      if (i === 'baseInfo') {\n        ablum = [this.datas[index].infos.avatar.href]\n        i = 0\n      } else if (ra === 'goods') {\n        ablum = [this.datas[index].goods.img.src]\n      } else {\n        this.datas[index].children.forEach(element => {\n          if (element.type !== 'text') {\n            if (element.type === 'slider') {\n              if (element.isSliderItem) {\n                ablum.push(element.img)\n              }\n            } else {\n              ablum.push(element.img)\n            }\n          }\n        })\n      }\n      // slide的时候bug\n      if (i > ablum.length - 1) {\n        i = ablum.length - 1\n      }\n      this.ablum = {\n        ablum: ablum,\n        index: i\n      }\n    },\n    // 关闭相册\n    closeScale() {\n      this.ablum = null\n    },\n    // 授权是否允许克隆\n    authClone() {\n      let _self = this\n      this.showCloneDialog = true\n    },\n    // 保存提交\n    async saveHandler(input) {\n      try {\n        let res = null\n        let self = this\n        let covers = getMarketingCover(this.datas)\n        if (this.id) {\n          res = await httpService.put(\n            `/front/personal_page/customs/${this.id}`,\n            {\n              cover: covers,\n              title: this.pageTitle,\n              components: this.idArr,\n              background: this.bgcolor,\n              content: JSON.stringify(this.datas)\n            }\n          )\n          if (res.status !== 0) throw new Error(res.message)\n          // 修改成功后操作\n          self.isSave = true\n          dialogService.alert('修改成功')\n          if (this.platform === 'android') {\n            androidJS.toBackView()\n          } else {\n            self.$router.replace({\n              path: '/webPage/mine'\n            })\n          }\n        } else {\n          res = await httpService.post('/front/personal_page/customs', {\n            cover: covers,\n            is_clone: input.is_clone,\n            clone_price: input.clone_price,\n            title: this.pageTitle,\n            components: this.idArr,\n            clone_id: this.cloneId,\n            background: this.bgcolor,\n            content: JSON.stringify(this.datas)\n          })\n          if (res.status !== 0) throw new Error(res.message)\n          self.isSave = true\n          dialogService.alert('保存成功')\n          if (this.platform === 'android') {\n            androidJS.toBackView()\n          } else {\n            self.$router.replace({\n              path: '/webPage/mine'\n            })\n          }\n        }\n      } catch (err) {\n        dialogService.alert(err.message)\n      }\n    }\n  },\n  computed: {\n    ...mapState({\n      selectShow: state => state.webPage.selectShow,\n      cardInfo: state => state.webPage.cardInfo,\n      editVideo: state => state.webPage.editVideo,\n      tempDatas: state => state.webPage.tempDatas,\n      videoIndex: state => state.webPage.videoIndex,\n      clonePage: state => state.webPage.clonePage,\n      vuexCloneId: state => state.webPage.cloneId,\n      previewGoods: state => state.webPage.previewGoods,\n      user: state => state.user.userInfo,\n      platform: state => state.system.platform\n    })\n  },\n  components: {\n    AppAblum,\n    appHeader,\n    CloneDialog,\n    CustomComponent,\n    ComponentHandler,\n    Wrapper\n  },\n  beforeRouteLeave(to, from, next) {\n    let that = this\n    if (to.path == '/cropper') {\n      next()\n      return\n    }\n    if (!this.isSave) {\n      next(false)\n      dialogService.confirm('您还没保存，确定要离开？', ok => {\n        if (ok) {\n          eventBus.$emit('closeCropper')\n          // 离开清除缓存\n          if (to.path !== '/cropper') {\n            that['system/updateRouter']({\n              type: 'del',\n              data: 'webPageEdit'\n            })\n          }\n          if (to.path == '/pay') {\n            that.$router.go(-2)\n          }\n          next()\n        }\n      })\n    } else {\n      // 离开清除缓存\n      if (to.path !== '/cropper') {\n        that['system/updateRouter']({\n          type: 'del',\n          data: 'webPageEdit'\n        })\n      }\n      if (to.path == '/pay') {\n        that.$router.go(-2)\n      }\n      next()\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/module/webPage/edit","sourcesContent":["<template>\n  <Wrapper>\n    <appHeader @actions=\"actions\" :canEdit=\"canEdit\" ref=\"header\"></appHeader>\n    <div class=\"custom-wrapper\" ref=\"customWrapper\" :style=\"'background:'+bgcolor\">\n      <div class=\"custom-content\" ref=\"customComponents\">\n        <div @click.stop=\"isSample=true\" class=\"samples\" v-if=\"canEdit\"><i class=\"iconfont icon-shipin1\"></i>教程</div>\n        <div class=\"title-wrapper\" v-if=\"canEdit\">\n          <p class=\"tName\">网页名称：</p>\n          <input type=\"text\" v-model=\"pageTitle\" placeholder=\"取个吸引人的标题，提升点击率\" maxlength=\"16\">\n        </div>\n        <template v-for=\"(item, index) in datas\">\n          <CustomComponent v-show=\"item.isShow||canEdit\" :key=\"index\" :index=\"index\" :datalen=\"datas.length\" :item=\"item\" :canEdit=\"canEdit\" @upload=\"upload(index,$event)\"></CustomComponent>\n        </template>\n      </div>\n    </div>\n    <div class=\"custom-round\" v-if=\"canEdit\" @click=\"showSelect()\" ref=\"footer\"><i class=\"iconfont icon-hao\"></i></div>\n    <!-- 半圆，工具图片 -->\n    <ComponentHandler v-show=\"selectShow\" :type=\"operateType\" :item=\"operateComponent\" :indexa=\"indexa\" :url=\"bgcolor\"></ComponentHandler>\n    <AppAblum v-if=\"ablum\" :data=\"ablum\" @close=\"closeScale\"></AppAblum>\n    <CloneDialog v-if=\"showCloneDialog\" @closeHandle=\"closeHandle\"></CloneDialog>\n    <div class=\"sample\" v-if=\"isSample\">\n      <i class=\"iconfont icon-bianjiyemianshanchu\" @click=\"isSample=false\"></i>\n      <img src=\"./2.png\" alt=\"\" style=\"width:100%;\">\n    </div>\n  </Wrapper>\n</template>\n\n<script>\nimport appHeader from '../components/appHeader/index'\nimport AppAblum from '@/components/AppAblum'\nimport eventBus from '@/utils/eventBus'\nimport { mapState, mapActions } from 'vuex'\nimport { getMarketingCover } from '../../../utils/index'\nimport httpService from '@/service/httpService'\nimport CloneDialog from '@/components/CloneDialog'\nimport dialogService from '@/service/dialogService'\nimport CustomComponent from '@/components/CustomComponent'\nimport ComponentHandler from '@/components/ComponentHandler'\nimport Wrapper from '@/components/Wrapper'\n\nexport default {\n  name: 'webPageEdit',\n  data() {\n    return {\n      addIndex: null, // 添加组件到指定位置\n      id: null,\n      idArr: [], //\n      datas: [], //clonePage的content\n      ablum: null,\n      canEdit: true,\n      pageTitle: '',\n      operateType: null,\n      operateComponent: null,\n      indexa: null,\n      bgcolor: 'fff', // 背景颜色\n      isSample: false, // 是否显示示列\n      cloneUserId: null, // 克隆模板主人id\n      windowHeight: null, // offsetHeight\n      showCloneDialog: false, // 是否显示克隆设置\n      cloneId: this.vuexCloneId, // 克隆id\n      isSave: false //提示还没保存\n    }\n  },\n  async mounted() {\n    let _self = this\n    this['webPage/updateSelectShow'](false)\n    this['webPage/updateCloneId'](null)\n    if (this.$route.params.id) {\n      this.editInit()\n    } else {\n      this.isEditVideo()\n      this.isPurchase()\n      if (this.clonePage !== null && JSON.stringify(this.clonePage) !== '{}') {\n        let data = JSON.parse(this.clonePage.content)\n        // 如果数据中包含了名片信息，则替换名片信息\n        let hasCard = data.some(item => item.type === 'baseInfo')\n        if (hasCard) {\n          let cardInfo = null\n          if (this.cardInfo) {\n            cardInfo = this.cardInfo\n          } else {\n            // 获取名片信息\n            let res = await httpService.get('/front/card', {\n              user_id: this.user.id\n            })\n            cardInfo = res.data\n            this['webPage/updateCardInfo'](res.data)\n          }\n          data.forEach(item => {\n            if (item.type === 'baseInfo') {\n              item.infos.name = cardInfo.name\n              item.infos.jobs = cardInfo.profession\n              item.infos.company = cardInfo.company\n              item.infos.avatar.href = cardInfo.portrait\n            }\n          })\n        }\n        this.datas = data\n        // 解决修改已保存的自定义网页时，没上传6张图片时没显示6个点的问题\n        this.datas.map(el => {\n          if (el.type === 'slider') {\n            el.children.map(ele => {\n              ele.isSliderItem = true\n            })\n          }\n        })\n        this.pageTitle = this.clonePage.title\n        this.bgcolor = this.clonePage.background\n        this.cloneUserId = this.clonePage.user_id\n        this.idArr =\n          this.clonePage.components && this.clonePage.components.split(',')\n        this['webPage/updateClonePage']({\n          type: 'clean',\n          data: {}\n        })\n      } else {\n        // nothing\n      }\n    }\n    this.windowHeight = document.documentElement.offsetHeight\n  },\n  methods: {\n    ...mapActions([\n      'webPage/updateSelectShow',\n      'webPage/updateEditVideo',\n      'webPage/updateTempDatas',\n      'webPage/updateVideoIndex',\n      'webPage/updateCardInfo',\n      'webPage/updateCloneId',\n      'webPage/updateClonePage',\n      'webPage/updatePreviewGoods',\n      'system/updateRouter',\n      'system/updateCropper'\n    ]),\n    // 新上传图片\n    upload(index, data) {\n      if (this.datas[index].type === 'baseInfo') {\n        this.datas[index].infos.avatar.href = data.path\n      } else if (this.datas[index].type === 'goods') {\n        this.datas[index].goods[data.index].img.src = data.path\n        // 解决没有添加图片就不可以添加超链接\n        this.datas[index].isAddSuperLink = true\n      } else if (this.datas[index].type === 'video') {\n        this.datas[index].video.img.src = data.path\n        // 解决没有添加图片就不可以添加超链接\n        this.datas[index].isAddSuperLink = true\n      } else {\n        this.datas[index].children[data.index].img.src = data.path\n        // 解决没有添加图片就不可以添加超链接\n        this.datas[index].isAddSuperLink = true\n      }\n    },\n    actions(action) {\n      if (action == 'review') {\n        this.toggleEdit()\n      } else if (action == 'save') {\n        this.save()\n      } else if (action == 'back') {\n        if (this.platform === 'android') {\n          androidJS.toBackView()\n        } else {\n          this.$router.back()\n        }\n      }\n    },\n    // 克隆弹出层\n    closeHandle(input) {\n      if (input) {\n        let reg = /\\/tools\\/personal\\/customTemplate/\n        if (reg.test(this.$route.path)) {\n          this.saveHandler(input)\n          this.showCloneDialog = false\n        } else {\n          this.saveHandler(input)\n          this.showCloneDialog = false\n        }\n      } else {\n        this.showCloneDialog = false\n      }\n    },\n    // 判断是否处于编辑视频状态\n    isEditVideo() {\n      if (this.editVideo) {\n        this.datas = this.tempDatas\n        this.childOperation('addVideo', this.videoIndex)\n        this['webPage/updateEditVideo'](false)\n        this['webPage/updateTempDatas'](null)\n        this['webPage/updateVideoIndex'](null)\n        return false\n      } else {\n        return true\n      }\n    },\n    // 判断是否点击立即购买\n    isPurchase() {\n      if (this.previewGoods) {\n        this.datas = this.tempDatas\n        this.canEdit = false\n        this['webPage/updatePreviewGoods'](false)\n        return false\n      } else {\n        return true\n      }\n    },\n    // 如果是编辑的情况\n    async editInit() {\n      this.id = this.$route.params.id\n      if (!this.isEditVideo()) {\n        return false\n      }\n      if (!this.isPurchase()) {\n        return false\n      }\n      try {\n        let res = await httpService.get(\n          `/front/personal_page/customs/${this.id}`\n        )\n        if (res.status !== 0) throw new Error(res.message)\n        this.datas = JSON.parse(res.data.content)\n        // 解决修改已保存的自定义网页时，没上传6张图片时没显示6个点的问题\n        this.datas.map(el => {\n          if (el.type === 'slider') {\n            el.children.map(ele => {\n              ele.isSliderItem = true\n            })\n          }\n        })\n        this.pageTitle = res.data.title\n        this.bgcolor = res.data.background\n      } catch (err) {\n        dialogService.alert(err.message)\n      }\n    },\n    // 改变背景颜色\n    changebgcolor(x) {\n      this.bgcolor = x\n    },\n    // 改变背景颜色\n    changebgpic(x) {\n      this.$refs.customWrapper.style.background = `url(' ${x} ') no-repeat fixed center / 100% 100%`\n      this.bgcolor = `url(' ${x} ') no-repeat fixed center / 100% 100%`\n    },\n    // 显示组件选择\n    showSelect() {\n      this['webPage/updateSelectShow'](true)\n      this.operateType = 'component'\n    },\n    // 子组件添加一个组件\n    selectComponent(item) {\n      if (item.type === 'slider') {\n        item.children.forEach((ele, index) => {\n          ele.isSliderItem = true\n        })\n      }\n      if (this.addIndex) {\n        this.datas.splice(this.addIndex, 0, item)\n        this.addIndex = null\n      } else {\n        this.datas.push(item)\n      }\n      this.$nextTick(() => {\n        this.$refs.customComponents.scrollIntoView(false)\n      })\n    },\n    // 子组件的操作[上移、下移、删除、置顶、切换布局、添加超链接]\n    childOperation(type, index) {\n      let temp\n      let arr = JSON.parse(JSON.stringify(this.datas))\n      this.datas = []\n      switch (type) {\n        case 'moveUp':\n          temp = arr[index - 1]\n          arr.splice(index - 1, 1, arr[index])\n          arr.splice(index, 1, temp)\n          setTimeout(() => {\n            this.datas = arr\n          })\n          break\n        case 'moveDown':\n          temp = arr[index + 1]\n          arr.splice(index + 1, 1, arr[index])\n          arr.splice(index, 1, temp)\n          setTimeout(() => {\n            this.datas = arr\n          })\n          break\n        case 'addComponent':\n          this.addIndex = index + 1\n          this.showSelect()\n          setTimeout(() => {\n            this.datas = arr\n          })\n          break\n        case 'delete':\n          arr.splice(index, 1)\n          setTimeout(() => {\n            this.datas = arr\n          })\n          break\n        case 'toggleLayout':\n          this['webPage/updateSelectShow'](true)\n          this.operateType = 'layout'\n          this.operateComponent = arr[index]\n          this.indexa = index\n          this.datas = arr\n          break\n        case 'addSuperLink':\n          this['webPage/updateSelectShow'](true)\n          this.operateType = 'superLink'\n          this.indexa = index\n          this.operateComponent = arr[index]\n          this.datas = arr\n          break\n        case 'addVideo':\n          this['webPage/updateSelectShow'](true)\n          this.operateType = 'video'\n          this.operateComponent = arr[index]\n          this.indexa = index\n          this.datas = arr\n          break\n        default:\n        // nothing\n      }\n    },\n    // 子组件调用，内容修改（包含切换布局和添加链接）\n    editComponent(index, item) {\n      this.datas.splice(index, 1, item)\n    },\n    // 删除swiper图\n    delswiper(index, i) {\n      this.datas[index].children[i].img.src = ''\n    },\n    // 预览\n    toggleEdit() {\n      if (this.datas.length === 0) {\n        dialogService.alert('未添加编辑模块内容')\n        return\n      }\n      if (this.canEdit) {\n        this.dataTurnFun()\n      } else {\n        this.datas = this.datas.map(item => {\n          item.isShow = true\n          if (item.type === 'slider') {\n            item.children.forEach((ele, index) => {\n              ele.isSliderItem = true\n            })\n          }\n          return item\n        })\n      }\n      let temp = JSON.parse(JSON.stringify(this.datas))\n      this.datas = []\n      setTimeout(() => {\n        this.datas = temp\n      })\n      this.canEdit = !this.canEdit\n    },\n    // 保存\n    save() {\n      let self = this\n      let flag = false\n      this.dataTurnFun()\n      flag = this.datas.some(item => item.isShow)\n      if (this.datas.length < 1 || !flag) {\n        this.datas.map(el => {\n          if (el.type === 'slider') {\n            el.children.map(ele => {\n              ele.isSliderItem = true\n            })\n          }\n        })\n        dialogService.alert('请填写内容')\n        return\n      } else if (this.pageTitle.length === 0) {\n        dialogService.alert('请输入网页名称')\n        return\n      } else {\n        // nothing\n      }\n      // 判断是否允许克隆\n      if (!this.id) {\n        this.authClone()\n      } else {\n        this.saveHandler()\n      }\n    },\n    // 数据校验、不填写的数据不显示\n    dataTurnFun() {\n      let idArr = []\n      let datas = this.datas.map(item => {\n        idArr.push(item.id)\n        if (item.type === 'title') {\n          item.isShow = item.title || item.subTitle\n        } else if (item.type === 'baseInfo') {\n          item.isShow =\n            item.infos.name ||\n            item.infos.jobs ||\n            item.infos.avatar.href ||\n            item.infos.company\n        } else if (item.type === 'text') {\n          item.isShow = item.children.some(it => {\n            return it.text\n          })\n        } else if (item.type === 'slider') {\n          item.children.forEach((ele, index) => {\n            ele.isSliderItem = !ele.img.src ? false : true\n          })\n          item.isShow = item.children.some(it => {\n            return it.img.src\n          })\n        } else if (item.type === 'goods') {\n          item.isShow = item.goods.some(it => {\n            // 解决只有it.type = 'text' 时img为null没有it.img.src就会报错\n            let src = it.img.src\n            return it.title || it.lowPrice || it.highPrice || src\n          })\n        } else if (item.type === 'video') {\n          item.isShow =\n            item.video.title || item.video.content || item.video.img.src\n        } else {\n          item.isShow = item.children.some(it => {\n            // 解决只有it.type = 'text' 时img为null没有it.img.src就会报错\n            let src = it.img ? it.img.src : it.img\n            return it.text || src\n          })\n        }\n        return item\n      })\n      this.idArr = idArr\n      this.datas = datas\n    },\n    // 相册\n    scale(index, i, ra) {\n      let ablum = []\n      if (i === 'baseInfo') {\n        ablum = [this.datas[index].infos.avatar.href]\n        i = 0\n      } else if (ra === 'goods') {\n        ablum = [this.datas[index].goods.img.src]\n      } else {\n        this.datas[index].children.forEach(element => {\n          if (element.type !== 'text') {\n            if (element.type === 'slider') {\n              if (element.isSliderItem) {\n                ablum.push(element.img)\n              }\n            } else {\n              ablum.push(element.img)\n            }\n          }\n        })\n      }\n      // slide的时候bug\n      if (i > ablum.length - 1) {\n        i = ablum.length - 1\n      }\n      this.ablum = {\n        ablum: ablum,\n        index: i\n      }\n    },\n    // 关闭相册\n    closeScale() {\n      this.ablum = null\n    },\n    // 授权是否允许克隆\n    authClone() {\n      let _self = this\n      this.showCloneDialog = true\n    },\n    // 保存提交\n    async saveHandler(input) {\n      try {\n        let res = null\n        let self = this\n        let covers = getMarketingCover(this.datas)\n        if (this.id) {\n          res = await httpService.put(\n            `/front/personal_page/customs/${this.id}`,\n            {\n              cover: covers,\n              title: this.pageTitle,\n              components: this.idArr,\n              background: this.bgcolor,\n              content: JSON.stringify(this.datas)\n            }\n          )\n          if (res.status !== 0) throw new Error(res.message)\n          // 修改成功后操作\n          self.isSave = true\n          dialogService.alert('修改成功')\n          if (this.platform === 'android') {\n            androidJS.toBackView()\n          } else {\n            self.$router.replace({\n              path: '/webPage/mine'\n            })\n          }\n        } else {\n          res = await httpService.post('/front/personal_page/customs', {\n            cover: covers,\n            is_clone: input.is_clone,\n            clone_price: input.clone_price,\n            title: this.pageTitle,\n            components: this.idArr,\n            clone_id: this.cloneId,\n            background: this.bgcolor,\n            content: JSON.stringify(this.datas)\n          })\n          if (res.status !== 0) throw new Error(res.message)\n          self.isSave = true\n          dialogService.alert('保存成功')\n          if (this.platform === 'android') {\n            androidJS.toBackView()\n          } else {\n            self.$router.replace({\n              path: '/webPage/mine'\n            })\n          }\n        }\n      } catch (err) {\n        dialogService.alert(err.message)\n      }\n    }\n  },\n  computed: {\n    ...mapState({\n      selectShow: state => state.webPage.selectShow,\n      cardInfo: state => state.webPage.cardInfo,\n      editVideo: state => state.webPage.editVideo,\n      tempDatas: state => state.webPage.tempDatas,\n      videoIndex: state => state.webPage.videoIndex,\n      clonePage: state => state.webPage.clonePage,\n      vuexCloneId: state => state.webPage.cloneId,\n      previewGoods: state => state.webPage.previewGoods,\n      user: state => state.user.userInfo,\n      platform: state => state.system.platform\n    })\n  },\n  components: {\n    AppAblum,\n    appHeader,\n    CloneDialog,\n    CustomComponent,\n    ComponentHandler,\n    Wrapper\n  },\n  beforeRouteLeave(to, from, next) {\n    let that = this\n    if (to.path == '/cropper') {\n      next()\n      return\n    }\n    if (!this.isSave) {\n      next(false)\n      dialogService.confirm('您还没保存，确定要离开？', ok => {\n        if (ok) {\n          eventBus.$emit('closeCropper')\n          // 离开清除缓存\n          if (to.path !== '/cropper') {\n            that['system/updateRouter']({\n              type: 'del',\n              data: 'webPageEdit'\n            })\n          }\n          if (to.path == '/pay') {\n            that.$router.go(-2)\n          }\n          next()\n        }\n      })\n    } else {\n      // 离开清除缓存\n      if (to.path !== '/cropper') {\n        that['system/updateRouter']({\n          type: 'del',\n          data: 'webPageEdit'\n        })\n      }\n      if (to.path == '/pay') {\n        that.$router.go(-2)\n      }\n      next()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" src=\"./index.scss\" scoped>\n</style>\n"]}]}
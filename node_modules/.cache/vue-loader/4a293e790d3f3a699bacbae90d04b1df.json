{"remainingRequest":"/Users/qiang/work/hytx/circle/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiang/work/hytx/circle/src/components/ComponentHandler/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiang/work/hytx/circle/src/components/ComponentHandler/index.vue","mtime":1548313186312},{"path":"/Users/qiang/work/hytx/circle/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/circle/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/circle/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/circle/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapActions } from 'vuex'\nimport VideoItem from '@/components/VideoItem'\nimport httpService from '@/service/httpService'\nimport state from '../../store/modules/user/state'\nimport dialogService from '@/service/dialogService'\n\nexport default {\n  props: ['type', 'item', 'indexa', 'url'],\n  data() {\n    return {\n      bgstate: true, // 背景选择\n      ratio: {}, // 单前所选比例\n      show: false, // 上滑动画状态\n      toggles: [], // 可切换的组件\n      category: {}, // 当前所选分类\n      itemCopy: {}, // 传入组件的副本\n      components: [], // 单前显示的组件\n      marketPages: [], // 营销网页列表\n      filterStyle: {}, // 过滤条件的高度\n      stype: '', // 所选类型\n      url2: '', // 背景类型1\n      url3: '', // 背景类型2\n      filters: [\n        // 比例筛选\n        { text: '1:1', val: '1.00', className: 'iconfont icon-bi4' },\n        { text: '2:3', val: '0.66', className: 'iconfont icon-bi' },\n        { text: '3:2', val: '1.50', className: 'iconfont icon-bi3' },\n        { text: '4:3', val: '1.33', className: 'iconfont icon-bi5' },\n        { text: '3:4', val: '0.75', className: 'iconfont icon-bi1' },\n        { text: '9:16', val: '0.56', className: 'iconfont icon-bi6' },\n        { text: '16:9', val: '1.77', className: 'iconfont icon-bi2' }\n      ],\n      colorarr: [\n        '#e3ffe1',\n        '#ffd2f1',\n        '#dfffff',\n        '#fffbee',\n        '#fff3f3',\n        '#ffffff',\n        '#c5ffc9',\n        '#efd2ff',\n        '#b8f1ff',\n        '#ffeedf',\n        '#ffdfdf',\n        '#808080',\n        '#93d1ad',\n        '#d7ccec',\n        '#a5faff',\n        '#eccfaf',\n        '#ffc7c7',\n        '#484848'\n      ],\n      videoNav: ['发布视频', '管理视频'], //视频管理\n      videoList: [], // 视频列表\n      videoIndex: 0, // 导航索引\n      mediaList: [\n        {\n          src: '/static/tx.png',\n          text: '腾讯视频',\n          link: 'https://v.qq.com'\n        },\n        {\n          src: '/static/yk.png',\n          text: '优酷视频',\n          link: 'https://www.youku.com'\n        },\n        {\n          src: '/static/aqy.png',\n          text: '爱奇艺',\n          link: 'http://m.iqiyi.com'\n        },\n        {\n          src: '/static/sh.png',\n          text: '搜狐视频',\n          link: 'https://m.tv.sohu.com/'\n        }\n      ], //视频列表\n      text: '',\n      showStepTwo: false, // 是否是第2步\n      videoInfo: {\n        // 视频信息\n        des: '',\n        img: '',\n        swf: '',\n        title: ''\n      },\n      searchName: '', // 按名字搜索\n      piclist: [],\n      page: 1, // 默认第一页\n      maxPage: 1, //默认最大页面\n      msg: '加载更多',\n      bgcolor: ''\n    }\n  },\n  mounted() {\n    this.bgcolor = this.url\n    // this.init()\n  },\n  methods: {\n    ...mapActions([\n      'webPage/updateSelectShow',\n      'webPage/updateComponentCate',\n      'webPage/updateCardInfo',\n      'webPage/updateTempDatas',\n      'webPage/updateEditVideo',\n      'webPage/updateVideoIndex'\n    ]),\n    selectColor(x) {\n      this.bgcolor = x\n      this.bgstate = false\n      this.submit('bgpic')\n    },\n    selecPic(x) {\n      this.bgstate = true\n      this.url2 = \"url(' \" + x + \" ') no-repeat fixed center / 100% 100%\"\n      this.url3 = x\n      this.submit('bgpic')\n    },\n    Jump(item) {\n      this['webPage/updateEditVideo'](true)\n      this['webPage/updateTempDatas'](this.$parent.$parent.datas)\n      this['webPage/updateVideoIndex'](this.indexa)\n      this.closeSelect() // 必须关闭，不然就弹窗不出来\n      window.location.href = item.link\n    },\n    // 加载更多\n    more() {\n      this.page++\n      if (this.page <= this.maxPage) {\n        this.listMovie()\n      }\n    },\n    // 切换tab\n    async tabIndex(index) {\n      this.videoIndex = index\n      if (this.videoIndex == 1) {\n        this.searchName = ''\n        this.page = 1\n        this.videoList = []\n        this.listMovie()\n      }\n    },\n    // 获取视频样式\n    async listMovie() {\n      this.msg = '加载中'\n      try {\n        let res = await httpService({\n          url: '/front/list-movie',\n          loading: false,\n          params: {\n            page: this.page\n          }\n        })\n        if (res.status !== 0) {\n          throw new Error(res.message)\n        }\n        this.page = res.data.current_page\n        this.maxPage = res.data.last_page\n        if (this.page < this.maxPage) {\n          this.msg = '加载更多'\n        } else {\n          this.msg = '没有更多'\n        }\n        this.videoList =\n          this.page === 1 ? res.data.data : this.videoList.concat(res.data.data)\n      } catch (error) {\n        dialogService.alert(error.message)\n      }\n    },\n    // 搜索视频\n    async search(val) {\n      try {\n        let res = await httpService({\n          url: '/front/search-movie',\n          method: 'get',\n          params: {\n            search: this.searchName\n          },\n          loading: false\n        })\n        if (res.status !== 0) {\n          throw new Error(res.message)\n        }\n        this.videoList = res.data.data\n      } catch (error) {\n        dialogService.alert(error.message)\n      }\n    },\n    // 阻止冒泡\n    doNothing() {\n      // nothing\n    },\n    // 下一步\n    async next() {\n      try {\n        let res = await httpService({\n          url: '/front/get-movie',\n          body: {\n            url: this.text\n          },\n          method: 'post',\n          loading: false\n        })\n        if (res.status !== 0 || !res.data) {\n          this.text = ''\n          throw new Error('视频获取失败')\n        }\n        this.showStepTwo = true\n        this.videoInfo = res.data\n        // this.item.video.img.src = res.data.img\n      } catch (error) {\n        dialogService.alert(error.message)\n      }\n    },\n    // init\n    async init() {\n      try {\n        // this.$refs.wrapper.style.marginTop = 3.33333 + 'rem'\n        if (this.type === 'video') {\n          this.$refs.wrapper.style.marginTop = '90px'\n        }\n        if (this.type === 'layout') {\n          this.itemCopy = JSON.parse(JSON.stringify(this.item))\n          let params = {\n            ratio: this.itemCopy.ratio,\n            cate_id: this.itemCopy.cate,\n            type: this.itemCopy.layoutType\n          }\n          await this.getComponents(params)\n        } else if (this.type === 'superLink') {\n          this.getMarketPages()\n          this.itemCopy = JSON.parse(JSON.stringify(this.item))\n        } else if (this.type === 'bgcolor') {\n          let _self = this\n          if (this.piclist.length === 0) {\n            this.getpiclist()\n          }\n        } else {\n          this.itemCopy = null\n          await this.getComponentCate()\n        }\n      } catch (err) {\n        dialogService.alert(err.message)\n      }\n    },\n    // 获取背景图片\n    async getpiclist() {\n      let res = await httpService.get('/front/personal_page/customs/background')\n      this.piclist = res.data\n    },\n    // 获取组件分类[如果有组件分类则直接获取]\n    async getComponentCate() {\n      if (this.componentCate.length) {\n        if (!this.category.id) this.selectCate(0)\n        return false\n      }\n      let res = await httpService.get('/front/personal_page/custom/categories')\n      this['webPage/updateComponentCate'](res.data)\n    },\n    // 选择一个分类\n    selectCate(index) {\n      this.category = this.componentCate[index]\n      if (this.category.type === 'imgText' || this.category.type === 'pics') {\n        this.filterStyle = {\n          height: '256px'\n        }\n      } else {\n        this.ratio = {}\n        this.hideFilter()\n      }\n      this.stype = this.componentCate[index].type\n      if (this.componentCate[index].active && this.components.length) return\n      let componentCate = this.componentCate.map((it, i) => {\n        let obj = Object.assign({}, it)\n        obj.active = i === index\n        return obj\n      })\n      this['webPage/updateComponentCate'](componentCate)\n      if (this.category.type === 'bgColor') {\n        if (this.piclist.length === 0) {\n          this.getpiclist()\n        }\n        return\n      } else {\n        this.getComponents()\n      }\n    },\n    // 筛选图片比例|筛选图片排列方式\n    selectPattern(type, index) {\n      if (type === 'imgText' || type === 'pics') {\n        this.ratio = this.filters[index]\n      }\n      this.getComponents()\n    },\n    // 获取当前组件分类下的组件[需要检查他们是否具有筛选项]\n    async getComponents(input) {\n      try {\n        const Params = {\n          ratio: this.ratio.val,\n          cate_id: this.category.id\n        }\n        let params = input || Params\n        let res = await httpService({\n          url: '/front/personal_page/custom/components',\n          params: params\n        })\n        input ? (this.toggles = res.data) : (this.components = res.data)\n      } catch (err) {\n        dialogService.alert(err.message)\n      }\n    },\n    // 获取营销网页列表\n    async getMarketPages() {\n      if (!this.marketPages.length) {\n        let res = await httpService.get('/front/user-marketing')\n        this.marketPages = res.data.data\n      }\n    },\n    // 选择一个营销网页\n    selectMarketPage(index) {\n      this.marketPages = this.marketPages.map((item, _index) => {\n        if (index === _index) {\n          item.selected = !item.selected\n        } else {\n          item.selected = false\n        }\n        return item\n      })\n    },\n    // 选择当前组件\n    async selectThis(type, item) {\n      // 构建一个理想组件[添加和转化组件布局]\n      const _makeComponnet = function(x) {\n        let component = JSON.parse(item.content)\n        component.id = item.id\n        component.cate = item.cate\n        component.price = item.price\n        component.ratio = item.ratio\n        component.hasVip = item.has_vip\n        component.layoutType = item.type\n        if (x) {\n        }\n        return component\n      }\n      if (type === 'add') {\n        setTimeout(() => {\n          this.closeSelect()\n        }, 500)\n        let component = _makeComponnet()\n        // 如果是基础信息则自动填充\n\n        if (component.type === 'baseInfo') {\n          component = await this.autoFill(component)\n        }\n        this.$parent.$parent.selectComponent(component)\n      } else if (type === 'toogle') {\n        let component = _makeComponnet()\n        component.title = this.itemCopy.title\n        component.subTitle = this.itemCopy.subTitle\n        console.warn('切换图文样式可能存在隐患，具体什么问题暂时不清楚')\n        component.infos = JSON.parse(JSON.stringify(this.itemCopy.infos))\n        component.children = JSON.parse(JSON.stringify(this.itemCopy.children))\n        this.itemCopy = JSON.parse(JSON.stringify(component))\n        // this.$parent.$parent.selectComponent(component)\n      } else if (type === 'superLink') {\n        this.itemCopy.children = this.itemCopy.children.map((it, index) => {\n          if (item === index) it.selected = !it.selected\n          return it\n        })\n      } else if (type === 'bgcolor') {\n        this.$parent.$parent.changebgcolor(item)\n        this.closeSelect()\n      } else if (type === 'bgpic') {\n        this.$parent.$parent.changebgpic(item)\n        this.closeSelect()\n      }\n    },\n    // 自动填充基础信息\n    async autoFill(component) {\n      try {\n        let cardInfo = null\n        if (!this.cardInfo) {\n          let res = await httpService.get('/front/card', {\n            user_id: this.user.id\n          })\n          if (res.status === 0) {\n            this['webPage/updateCardInfo'](res.data)\n          }\n          cardInfo = res.data\n        } else {\n          cardInfo = this.cardInfo\n        }\n        component.infos.name = cardInfo.name\n        component.infos.jobs = cardInfo.profession\n        component.infos.company = cardInfo.company\n        component.infos.avatar.href = cardInfo.portrait\n        return component\n      } catch (err) {\n        // 不做处理\n        console.warn(err.message)\n        return component\n      }\n    },\n    // 隐藏筛选条件\n    hideFilter() {\n      this.filterStyle = {\n        height: 0\n      }\n    },\n    // 隐藏显示\n    isHide() {\n      if (this.filterStyle.height) {\n        this.hideFilter()\n      } else {\n        this.filterStyle = {\n          height: '256px'\n        }\n      }\n    },\n    // 提交确定[切换布局和添加超链接]\n    submit(type) {\n      if (type === 'toogle') {\n        this.closeSelect()\n        this.$parent.$parent.editComponent(this.indexa, this.itemCopy)\n      } else if (type === 'bgpic') {\n        if (this.bgstate) {\n          if (this.url3.length > 0) {\n            this.$parent.$parent.changebgpic(this.url3)\n          }\n        } else {\n          this.selectThis('bgcolor', this.bgcolor)\n        }\n        this.closeSelect()\n      } else {\n        let superLink = { text: '', link: '' }\n        this.marketPages.forEach(item => {\n          if (item.selected) {\n            superLink = {\n              text: item.title,\n              link: `/marketing/detail/${item.id}`\n            }\n          }\n        })\n        this.itemCopy.children.forEach(item => {\n          if (item.selected) {\n            item.img.superLink = superLink\n            delete item.selected\n          }\n        })\n        this.closeSelect()\n        this.$parent.$parent.editComponent(this.indexa, this.itemCopy)\n      }\n    },\n    // 关闭组件选择\n    closeSelect() {\n      this.show = false\n\n      if (this.type == 'video') {\n        this.showStepTwo = false\n        this.videoIndex = 0\n        this.text = ''\n        this.videoInfo = {}\n      }\n\n      this['webPage/updateSelectShow'](false)\n    },\n    // 上一步\n    pre() {\n      this.showStepTwo = false\n    },\n    // 保存\n    async save() {\n      try {\n        let res = null\n        if (this.videoInfo.id) {\n          res = await httpService.post('/front/edit-movie', {\n            id: this.videoInfo.id,\n            title: this.videoInfo.title,\n            description: this.videoInfo.des,\n            img: this.videoInfo.img,\n            swf: this.videoInfo.swf,\n            url: this.videoInfo.url\n          })\n        } else {\n          res = await httpService.post('/front/add-movie', {\n            title: this.videoInfo.title,\n            description: this.videoInfo.des,\n            img: this.videoInfo.img,\n            swf: this.videoInfo.swf,\n            url: this.text\n          })\n        }\n        if (res.status !== 0) {\n          dialogService.alert(err.message)\n        }\n        this.text = ''\n        this.item.video.title = this.videoInfo.title\n        this.item.video.content = this.videoInfo.des\n        this.item.video.link = this.videoInfo.swf\n        this.item.video.img.src = this.videoInfo.img\n        this.closeSelect()\n      } catch (err) {\n        dialogService.alert(err.message)\n      }\n    },\n    childValue(val) {\n      // 编辑的视频\n      this.videoInfo = val\n      this.videoInfo.des = val.description\n      this.showStepTwo = true\n      this.videoIndex = 0\n    },\n    //选择的视频\n    selectValue(val) {\n      this.item.video.title = val.title\n      this.item.video.content = val.description\n      this.item.video.link = val.swf\n      this.item.video.img.src = val.img\n      this.closeSelect()\n    },\n    // 删除视频\n    del(id, index) {\n      let self = this\n      httpService({\n        url: '/front/delete-movie',\n        method: 'get',\n        loading: false,\n        params: {\n          id: id\n        }\n      })\n        .then(() => {\n          self.videoList.splice(index, 1)\n          self.page = 1\n          self.listMovie()\n        })\n        .catch(err => {\n          dialogService.alert(err.message)\n        })\n    }\n  },\n  computed: {\n    ...mapState({\n      user: state => state.user.userInfo,\n      selectShow: state => state.webPage.selectShow,\n      cardInfo: state => state.webPage.cardInfo,\n      componentCate: state => state.webPage.componentCate\n    })\n  },\n  components: {\n    VideoItem\n  },\n  watch: {\n    selectShow: function(newVal, oldVal) {\n      if (newVal) {\n        this.init()\n      }\n      setTimeout(() => {\n        this.show = newVal\n      })\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"index.vue","sourceRoot":"src/components/ComponentHandler","sourcesContent":["<template>\n  <div class=\"components-wrapper\" @click=\"closeSelect()\" @touchmove.prevent=\"doNothing()\">\n    <div class=\"wrapper\" :class=\"[show ? 'show': '', type]\" ref=\"wrapper\" @touchmove.prevent=\"doNothing()\" @click.stop=\"doNothing()\">\n      <span class=\"close-btn\" @click=\"closeSelect()\">\n        <i class=\"iconfont icon-cuo1\" style=\"font-size:24px\"></i>\n      </span>\n      <!-- 选择组件 -->\n      <template v-if=\"type === 'component'\">\n        <div class=\"cates\">\n          <div class=\"cate\" v-for=\"(item ,index) in componentCate\" :key=\"index\" :class=\"item.active ? 'active' : ''\" @click=\"selectCate(index)\">\n            <div class=\"icon iconfont\" :class=\"'icon-' + item.class_name\"></div>\n            <span v-text=\"item.name\"></span>\n          </div>\n        </div>\n        <div class=\"sort-box\" v-if=\"category.type === 'imgText' || category.type === 'pics'\" @click=\"isHide()\">\n          <span>图片比例</span>\n          <span style=\"transition:all 0.3s\" :class=\"filterStyle.height ? 'rotate180' : ''\">\n            <i class=\"iconfont icon-gongjulandanchu\"></i>\n          </span>\n          <span v-if=\"ratio.text !== undefined\" class=\"ratio-div\">({{ratio.text}})</span>\n        </div>\n        <div class=\"filters\" :style=\"filterStyle\">\n          <div class=\"filter-box ratio-filters\" v-if=\"category.type === 'imgText' || category.type === 'pics'\">\n            <div class=\"filter\" v-for=\"(item, index) in filters\" :key=\"index\" :class=\"[item.val === ratio.val ? 'active' : '']\" @click=\"selectPattern('imgText', index)\">\n              <div class=\"icon\" :class=\"item.className\"></div>\n              <span v-text=\"item.text\"></span>\n            </div>\n          </div>\n        </div>\n        <div v-if=\"stype==='bgColor'\" class=\"bglist\" @touchstart=\"hideFilter()\" @touchmove.stop=\"doNothing()\">\n          <p>背景图片</p>\n          <div class=\"bgpic\" @touchmove.stop=\"doNothing()\">\n            <div v-for=\"(x,index) in piclist\" :class=\"url2 === 'url(\\' '+x.url+ ' \\') no-repeat fixed center / 100% 100%' && bgstate ? 'active' : ''\" :key=\"index\">\n              <img :src=\"x.url\" @click=\"selecPic(x.url)\" />\n            </div>\n          </div>\n          <p>背景色块</p>\n          <ul class=\"bgstyle\">\n            <!-- @click=\"selectThis('bgcolor', x)\" -->\n            <li v-for=\"x in colorarr\" :style=\"'background:'+x\" :key=\"x\" :class=\"x === bgcolor && !bgstate ?'active':''\" @click=\"selectColor(x)\">\n            </li>\n          </ul>\n          <div class=\"empty-component\"></div>\n        </div>\n        <div v-else class=\"components\" @touchstart=\"hideFilter()\" @touchmove.stop=\"doNothing()\">\n          <div class=\"component\" v-for=\"(item, index) in components\" :key=\"index\" @click=\"selectThis('add', item)\">\n            <div class=\"cover\">\n              <img :src=\"item.cover\" alt=\"\">\n            </div>\n            <span v-text=\"item.name\"></span>\n          </div>\n          <div class=\"empty-component\"></div>\n        </div>\n      </template>\n      <!-- 切换布局 -->\n      <template v-if=\"type === 'layout'\">\n        <div class=\"operate-title\" style=\"border-bottom:1px solid #f2f2f2;\">\n          <span>样式切换</span>\n        </div>\n        <div class=\"components\" style=\"padding:0 10px 0\">\n          <div class=\"component\" v-for=\"(item, index) in toggles\" :key=\"index\" @click=\"selectThis('toogle', item)\">\n            <div class=\"cover\">\n              <img :src=\"item.cover\" alt=\"\">\n              <div class=\"selected\" v-if=\"item.id === itemCopy.id\">\n                <span class=\"iconfont icon-success\"></span>\n              </div>\n            </div>\n          </div>\n          <div class=\"empty-component\"></div>\n        </div>\n        <div class=\"foot\">\n          <button type=\"button\" @click=\"closeSelect()\">取消</button>\n          <button type=\"button\" class=\"submit\" @click=\"submit('toogle')\">确定</button>\n        </div>\n      </template>\n      <!-- 添加超链接 -->\n      <template v-if=\"type === 'superLink'\">\n        <div class=\"operate-title\">\n          <span>添加超链接</span>\n        </div>\n        <div class=\"components\">\n          <template v-for=\"(item, index) in itemCopy.children\">\n            <div class=\"component\" :key=\"index\" v-if=\"item.img.src\" @click=\"selectThis('superLink', index)\">\n              <div class=\"cover\">\n                <img :src=\"item.img.src\" alt=\"\">\n                <div class=\"selected\" v-if=\"item.img.superLink.link || item.selected\">\n                  <span class=\"iconfont icon-success\" v-if=\"item.selected\"></span>\n                  <span v-else v-text=\"item.img.superLink.text\"></span>\n                </div>\n              </div>\n            </div>\n          </template>\n          <div class=\"empty-component\"></div>\n          <div class=\"empty-component\"></div>\n          <div class=\"empty-component\"></div>\n        </div>\n        <div style=\"width:100%;height:20px;background:#f2f2f2;\"></div>\n        <div class=\"operate-title\">\n          <span>营销网页</span>\n          <small>*链接营销网页，对方点击图片可跳转至营销网页，仅选择一个链接*</small>\n        </div>\n        <div class=\"marketings\">\n          <div class=\"list-item\" v-for=\"(item, index) in marketPages\" :key=\"index\" @click=\"selectMarketPage(index)\">\n            <span class=\"marketings-name\" v-text=\"item.title\"></span>\n            <span class=\"marketings-date\" v-text=\"item.created_at.substring(0, 10)\"></span>\n            <span class=\"iconfont icon-success\" :class=\"item.selected ? 'active' : ''\"></span>\n          </div>\n        </div>\n        <div class=\"foot\">\n          <button type=\"button\" @click=\"closeSelect()\">取消</button>\n          <button type=\"button\" class=\"submit\" @click=\"submit('superLink')\">确定</button>\n        </div>\n      </template>\n      <!-- 添加视频 -->\n      <template v-if=\"type === 'video'\">\n        <ul class=\"video-manage\">\n          <li v-for=\"(item,index) in videoNav\" :key=\"index\" :class=\"{'active':videoIndex == index}\" @click=\"tabIndex(index)\">{{item}}</li>\n        </ul>\n        <div class=\"vide-content vide-one \" @touchmove.stop=\"doNothing()\" v-if=\" videoIndex===0\">\n          <template v-if=\"!showStepTwo\">\n            <h3>视频入口</h3>\n            <ul class=\"vide-media\">\n              <li v-for=\"(item,index) in mediaList\" :key=\"index\" @click=\"Jump(item)\">\n                <!-- <a :href=\"item.link\"> -->\n                <img :src=\"item.src\" alt=\"\">\n                <p v-text=\"item.text\"></p>\n                <!-- </a> -->\n              </li>\n            </ul>\n            <textarea class=\"vide-address\" v-model=\"text\" placeholder=\"请将视频链接复制到此处，即可插入到个人微网中。\"> </textarea>\n            <h3>上传步骤</h3>\n            <div class=\"vide-step\">\n              <p>1.必须通过提供的视频网站中进行查找视频。</p>\n              <p>2.视频添加步骤:</p>\n              <ul class=\"step\">\n                <li>\n                  <span>1</span>\n                  <p>打开视频</p>\n                </li>\n                <li>\n                  <span>2</span>\n                  <p>找到视频</p>\n                </li>\n                <li>\n                  <span>3</span>\n                  <p>复制视频</p>\n                </li>\n                <li>\n                  <span>4</span>\n                  <p>返回粘贴</p>\n                </li>\n              </ul>\n            </div>\n            <div class=\"btn-warp\">\n              <button class=\"btn\" :class=\"text.length === 0 ? '' : 'active'\" @click=\"next()\" :disabled=\"text.length === 0 ? true : false\">下一步</button>\n\n            </div>\n          </template>\n          <template v-else>\n            <h3>编辑视频</h3>\n            <div class=\"step-two-content\">\n              <div>\n                <span>标题</span>\n                <textarea class=\"title\" placeholder=\"请在这里输入标题名称\" v-model=\"videoInfo.title\"></textarea>\n              </div>\n              <div>\n                <span>内容</span>\n                <textarea class=\"content\" placeholder=\"请在这里输入视频内容\" v-model=\"videoInfo.des\"></textarea>\n              </div>\n              <div class=\"video-info\">\n                <iframe :src=\"videoInfo.swf\" frameborder=\"0\" style=\"width:100%; height:390px;\">\n                </iframe>\n                <!-- <img :src=\"videoInfo.img\" alt=\"\"> -->\n                <!-- <div>\n                  更换封面\n                  <input type=\"file\" accept=\"image/*\" @change=\"uploadImg($event, 'video')\">\n                </div> -->\n              </div>\n              <div class=\"btn-warp\">\n                <button class=\"btn active\" style=\"width:330px\" @click=\"pre\">上一步</button>\n                <button class=\"btn active\" style=\"width:330px\" @click=\"save\">完成</button>\n              </div>\n            </div>\n          </template>\n          <div class=\"empty-component\"></div>\n        </div>\n        <template v-if=\" videoIndex===1\">\n          <div class=\"search\">\n            <div>\n              <i class=\"iconfont icon-sousuo\"></i>\n              <input type=\"text\" v-model=\"searchName\" placeholder=\"搜索\"></div>\n            <span @click=\"search()\">搜索</span>\n          </div>\n          <div class=\"vide-content search-list\" @touchmove.stop=\"doNothing()\">\n            <div v-if=\"videoList.length==0\" style=\"text-align:center;width:100%;padding:40px;font-size:28px;\">暂无数据</div>\n            <template v-else>\n              <VideoItem :content=\"videoList\" @childValue=\"childValue\" @selectValue=\"selectValue\"></VideoItem>\n              <p v-if=\"page < maxPage\" @click=\"more()\" class=\"more\">{{msg}}</p>\n              <p v-else class=\"more\">{{msg}}</p>\n            </template>\n          </div>\n        </template>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex'\nimport VideoItem from '@/components/VideoItem'\nimport httpService from '@/service/httpService'\nimport state from '../../store/modules/user/state'\nimport dialogService from '@/service/dialogService'\n\nexport default {\n  props: ['type', 'item', 'indexa', 'url'],\n  data() {\n    return {\n      bgstate: true, // 背景选择\n      ratio: {}, // 单前所选比例\n      show: false, // 上滑动画状态\n      toggles: [], // 可切换的组件\n      category: {}, // 当前所选分类\n      itemCopy: {}, // 传入组件的副本\n      components: [], // 单前显示的组件\n      marketPages: [], // 营销网页列表\n      filterStyle: {}, // 过滤条件的高度\n      stype: '', // 所选类型\n      url2: '', // 背景类型1\n      url3: '', // 背景类型2\n      filters: [\n        // 比例筛选\n        { text: '1:1', val: '1.00', className: 'iconfont icon-bi4' },\n        { text: '2:3', val: '0.66', className: 'iconfont icon-bi' },\n        { text: '3:2', val: '1.50', className: 'iconfont icon-bi3' },\n        { text: '4:3', val: '1.33', className: 'iconfont icon-bi5' },\n        { text: '3:4', val: '0.75', className: 'iconfont icon-bi1' },\n        { text: '9:16', val: '0.56', className: 'iconfont icon-bi6' },\n        { text: '16:9', val: '1.77', className: 'iconfont icon-bi2' }\n      ],\n      colorarr: [\n        '#e3ffe1',\n        '#ffd2f1',\n        '#dfffff',\n        '#fffbee',\n        '#fff3f3',\n        '#ffffff',\n        '#c5ffc9',\n        '#efd2ff',\n        '#b8f1ff',\n        '#ffeedf',\n        '#ffdfdf',\n        '#808080',\n        '#93d1ad',\n        '#d7ccec',\n        '#a5faff',\n        '#eccfaf',\n        '#ffc7c7',\n        '#484848'\n      ],\n      videoNav: ['发布视频', '管理视频'], //视频管理\n      videoList: [], // 视频列表\n      videoIndex: 0, // 导航索引\n      mediaList: [\n        {\n          src: '/static/tx.png',\n          text: '腾讯视频',\n          link: 'https://v.qq.com'\n        },\n        {\n          src: '/static/yk.png',\n          text: '优酷视频',\n          link: 'https://www.youku.com'\n        },\n        {\n          src: '/static/aqy.png',\n          text: '爱奇艺',\n          link: 'http://m.iqiyi.com'\n        },\n        {\n          src: '/static/sh.png',\n          text: '搜狐视频',\n          link: 'https://m.tv.sohu.com/'\n        }\n      ], //视频列表\n      text: '',\n      showStepTwo: false, // 是否是第2步\n      videoInfo: {\n        // 视频信息\n        des: '',\n        img: '',\n        swf: '',\n        title: ''\n      },\n      searchName: '', // 按名字搜索\n      piclist: [],\n      page: 1, // 默认第一页\n      maxPage: 1, //默认最大页面\n      msg: '加载更多',\n      bgcolor: ''\n    }\n  },\n  mounted() {\n    this.bgcolor = this.url\n    // this.init()\n  },\n  methods: {\n    ...mapActions([\n      'webPage/updateSelectShow',\n      'webPage/updateComponentCate',\n      'webPage/updateCardInfo',\n      'webPage/updateTempDatas',\n      'webPage/updateEditVideo',\n      'webPage/updateVideoIndex'\n    ]),\n    selectColor(x) {\n      this.bgcolor = x\n      this.bgstate = false\n      this.submit('bgpic')\n    },\n    selecPic(x) {\n      this.bgstate = true\n      this.url2 = \"url(' \" + x + \" ') no-repeat fixed center / 100% 100%\"\n      this.url3 = x\n      this.submit('bgpic')\n    },\n    Jump(item) {\n      this['webPage/updateEditVideo'](true)\n      this['webPage/updateTempDatas'](this.$parent.$parent.datas)\n      this['webPage/updateVideoIndex'](this.indexa)\n      this.closeSelect() // 必须关闭，不然就弹窗不出来\n      window.location.href = item.link\n    },\n    // 加载更多\n    more() {\n      this.page++\n      if (this.page <= this.maxPage) {\n        this.listMovie()\n      }\n    },\n    // 切换tab\n    async tabIndex(index) {\n      this.videoIndex = index\n      if (this.videoIndex == 1) {\n        this.searchName = ''\n        this.page = 1\n        this.videoList = []\n        this.listMovie()\n      }\n    },\n    // 获取视频样式\n    async listMovie() {\n      this.msg = '加载中'\n      try {\n        let res = await httpService({\n          url: '/front/list-movie',\n          loading: false,\n          params: {\n            page: this.page\n          }\n        })\n        if (res.status !== 0) {\n          throw new Error(res.message)\n        }\n        this.page = res.data.current_page\n        this.maxPage = res.data.last_page\n        if (this.page < this.maxPage) {\n          this.msg = '加载更多'\n        } else {\n          this.msg = '没有更多'\n        }\n        this.videoList =\n          this.page === 1 ? res.data.data : this.videoList.concat(res.data.data)\n      } catch (error) {\n        dialogService.alert(error.message)\n      }\n    },\n    // 搜索视频\n    async search(val) {\n      try {\n        let res = await httpService({\n          url: '/front/search-movie',\n          method: 'get',\n          params: {\n            search: this.searchName\n          },\n          loading: false\n        })\n        if (res.status !== 0) {\n          throw new Error(res.message)\n        }\n        this.videoList = res.data.data\n      } catch (error) {\n        dialogService.alert(error.message)\n      }\n    },\n    // 阻止冒泡\n    doNothing() {\n      // nothing\n    },\n    // 下一步\n    async next() {\n      try {\n        let res = await httpService({\n          url: '/front/get-movie',\n          body: {\n            url: this.text\n          },\n          method: 'post',\n          loading: false\n        })\n        if (res.status !== 0 || !res.data) {\n          this.text = ''\n          throw new Error('视频获取失败')\n        }\n        this.showStepTwo = true\n        this.videoInfo = res.data\n        // this.item.video.img.src = res.data.img\n      } catch (error) {\n        dialogService.alert(error.message)\n      }\n    },\n    // init\n    async init() {\n      try {\n        // this.$refs.wrapper.style.marginTop = 3.33333 + 'rem'\n        if (this.type === 'video') {\n          this.$refs.wrapper.style.marginTop = '90px'\n        }\n        if (this.type === 'layout') {\n          this.itemCopy = JSON.parse(JSON.stringify(this.item))\n          let params = {\n            ratio: this.itemCopy.ratio,\n            cate_id: this.itemCopy.cate,\n            type: this.itemCopy.layoutType\n          }\n          await this.getComponents(params)\n        } else if (this.type === 'superLink') {\n          this.getMarketPages()\n          this.itemCopy = JSON.parse(JSON.stringify(this.item))\n        } else if (this.type === 'bgcolor') {\n          let _self = this\n          if (this.piclist.length === 0) {\n            this.getpiclist()\n          }\n        } else {\n          this.itemCopy = null\n          await this.getComponentCate()\n        }\n      } catch (err) {\n        dialogService.alert(err.message)\n      }\n    },\n    // 获取背景图片\n    async getpiclist() {\n      let res = await httpService.get('/front/personal_page/customs/background')\n      this.piclist = res.data\n    },\n    // 获取组件分类[如果有组件分类则直接获取]\n    async getComponentCate() {\n      if (this.componentCate.length) {\n        if (!this.category.id) this.selectCate(0)\n        return false\n      }\n      let res = await httpService.get('/front/personal_page/custom/categories')\n      this['webPage/updateComponentCate'](res.data)\n    },\n    // 选择一个分类\n    selectCate(index) {\n      this.category = this.componentCate[index]\n      if (this.category.type === 'imgText' || this.category.type === 'pics') {\n        this.filterStyle = {\n          height: '256px'\n        }\n      } else {\n        this.ratio = {}\n        this.hideFilter()\n      }\n      this.stype = this.componentCate[index].type\n      if (this.componentCate[index].active && this.components.length) return\n      let componentCate = this.componentCate.map((it, i) => {\n        let obj = Object.assign({}, it)\n        obj.active = i === index\n        return obj\n      })\n      this['webPage/updateComponentCate'](componentCate)\n      if (this.category.type === 'bgColor') {\n        if (this.piclist.length === 0) {\n          this.getpiclist()\n        }\n        return\n      } else {\n        this.getComponents()\n      }\n    },\n    // 筛选图片比例|筛选图片排列方式\n    selectPattern(type, index) {\n      if (type === 'imgText' || type === 'pics') {\n        this.ratio = this.filters[index]\n      }\n      this.getComponents()\n    },\n    // 获取当前组件分类下的组件[需要检查他们是否具有筛选项]\n    async getComponents(input) {\n      try {\n        const Params = {\n          ratio: this.ratio.val,\n          cate_id: this.category.id\n        }\n        let params = input || Params\n        let res = await httpService({\n          url: '/front/personal_page/custom/components',\n          params: params\n        })\n        input ? (this.toggles = res.data) : (this.components = res.data)\n      } catch (err) {\n        dialogService.alert(err.message)\n      }\n    },\n    // 获取营销网页列表\n    async getMarketPages() {\n      if (!this.marketPages.length) {\n        let res = await httpService.get('/front/user-marketing')\n        this.marketPages = res.data.data\n      }\n    },\n    // 选择一个营销网页\n    selectMarketPage(index) {\n      this.marketPages = this.marketPages.map((item, _index) => {\n        if (index === _index) {\n          item.selected = !item.selected\n        } else {\n          item.selected = false\n        }\n        return item\n      })\n    },\n    // 选择当前组件\n    async selectThis(type, item) {\n      // 构建一个理想组件[添加和转化组件布局]\n      const _makeComponnet = function(x) {\n        let component = JSON.parse(item.content)\n        component.id = item.id\n        component.cate = item.cate\n        component.price = item.price\n        component.ratio = item.ratio\n        component.hasVip = item.has_vip\n        component.layoutType = item.type\n        if (x) {\n        }\n        return component\n      }\n      if (type === 'add') {\n        setTimeout(() => {\n          this.closeSelect()\n        }, 500)\n        let component = _makeComponnet()\n        // 如果是基础信息则自动填充\n\n        if (component.type === 'baseInfo') {\n          component = await this.autoFill(component)\n        }\n        this.$parent.$parent.selectComponent(component)\n      } else if (type === 'toogle') {\n        let component = _makeComponnet()\n        component.title = this.itemCopy.title\n        component.subTitle = this.itemCopy.subTitle\n        console.warn('切换图文样式可能存在隐患，具体什么问题暂时不清楚')\n        component.infos = JSON.parse(JSON.stringify(this.itemCopy.infos))\n        component.children = JSON.parse(JSON.stringify(this.itemCopy.children))\n        this.itemCopy = JSON.parse(JSON.stringify(component))\n        // this.$parent.$parent.selectComponent(component)\n      } else if (type === 'superLink') {\n        this.itemCopy.children = this.itemCopy.children.map((it, index) => {\n          if (item === index) it.selected = !it.selected\n          return it\n        })\n      } else if (type === 'bgcolor') {\n        this.$parent.$parent.changebgcolor(item)\n        this.closeSelect()\n      } else if (type === 'bgpic') {\n        this.$parent.$parent.changebgpic(item)\n        this.closeSelect()\n      }\n    },\n    // 自动填充基础信息\n    async autoFill(component) {\n      try {\n        let cardInfo = null\n        if (!this.cardInfo) {\n          let res = await httpService.get('/front/card', {\n            user_id: this.user.id\n          })\n          if (res.status === 0) {\n            this['webPage/updateCardInfo'](res.data)\n          }\n          cardInfo = res.data\n        } else {\n          cardInfo = this.cardInfo\n        }\n        component.infos.name = cardInfo.name\n        component.infos.jobs = cardInfo.profession\n        component.infos.company = cardInfo.company\n        component.infos.avatar.href = cardInfo.portrait\n        return component\n      } catch (err) {\n        // 不做处理\n        console.warn(err.message)\n        return component\n      }\n    },\n    // 隐藏筛选条件\n    hideFilter() {\n      this.filterStyle = {\n        height: 0\n      }\n    },\n    // 隐藏显示\n    isHide() {\n      if (this.filterStyle.height) {\n        this.hideFilter()\n      } else {\n        this.filterStyle = {\n          height: '256px'\n        }\n      }\n    },\n    // 提交确定[切换布局和添加超链接]\n    submit(type) {\n      if (type === 'toogle') {\n        this.closeSelect()\n        this.$parent.$parent.editComponent(this.indexa, this.itemCopy)\n      } else if (type === 'bgpic') {\n        if (this.bgstate) {\n          if (this.url3.length > 0) {\n            this.$parent.$parent.changebgpic(this.url3)\n          }\n        } else {\n          this.selectThis('bgcolor', this.bgcolor)\n        }\n        this.closeSelect()\n      } else {\n        let superLink = { text: '', link: '' }\n        this.marketPages.forEach(item => {\n          if (item.selected) {\n            superLink = {\n              text: item.title,\n              link: `/marketing/detail/${item.id}`\n            }\n          }\n        })\n        this.itemCopy.children.forEach(item => {\n          if (item.selected) {\n            item.img.superLink = superLink\n            delete item.selected\n          }\n        })\n        this.closeSelect()\n        this.$parent.$parent.editComponent(this.indexa, this.itemCopy)\n      }\n    },\n    // 关闭组件选择\n    closeSelect() {\n      this.show = false\n\n      if (this.type == 'video') {\n        this.showStepTwo = false\n        this.videoIndex = 0\n        this.text = ''\n        this.videoInfo = {}\n      }\n\n      this['webPage/updateSelectShow'](false)\n    },\n    // 上一步\n    pre() {\n      this.showStepTwo = false\n    },\n    // 保存\n    async save() {\n      try {\n        let res = null\n        if (this.videoInfo.id) {\n          res = await httpService.post('/front/edit-movie', {\n            id: this.videoInfo.id,\n            title: this.videoInfo.title,\n            description: this.videoInfo.des,\n            img: this.videoInfo.img,\n            swf: this.videoInfo.swf,\n            url: this.videoInfo.url\n          })\n        } else {\n          res = await httpService.post('/front/add-movie', {\n            title: this.videoInfo.title,\n            description: this.videoInfo.des,\n            img: this.videoInfo.img,\n            swf: this.videoInfo.swf,\n            url: this.text\n          })\n        }\n        if (res.status !== 0) {\n          dialogService.alert(err.message)\n        }\n        this.text = ''\n        this.item.video.title = this.videoInfo.title\n        this.item.video.content = this.videoInfo.des\n        this.item.video.link = this.videoInfo.swf\n        this.item.video.img.src = this.videoInfo.img\n        this.closeSelect()\n      } catch (err) {\n        dialogService.alert(err.message)\n      }\n    },\n    childValue(val) {\n      // 编辑的视频\n      this.videoInfo = val\n      this.videoInfo.des = val.description\n      this.showStepTwo = true\n      this.videoIndex = 0\n    },\n    //选择的视频\n    selectValue(val) {\n      this.item.video.title = val.title\n      this.item.video.content = val.description\n      this.item.video.link = val.swf\n      this.item.video.img.src = val.img\n      this.closeSelect()\n    },\n    // 删除视频\n    del(id, index) {\n      let self = this\n      httpService({\n        url: '/front/delete-movie',\n        method: 'get',\n        loading: false,\n        params: {\n          id: id\n        }\n      })\n        .then(() => {\n          self.videoList.splice(index, 1)\n          self.page = 1\n          self.listMovie()\n        })\n        .catch(err => {\n          dialogService.alert(err.message)\n        })\n    }\n  },\n  computed: {\n    ...mapState({\n      user: state => state.user.userInfo,\n      selectShow: state => state.webPage.selectShow,\n      cardInfo: state => state.webPage.cardInfo,\n      componentCate: state => state.webPage.componentCate\n    })\n  },\n  components: {\n    VideoItem\n  },\n  watch: {\n    selectShow: function(newVal, oldVal) {\n      if (newVal) {\n        this.init()\n      }\n      setTimeout(() => {\n        this.show = newVal\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import './index.scss';\n</style>\n"]}]}
{"remainingRequest":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiang/work/hytx/hytx-rebuild/src/components/AppAblum/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiang/work/hytx/hytx-rebuild/src/components/AppAblum/index.vue","mtime":1545377467271},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiang/work/hytx/hytx-rebuild/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: ['data'],\n  mounted() {\n    this.style = {\n      width: this.data.ablum.length + '00%',\n      transform: 'translateX(-' + this.data.index * 750 + 'px)'\n    }\n  },\n  data() {\n    return {\n      pos: null,\n      style: null,\n      oldScale: null,\n      distance: null,\n      touchType: false, // false【滑动】 true【缩放】\n      ablum: this.data.ablum,\n      page: this.data.index + 1,\n      allPage: this.data.ablum.length\n    }\n  },\n  methods: {\n    close() {\n      this.$emit('close')\n    },\n    // touchstart\n    startHander(event) {\n      if (event.touches.length > 1) {\n        this.touchType = true\n        let x = event.touches[0].pageX - event.touches[1].pageX\n        let y = event.touches[0].pageY - event.touches[1].pageY\n        this.distance = Math.sqrt(x * x + y * y)\n        let index = this.page - 1\n        let imgs = this.$refs.ablum.querySelectorAll('.img')\n        try {\n          let style = imgs[index].style.transform\n          this.oldScale = style ? style.replace(/[^0-9.]/gi, '') : 1\n        } catch (err) {\n          this.oldScale = 1\n        }\n      } else {\n        this.pos = {\n          x: event.touches[0].pageX,\n          y: event.touches[0].pageY\n        }\n      }\n    },\n    // touchmove\n    moveHander(event) {\n      // nothing\n    },\n    // touchend\n    endHander(event) {\n      if (this.touchType) {\n        setTimeout(() => {\n          this.touchType = false\n        })\n      } else {\n        let pos = {\n          x: event.changedTouches[0].pageX,\n          y: event.changedTouches[0].pageY\n        }\n        let index = this.page - 1\n        let imgBoxs = this.$refs.ablum.querySelectorAll('.img-box')\n        let imgBox = imgBoxs[index]\n        if (\n          pos.x - this.pos.x >= 80 &&\n          this.page !== 1 &&\n          imgBox.scrollLeft === 0\n        ) {\n          // 左滑\n          this.page = this.page - 1\n        } else if (\n          pos.x - this.pos.x <= -80 &&\n          this.page !== this.ablum.length &&\n          (imgBox.scrollLeft === imgBox.offsetWidth || imgBox.scrollLeft === 0)\n        ) {\n          // 右滑\n          // if (imgBox.scrollLeft)\n          this.page = this.page + 1\n        }\n        this.style = {\n          width: this.data.ablum.length + '00%',\n          transform: 'translateX(-' + (this.page - 1) * 750 + 'px)'\n        }\n        this.pos = null\n      }\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/AppAblum","sourcesContent":["<!-- \n    @name AppAblum\n    @desc 通用相册组件\n    @props \n        data: [\n            {\n                src,\n                superLink: {\n                    link,\n                    text\n                }\n            }\n        ]\n-->\n\n<template>\n  <div class=\"app-ablum\">\n    <div class=\"content\" @touchstart=\"startHander($event)\" @touchmove=\"moveHander($event)\" @touchend=\"endHander($event)\">\n      <div class=\"img-wrapper\" :style=\"style\" ref=\"ablum\">\n        <div class=\"img-box\" v-for=\"(item, index) in ablum\" :key=\"index\" @click=\"close()\">\n          <img class=\"img\" :src=\" item.src || item\" alt=\"\">\n          <div class=\"loading\">\n            <img src=\"\" alt=\"\">\n          </div>\n          <template v-if=\"item.superLink\">\n            <router-link v-if=\"item.superLink.link\" class=\"ablum-link\" :to=\"item.superLink.link\">\n              <i class=\"iconfont icon-738bianjiqi_chaolianjie\"></i>{{item.superLink.text}}</router-link>\n          </template>\n        </div>\n      </div>\n    </div>\n    <div class=\"page\">\n      <span>{{page}}/{{allPage}}</span>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: ['data'],\n  mounted() {\n    this.style = {\n      width: this.data.ablum.length + '00%',\n      transform: 'translateX(-' + this.data.index * 750 + 'px)'\n    }\n  },\n  data() {\n    return {\n      pos: null,\n      style: null,\n      oldScale: null,\n      distance: null,\n      touchType: false, // false【滑动】 true【缩放】\n      ablum: this.data.ablum,\n      page: this.data.index + 1,\n      allPage: this.data.ablum.length\n    }\n  },\n  methods: {\n    close() {\n      this.$emit('close')\n    },\n    // touchstart\n    startHander(event) {\n      if (event.touches.length > 1) {\n        this.touchType = true\n        let x = event.touches[0].pageX - event.touches[1].pageX\n        let y = event.touches[0].pageY - event.touches[1].pageY\n        this.distance = Math.sqrt(x * x + y * y)\n        let index = this.page - 1\n        let imgs = this.$refs.ablum.querySelectorAll('.img')\n        try {\n          let style = imgs[index].style.transform\n          this.oldScale = style ? style.replace(/[^0-9.]/gi, '') : 1\n        } catch (err) {\n          this.oldScale = 1\n        }\n      } else {\n        this.pos = {\n          x: event.touches[0].pageX,\n          y: event.touches[0].pageY\n        }\n      }\n    },\n    // touchmove\n    moveHander(event) {\n      // nothing\n    },\n    // touchend\n    endHander(event) {\n      if (this.touchType) {\n        setTimeout(() => {\n          this.touchType = false\n        })\n      } else {\n        let pos = {\n          x: event.changedTouches[0].pageX,\n          y: event.changedTouches[0].pageY\n        }\n        let index = this.page - 1\n        let imgBoxs = this.$refs.ablum.querySelectorAll('.img-box')\n        let imgBox = imgBoxs[index]\n        if (\n          pos.x - this.pos.x >= 80 &&\n          this.page !== 1 &&\n          imgBox.scrollLeft === 0\n        ) {\n          // 左滑\n          this.page = this.page - 1\n        } else if (\n          pos.x - this.pos.x <= -80 &&\n          this.page !== this.ablum.length &&\n          (imgBox.scrollLeft === imgBox.offsetWidth || imgBox.scrollLeft === 0)\n        ) {\n          // 右滑\n          // if (imgBox.scrollLeft)\n          this.page = this.page + 1\n        }\n        this.style = {\n          width: this.data.ablum.length + '00%',\n          transform: 'translateX(-' + (this.page - 1) * 750 + 'px)'\n        }\n        this.pos = null\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.app-ablum {\n  top: 0;\n  left: 0;\n  z-index: 9;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  overflow: hidden;\n  background: rgb(0, 0, 0);\n  .close {\n    z-index: 2;\n    right: 20px;\n    color: #fff;\n    position: fixed;\n  }\n  .content {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    position: relative;\n  }\n  .img-wrapper {\n    height: 100%;\n    overflow: hidden;\n    position: relative;\n    transition: all 0.3s ease-out;\n  }\n  .img-box {\n    float: left;\n    width: 750px;\n    height: 100%;\n    display: flex;\n    overflow: auto;\n    align-items: center;\n    justify-content: center;\n    .img {\n      width: 100%;\n      transform-origin: 0;\n    }\n  }\n  .ablum-link {\n    position: absolute;\n    font-size: 32px;\n    bottom: 120px;\n    color: #fff;\n  }\n  .page {\n    top: 40px;\n    width: 100%;\n    color: #fff;\n    position: fixed;\n    font-size: 28px;\n    text-align: center;\n  }\n}\n</style>\n"]}]}